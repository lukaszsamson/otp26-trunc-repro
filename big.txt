Content-Length: 553441

{"id":9,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"deprecated":false,"detail":"variable","documentation":{"kind":"markdown","value":""},"insertText":"client_id","insertTextFormat":2,"kind":6,"label":"client_id","sortText":"00000000","tags":[]},{"deprecated":false,"detail":"variable","documentation":{"kind":"markdown","value":""},"insertText":"client_secret","insertTextFormat":2,"kind":6,"label":"client_secret","sortText":"00000001","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Key-based access to data structures."},"filterText":"Access","insertText":"Access","insertTextFormat":2,"kind":8,"label":"Access","labelDetails":{"description":"Access","detail":"behaviour"},"sortText":"00000002","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Agents are a simple abstraction around state."},"filterText":"Agent","insertText":"Agent","insertTextFormat":2,"kind":9,"label":"Agent","labelDetails":{"description":"Agent"},"sortText":"00000003","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":""},"filterText":"Airthings","insertText":"Airthings","insertTextFormat":2,"kind":22,"label":"Airthings","labelDetails":{"description":"Airthings","detail":"struct"},"sortText":"00000004","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"A module for working with applications and defining application callbacks."},"filterText":"Application","insertText":"Application","insertTextFormat":2,"kind":8,"label":"Application","labelDetails":{"description":"Application","detail":"behaviour"},"sortText":"00000005","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Atoms are constants whose values are their own name."},"filterText":"Atom","insertText":"Atom","insertTextFormat":2,"kind":9,"label":"Atom","labelDetails":{"description":"Atom"},"sortText":"00000006","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"This module provides data encoding and decoding functions\naccording to [RFC 4648](https://tools.ietf.org/html/rfc4648)."},"filterText":"Base","insertText":"Base","insertTextFormat":2,"kind":9,"label":"Base","labelDetails":{"description":"Base"},"sortText":"00000007","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A set of functions that perform calculations on bits."},"filterText":"Bitwise","insertText":"Bitwise","insertTextFormat":2,"kind":9,"label":"Bitwise","labelDetails":{"description":"Bitwise"},"sortText":"00000008","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"This module defines the responsibilities for working with\ncalendars, dates, times and datetimes in Elixir."},"filterText":"Calendar","insertText":"Calendar","insertTextFormat":2,"kind":8,"label":"Calendar","labelDetails":{"description":"Calendar","detail":"behaviour"},"sortText":"00000009","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":"Client","insertText":"Client","insertTextFormat":2,"kind":9,"label":"Client","labelDetails":{"description":"Airthings.Client"},"sortText":"00000010","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Utilities for managing code compilation, code evaluation, and code loading."},"filterText":"Code","insertText":"Code","insertTextFormat":2,"kind":9,"label":"Code","labelDetails":{"description":"Code"},"sortText":"00000011","tags":[]},{"deprecated":false,"detail":"protocol","documentation":{"kind":"markdown","value":"A protocol to traverse data structures."},"filterText":"Collectable","insertText":"Collectable","insertTextFormat":2,"kind":8,"label":"Collectable","labelDetails":{"description":"Collectable","detail":"protocol"},"sortText":"00000012","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A simple keyword-based configuration API."},"filterText":"Config","insertText":"Config","insertTextFormat":2,"kind":9,"label":"Config","labelDetails":{"description":"Config"},"sortText":"00000013","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"A Date struct and functions."},"filterText":"Date","insertText":"Date","insertTextFormat":2,"kind":22,"label":"Date","labelDetails":{"description":"Date","detail":"struct"},"sortText":"00000014","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"A datetime implementation with a time zone."},"filterText":"DateTime","insertText":"DateTime","insertTextFormat":2,"kind":22,"label":"DateTime","labelDetails":{"description":"DateTime","detail":"struct"},"sortText":"00000015","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":"DialyxirVendored","insertText":"DialyxirVendored","insertTextFormat":2,"kind":9,"label":"DialyxirVendored","labelDetails":{"description":"DialyxirVendored"},"sortText":"00000016","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"A supervisor optimized to only start children dynamically."},"filterText":"DynamicSupervisor","insertText":"DynamicSupervisor","insertTextFormat":2,"kind":22,"label":"DynamicSupervisor","labelDetails":{"description":"DynamicSupervisor","detail":"struct"},"sortText":"00000017","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"EEx stands for Embedded Elixir."},"filterText":"EEx","insertText":"EEx","insertTextFormat":2,"kind":9,"label":"EEx","labelDetails":{"description":"EEx"},"sortText":"00000018","tags":[]},{"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":""},"filterText":"Elixir","insertText":"Elixir","insertTextFormat":2,"kind":9,"label":"Elixir","labelDetails":{"description":"Elixir","detail":"alias"},"sortText":"00000019","tags":[]},{"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":""},"filterText":"ElixirLS","insertText":"ElixirLS","insertTextFormat":2,"kind":9,"label":"ElixirLS","labelDetails":{"description":"ElixirLS","detail":"alias"},"sortText":"00000020","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ElxirSense is a Elixir library that implements useful features for any editor/tool that needs\nto introspect context-aware information about Elixir source code."},"filterText":"ElixirSense","insertText":"ElixirSense","insertTextFormat":2,"kind":9,"label":"ElixirSense","labelDetails":{"description":"ElixirSense"},"sortText":"00000021","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Functions for working with collections (known as enumerables)."},"filterText":"Enum","insertText":"Enum","insertTextFormat":2,"kind":9,"label":"Enum","labelDetails":{"description":"Enum"},"sortText":"00000022","tags":[]},{"deprecated":false,"detail":"protocol","documentation":{"kind":"markdown","value":"Enumerable protocol used by `Enum` and `Stream` modules."},"filterText":"Enumerable","insertText":"Enumerable","insertTextFormat":2,"kind":8,"label":"Enumerable","labelDetails":{"description":"Enumerable","detail":"protocol"},"sortText":"00000023","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Erl2exVendored is an Erlang to Elixir transpiler, converting well-formed Erlang\nsource to Elixir source with equivalent functionality."},"filterText":"Erl2exVendored","insertText":"Erl2exVendored","insertTextFormat":2,"kind":9,"label":"Erl2exVendored","labelDetails":{"description":"Erl2exVendored"},"sortText":"00000024","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Convert Erlang style structs and error messages to equivalent Elixir."},"filterText":"ErlexVendored","insertText":"ErlexVendored","insertTextFormat":2,"kind":9,"label":"ErlexVendored","labelDetails":{"description":"ErlexVendored"},"sortText":"00000025","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Unit testing framework for Elixir."},"filterText":"ExUnit","insertText":"ExUnit","insertTextFormat":2,"kind":9,"label":"ExUnit","labelDetails":{"description":"ExUnit"},"sortText":"00000026","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Functions to format throw/catch/exit and exceptions."},"filterText":"Exception","insertText":"Exception","insertTextFormat":2,"kind":8,"label":"Exception","labelDetails":{"description":"Exception","detail":"behaviour"},"sortText":"00000027","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"This module contains functions to manipulate files."},"filterText":"File","insertText":"File","insertTextFormat":2,"kind":9,"label":"File","labelDetails":{"description":"File"},"sortText":"00000028","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Functions for working with floating-point numbers."},"filterText":"Float","insertText":"Float","insertTextFormat":2,"kind":9,"label":"Float","labelDetails":{"description":"Float"},"sortText":"00000029","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A set of functions for working with functions."},"filterText":"Function","insertText":"Function","insertTextFormat":2,"kind":9,"label":"Function","labelDetails":{"description":"Function"},"sortText":"00000030","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"A behaviour module for implementing the server of a client-server relation."},"filterText":"GenServer","insertText":"GenServer","insertTextFormat":2,"kind":8,"label":"GenServer","labelDetails":{"description":"GenServer","detail":"behaviour"},"sortText":"00000031","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":"Hex","insertText":"Hex","insertTextFormat":2,"kind":9,"label":"Hex","labelDetails":{"description":"Hex"},"sortText":"00000032","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Elixir's interactive shell."},"filterText":"IEx","insertText":"IEx","insertTextFormat":2,"kind":9,"label":"IEx","labelDetails":{"description":"IEx"},"sortText":"00000033","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Functions handling input/output (IO)."},"filterText":"IO","insertText":"IO","insertTextFormat":2,"kind":9,"label":"IO","labelDetails":{"description":"IO"},"sortText":"00000034","tags":[]},{"deprecated":false,"detail":"protocol","documentation":{"kind":"markdown","value":"The `Inspect` protocol converts an Elixir data structure into an\nalgebra document."},"filterText":"Inspect","insertText":"Inspect","insertTextFormat":2,"kind":8,"label":"Inspect","labelDetails":{"description":"Inspect","detail":"protocol"},"sortText":"00000035","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Functions for working with integers."},"filterText":"Integer","insertText":"Integer","insertTextFormat":2,"kind":9,"label":"Integer","labelDetails":{"description":"Integer"},"sortText":"00000036","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A blazing fast JSON parser and generator in pure Elixir.\n"},"filterText":"Jason","insertText":"Jason","insertTextFormat":2,"kind":9,"label":"Jason","labelDetails":{"description":"Jason"},"sortText":"00000037","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A blazing fast JSON parser and generator in pure Elixir.\n"},"filterText":"JasonV","insertText":"JasonV","insertTextFormat":2,"kind":9,"label":"JasonV","labelDetails":{"description":"JasonV"},"sortText":"00000038","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"`Kernel` is Elixir's default environment."},"filterText":"Kernel","insertText":"Kernel","insertTextFormat":2,"kind":9,"label":"Kernel","labelDetails":{"description":"Kernel"},"sortText":"00000039","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A keyword list is a list that consists exclusively of two-element tuples."},"filterText":"Keyword","insertText":"Keyword","insertTextFormat":2,"kind":9,"label":"Keyword","labelDetails":{"description":"Keyword"},"sortText":"00000040","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Linked lists hold zero, one, or more elements in the chosen order."},"filterText":"List","insertText":"List","insertTextFormat":2,"kind":9,"label":"List","labelDetails":{"description":"List"},"sortText":"00000041","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A logger for Elixir applications."},"filterText":"Logger","insertText":"Logger","insertTextFormat":2,"kind":9,"label":"Logger","labelDetails":{"description":"Logger"},"sortText":"00000042","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Maps MIME types to its file extensions and vice versa."},"filterText":"MIME","insertText":"MIME","insertTextFormat":2,"kind":9,"label":"MIME","labelDetails":{"description":"MIME"},"sortText":"00000043","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Functions for manipulating AST and implementing macros."},"filterText":"Macro","insertText":"Macro","insertTextFormat":2,"kind":9,"label":"Macro","labelDetails":{"description":"Macro"},"sortText":"00000044","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Maps are the \"go to\" key-value data structure in Elixir."},"filterText":"Map","insertText":"Map","insertTextFormat":2,"kind":9,"label":"Map","labelDetails":{"description":"Map"},"sortText":"00000045","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Functions that work on sets."},"filterText":"MapSet","insertText":"MapSet","insertTextFormat":2,"kind":22,"label":"MapSet","labelDetails":{"description":"MapSet","detail":"struct"},"sortText":"00000046","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mix is a build tool that provides tasks for creating, compiling,\nand testing Elixir projects, managing its dependencies, and more."},"filterText":"Mix","insertText":"Mix","insertTextFormat":2,"kind":9,"label":"Mix","labelDetails":{"description":"Mix"},"sortText":"00000047","tags":[]},{"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":""},"filterText":"MixTaskArchiveDeps","insertText":"MixTaskArchiveDeps","insertTextFormat":2,"kind":9,"label":"MixTaskArchiveDeps","labelDetails":{"description":"MixTaskArchiveDeps","detail":"alias"},"sortText":"00000048","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Provides functions to deal with modules during compilation time."},"filterText":"Module","insertText":"Module","insertTextFormat":2,"kind":8,"label":"Module","labelDetails":{"description":"Module","detail":"behaviour"},"sortText":"00000049","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"A NaiveDateTime struct (without a time zone) and functions."},"filterText":"NaiveDateTime","insertText":"NaiveDateTime","insertTextFormat":2,"kind":22,"label":"NaiveDateTime","labelDetails":{"description":"NaiveDateTime","detail":"struct"},"sortText":"00000050","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Functions related to VM nodes."},"filterText":"Node","insertText":"Node","insertTextFormat":2,"kind":9,"label":"Node","labelDetails":{"description":"Node"},"sortText":"00000051","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Functions for parsing command line arguments."},"filterText":"OptionParser","insertText":"OptionParser","insertTextFormat":2,"kind":9,"label":"OptionParser","labelDetails":{"description":"OptionParser"},"sortText":"00000052","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A supervisor that starts multiple partitions of the same child."},"filterText":"PartitionSupervisor","insertText":"PartitionSupervisor","insertTextFormat":2,"kind":9,"label":"PartitionSupervisor","labelDetails":{"description":"PartitionSupervisor"},"sortText":"00000053","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"This module provides conveniences for manipulating or\nretrieving file system paths."},"filterText":"Path","insertText":"Path","insertTextFormat":2,"kind":9,"label":"Path","labelDetails":{"description":"Path"},"sortText":"00000054","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Implements glob matching using the same semantics as `Path.wildcard/2`, but\nwithout any filesystem interaction.\n"},"filterText":"PathGlobVendored","insertText":"PathGlobVendored","insertTextFormat":2,"kind":9,"label":"PathGlobVendored","labelDetails":{"description":"PathGlobVendored"},"sortText":"00000055","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Functions for interacting with the external world through ports."},"filterText":"Port","insertText":"Port","insertTextFormat":2,"kind":9,"label":"Port","labelDetails":{"description":"Port"},"sortText":"00000056","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Conveniences for working with processes and the process dictionary."},"filterText":"Process","insertText":"Process","insertTextFormat":2,"kind":9,"label":"Process","labelDetails":{"description":"Process"},"sortText":"00000057","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Reference and functions for working with protocols."},"filterText":"Protocol","insertText":"Protocol","insertTextFormat":2,"kind":9,"label":"Protocol","labelDetails":{"description":"Protocol"},"sortText":"00000058","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Ranges represent a sequence of zero, one or many, ascending\nor descending integers with a common difference called step."},"filterText":"Range","insertText":"Range","insertTextFormat":2,"kind":22,"label":"Range","labelDetails":{"description":"Range","detail":"struct"},"sortText":"00000059","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Module to work with, define, and import records."},"filterText":"Record","insertText":"Record","insertTextFormat":2,"kind":9,"label":"Record","labelDetails":{"description":"Record"},"sortText":"00000060","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Provides regular expressions for Elixir."},"filterText":"Regex","insertText":"Regex","insertTextFormat":2,"kind":22,"label":"Regex","labelDetails":{"description":"Regex","detail":"struct"},"sortText":"00000061","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A local, decentralized and scalable key-value process storage."},"filterText":"Registry","insertText":"Registry","insertTextFormat":2,"kind":9,"label":"Registry","labelDetails":{"description":"Registry"},"sortText":"00000062","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Functions for creating and composing streams."},"filterText":"Stream","insertText":"Stream","insertTextFormat":2,"kind":22,"label":"Stream","labelDetails":{"description":"Stream","detail":"struct"},"sortText":"00000063","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Strings in Elixir are UTF-8 encoded binaries."},"filterText":"String","insertText":"String","insertTextFormat":2,"kind":9,"label":"String","labelDetails":{"description":"String"},"sortText":"00000064","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Controls an IO device process that wraps a string."},"filterText":"StringIO","insertText":"StringIO","insertTextFormat":2,"kind":9,"label":"StringIO","labelDetails":{"description":"StringIO"},"sortText":"00000065","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"A behaviour module for implementing supervisors."},"filterText":"Supervisor","insertText":"Supervisor","insertTextFormat":2,"kind":8,"label":"Supervisor","labelDetails":{"description":"Supervisor","detail":"behaviour"},"sortText":"00000066","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"The `System` module provides functions that interact directly\nwith the VM or the host system."},"filterText":"System","insertText":"System","insertTextFormat":2,"kind":9,"label":"System","labelDetails":{"description":"System"},"sortText":"00000067","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Conveniences for spawning and awaiting tasks."},"filterText":"Task","insertText":"Task","insertTextFormat":2,"kind":22,"label":"Task","labelDetails":{"description":"Task","detail":"struct"},"sortText":"00000068","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"A HTTP toolkit for building API clients using middlewares."},"filterText":"Tesla","insertText":"Tesla","insertTextFormat":2,"kind":9,"label":"Tesla","labelDetails":{"description":"Tesla"},"sortText":"00000069","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"A Time struct and functions."},"filterText":"Time","insertText":"Time","insertTextFormat":2,"kind":22,"label":"Time","labelDetails":{"description":"Time","detail":"struct"},"sortText":"00000070","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":""},"filterText":"Token","insertText":"Token","insertTextFormat":2,"kind":22,"label":"Token","labelDetails":{"description":"Airthings.Token","detail":"struct"},"sortText":"00000071","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Functions for working with tuples."},"filterText":"Tuple","insertText":"Tuple","insertTextFormat":2,"kind":9,"label":"Tuple","labelDetails":{"description":"Tuple"},"sortText":"00000072","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Utilities for working with URIs."},"filterText":"URI","insertText":"URI","insertTextFormat":2,"kind":22,"label":"URI","labelDetails":{"description":"URI","detail":"struct"},"sortText":"00000073","tags":[]},{"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Functions for parsing and matching versions against requirements."},"filterText":"Version","insertText":"Version","insertTextFormat":2,"kind":22,"label":"Version","labelDetails":{"description":"Version","detail":"struct"},"sortText":"00000074","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":application","insertText":"application","insertTextFormat":2,"kind":8,"label":":application","labelDetails":{"description":":application","detail":"behaviour"},"sortText":"00000075","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":application_controller","insertText":"application_controller","insertTextFormat":2,"kind":9,"label":":application_controller","labelDetails":{"description":":application_controller"},"sortText":"00000076","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":application_master","insertText":"application_master","insertTextFormat":2,"kind":9,"label":":application_master","labelDetails":{"description":":application_master"},"sortText":"00000077","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":application_starter","insertText":"application_starter","insertTextFormat":2,"kind":9,"label":":application_starter","labelDetails":{"description":":application_starter"},"sortText":"00000078","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":argparse","insertText":"argparse","insertTextFormat":2,"kind":9,"label":":argparse","labelDetails":{"description":":argparse"},"sortText":"00000079","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":array","insertText":"array","insertTextFormat":2,"kind":9,"label":":array","labelDetails":{"description":":array"},"sortText":"00000080","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":asn1rt_nif","insertText":"asn1rt_nif","insertTextFormat":2,"kind":9,"label":":asn1rt_nif","labelDetails":{"description":":asn1rt_nif"},"sortText":"00000081","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":atomics","insertText":"atomics","insertTextFormat":2,"kind":9,"label":":atomics","labelDetails":{"description":":atomics"},"sortText":"00000082","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":auth","insertText":"auth","insertTextFormat":2,"kind":9,"label":":auth","labelDetails":{"description":":auth"},"sortText":"00000083","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":base64","insertText":"base64","insertTextFormat":2,"kind":9,"label":":base64","labelDetails":{"description":":base64"},"sortText":"00000084","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_a","insertText":"beam_a","insertTextFormat":2,"kind":9,"label":":beam_a","labelDetails":{"description":":beam_a"},"sortText":"00000085","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_asm","insertText":"beam_asm","insertTextFormat":2,"kind":9,"label":":beam_asm","labelDetails":{"description":":beam_asm"},"sortText":"00000086","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_block","insertText":"beam_block","insertTextFormat":2,"kind":9,"label":":beam_block","labelDetails":{"description":":beam_block"},"sortText":"00000087","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_bounds","insertText":"beam_bounds","insertTextFormat":2,"kind":9,"label":":beam_bounds","labelDetails":{"description":":beam_bounds"},"sortText":"00000088","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_call_types","insertText":"beam_call_types","insertTextFormat":2,"kind":9,"label":":beam_call_types","labelDetails":{"description":":beam_call_types"},"sortText":"00000089","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_clean","insertText":"beam_clean","insertTextFormat":2,"kind":9,"label":":beam_clean","labelDetails":{"description":":beam_clean"},"sortText":"00000090","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_dict","insertText":"beam_dict","insertTextFormat":2,"kind":9,"label":":beam_dict","labelDetails":{"description":":beam_dict"},"sortText":"00000091","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_digraph","insertText":"beam_digraph","insertTextFormat":2,"kind":9,"label":":beam_digraph","labelDetails":{"description":":beam_digraph"},"sortText":"00000092","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_disasm","insertText":"beam_disasm","insertTextFormat":2,"kind":9,"label":":beam_disasm","labelDetails":{"description":":beam_disasm"},"sortText":"00000093","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_flatten","insertText":"beam_flatten","insertTextFormat":2,"kind":9,"label":":beam_flatten","labelDetails":{"description":":beam_flatten"},"sortText":"00000094","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_jump","insertText":"beam_jump","insertTextFormat":2,"kind":9,"label":":beam_jump","labelDetails":{"description":":beam_jump"},"sortText":"00000095","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_kernel_to_ssa","insertText":"beam_kernel_to_ssa","insertTextFormat":2,"kind":9,"label":":beam_kernel_to_ssa","labelDetails":{"description":":beam_kernel_to_ssa"},"sortText":"00000096","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_lib","insertText":"beam_lib","insertTextFormat":2,"kind":9,"label":":beam_lib","labelDetails":{"description":":beam_lib"},"sortText":"00000097","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_listing","insertText":"beam_listing","insertTextFormat":2,"kind":9,"label":":beam_listing","labelDetails":{"description":":beam_listing"},"sortText":"00000098","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_opcodes","insertText":"beam_opcodes","insertTextFormat":2,"kind":9,"label":":beam_opcodes","labelDetails":{"description":":beam_opcodes"},"sortText":"00000099","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa","insertText":"beam_ssa","insertTextFormat":2,"kind":9,"label":":beam_ssa","labelDetails":{"description":":beam_ssa"},"sortText":"00000100","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_alias","insertText":"beam_ssa_alias","insertTextFormat":2,"kind":9,"label":":beam_ssa_alias","labelDetails":{"description":":beam_ssa_alias"},"sortText":"00000101","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_bc_size","insertText":"beam_ssa_bc_size","insertTextFormat":2,"kind":9,"label":":beam_ssa_bc_size","labelDetails":{"description":":beam_ssa_bc_size"},"sortText":"00000102","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_bool","insertText":"beam_ssa_bool","insertTextFormat":2,"kind":9,"label":":beam_ssa_bool","labelDetails":{"description":":beam_ssa_bool"},"sortText":"00000103","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_bsm","insertText":"beam_ssa_bsm","insertTextFormat":2,"kind":9,"label":":beam_ssa_bsm","labelDetails":{"description":":beam_ssa_bsm"},"sortText":"00000104","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_check","insertText":"beam_ssa_check","insertTextFormat":2,"kind":9,"label":":beam_ssa_check","labelDetails":{"description":":beam_ssa_check"},"sortText":"00000105","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_codegen","insertText":"beam_ssa_codegen","insertTextFormat":2,"kind":9,"label":":beam_ssa_codegen","labelDetails":{"description":":beam_ssa_codegen"},"sortText":"00000106","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_dead","insertText":"beam_ssa_dead","insertTextFormat":2,"kind":9,"label":":beam_ssa_dead","labelDetails":{"description":":beam_ssa_dead"},"sortText":"00000107","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_lint","insertText":"beam_ssa_lint","insertTextFormat":2,"kind":9,"label":":beam_ssa_lint","labelDetails":{"description":":beam_ssa_lint"},"sortText":"00000108","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_opt","insertText":"beam_ssa_opt","insertTextFormat":2,"kind":9,"label":":beam_ssa_opt","labelDetails":{"description":":beam_ssa_opt"},"sortText":"00000109","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_pp","insertText":"beam_ssa_pp","insertTextFormat":2,"kind":9,"label":":beam_ssa_pp","labelDetails":{"description":":beam_ssa_pp"},"sortText":"00000110","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_pre_codegen","insertText":"beam_ssa_pre_codegen","insertTextFormat":2,"kind":9,"label":":beam_ssa_pre_codegen","labelDetails":{"description":":beam_ssa_pre_codegen"},"sortText":"00000111","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_private_append","insertText":"beam_ssa_private_append","insertTextFormat":2,"kind":9,"label":":beam_ssa_private_append","labelDetails":{"description":":beam_ssa_private_append"},"sortText":"00000112","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_recv","insertText":"beam_ssa_recv","insertTextFormat":2,"kind":9,"label":":beam_ssa_recv","labelDetails":{"description":":beam_ssa_recv"},"sortText":"00000113","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_share","insertText":"beam_ssa_share","insertTextFormat":2,"kind":9,"label":":beam_ssa_share","labelDetails":{"description":":beam_ssa_share"},"sortText":"00000114","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_throw","insertText":"beam_ssa_throw","insertTextFormat":2,"kind":9,"label":":beam_ssa_throw","labelDetails":{"description":":beam_ssa_throw"},"sortText":"00000115","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_ssa_type","insertText":"beam_ssa_type","insertTextFormat":2,"kind":9,"label":":beam_ssa_type","labelDetails":{"description":":beam_ssa_type"},"sortText":"00000116","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_trim","insertText":"beam_trim","insertTextFormat":2,"kind":9,"label":":beam_trim","labelDetails":{"description":":beam_trim"},"sortText":"00000117","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_types","insertText":"beam_types","insertTextFormat":2,"kind":9,"label":":beam_types","labelDetails":{"description":":beam_types"},"sortText":"00000118","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_utils","insertText":"beam_utils","insertTextFormat":2,"kind":9,"label":":beam_utils","labelDetails":{"description":":beam_utils"},"sortText":"00000119","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_validator","insertText":"beam_validator","insertTextFormat":2,"kind":9,"label":":beam_validator","labelDetails":{"description":":beam_validator"},"sortText":"00000120","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":beam_z","insertText":"beam_z","insertTextFormat":2,"kind":9,"label":":beam_z","labelDetails":{"description":":beam_z"},"sortText":"00000121","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":binary","insertText":"binary","insertTextFormat":2,"kind":9,"label":":binary","labelDetails":{"description":":binary"},"sortText":"00000122","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":c","insertText":"c","insertTextFormat":2,"kind":9,"label":":c","labelDetails":{"description":":c"},"sortText":"00000123","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":calendar","insertText":"calendar","insertTextFormat":2,"kind":9,"label":":calendar","labelDetails":{"description":":calendar"},"sortText":"00000124","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":cerl","insertText":"cerl","insertTextFormat":2,"kind":9,"label":":cerl","labelDetails":{"description":":cerl"},"sortText":"00000125","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":cerl_clauses","insertText":"cerl_clauses","insertTextFormat":2,"kind":9,"label":":cerl_clauses","labelDetails":{"description":":cerl_clauses"},"sortText":"00000126","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":cerl_inline","insertText":"cerl_inline","insertTextFormat":2,"kind":9,"label":":cerl_inline","labelDetails":{"description":":cerl_inline"},"sortText":"00000127","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":cerl_prettypr","insertText":"cerl_prettypr","insertTextFormat":2,"kind":9,"label":":cerl_prettypr","labelDetails":{"description":":cerl_prettypr"},"sortText":"00000128","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":cerl_trees","insertText":"cerl_trees","insertTextFormat":2,"kind":9,"label":":cerl_trees","labelDetails":{"description":":cerl_trees"},"sortText":"00000129","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":certifi","insertText":"certifi","insertTextFormat":2,"kind":9,"label":":certifi","labelDetails":{"description":":certifi"},"sortText":"00000130","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":certifi_pt","insertText":"certifi_pt","insertTextFormat":2,"kind":9,"label":":certifi_pt","labelDetails":{"description":":certifi_pt"},"sortText":"00000131","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":code","insertText":"code","insertTextFormat":2,"kind":9,"label":":code","labelDetails":{"description":":code"},"sortText":"00000132","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":code_server","insertText":"code_server","insertTextFormat":2,"kind":9,"label":":code_server","labelDetails":{"description":":code_server"},"sortText":"00000133","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":compile","insertText":"compile","insertTextFormat":2,"kind":9,"label":":compile","labelDetails":{"description":":compile"},"sortText":"00000134","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":core_lib","insertText":"core_lib","insertTextFormat":2,"kind":9,"label":":core_lib","labelDetails":{"description":":core_lib"},"sortText":"00000135","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":core_lint","insertText":"core_lint","insertTextFormat":2,"kind":9,"label":":core_lint","labelDetails":{"description":":core_lint"},"sortText":"00000136","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":core_parse","insertText":"core_parse","insertTextFormat":2,"kind":9,"label":":core_parse","labelDetails":{"description":":core_parse"},"sortText":"00000137","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":core_pp","insertText":"core_pp","insertTextFormat":2,"kind":9,"label":":core_pp","labelDetails":{"description":":core_pp"},"sortText":"00000138","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":core_scan","insertText":"core_scan","insertTextFormat":2,"kind":9,"label":":core_scan","labelDetails":{"description":":core_scan"},"sortText":"00000139","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":counters","insertText":"counters","insertTextFormat":2,"kind":9,"label":":counters","labelDetails":{"description":":counters"},"sortText":"00000140","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":crypto","insertText":"crypto","insertTextFormat":2,"kind":9,"label":":crypto","labelDetails":{"description":":crypto"},"sortText":"00000141","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":crypto_ec_curves","insertText":"crypto_ec_curves","insertTextFormat":2,"kind":9,"label":":crypto_ec_curves","labelDetails":{"description":":crypto_ec_curves"},"sortText":"00000142","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ct_expand","insertText":"ct_expand","insertTextFormat":2,"kind":9,"label":":ct_expand","labelDetails":{"description":":ct_expand"},"sortText":"00000143","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dets","insertText":"dets","insertTextFormat":2,"kind":9,"label":":dets","labelDetails":{"description":":dets"},"sortText":"00000144","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dets_server","insertText":"dets_server","insertTextFormat":2,"kind":9,"label":":dets_server","labelDetails":{"description":":dets_server"},"sortText":"00000145","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dets_sup","insertText":"dets_sup","insertTextFormat":2,"kind":9,"label":":dets_sup","labelDetails":{"description":":dets_sup"},"sortText":"00000146","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dets_utils","insertText":"dets_utils","insertTextFormat":2,"kind":9,"label":":dets_utils","labelDetails":{"description":":dets_utils"},"sortText":"00000147","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dets_v9","insertText":"dets_v9","insertTextFormat":2,"kind":9,"label":":dets_v9","labelDetails":{"description":":dets_v9"},"sortText":"00000148","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer","insertText":"dialyzer","insertTextFormat":2,"kind":9,"label":":dialyzer","labelDetails":{"description":":dialyzer"},"sortText":"00000149","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_analysis_callgraph","insertText":"dialyzer_analysis_callgraph","insertTextFormat":2,"kind":9,"label":":dialyzer_analysis_callgraph","labelDetails":{"description":":dialyzer_analysis_callgraph"},"sortText":"00000150","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_behaviours","insertText":"dialyzer_behaviours","insertTextFormat":2,"kind":9,"label":":dialyzer_behaviours","labelDetails":{"description":":dialyzer_behaviours"},"sortText":"00000151","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_callgraph","insertText":"dialyzer_callgraph","insertTextFormat":2,"kind":9,"label":":dialyzer_callgraph","labelDetails":{"description":":dialyzer_callgraph"},"sortText":"00000152","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_cl","insertText":"dialyzer_cl","insertTextFormat":2,"kind":9,"label":":dialyzer_cl","labelDetails":{"description":":dialyzer_cl"},"sortText":"00000153","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_cl_parse","insertText":"dialyzer_cl_parse","insertTextFormat":2,"kind":9,"label":":dialyzer_cl_parse","labelDetails":{"description":":dialyzer_cl_parse"},"sortText":"00000154","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_clean_core","insertText":"dialyzer_clean_core","insertTextFormat":2,"kind":9,"label":":dialyzer_clean_core","labelDetails":{"description":":dialyzer_clean_core"},"sortText":"00000155","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_codeserver","insertText":"dialyzer_codeserver","insertTextFormat":2,"kind":9,"label":":dialyzer_codeserver","labelDetails":{"description":":dialyzer_codeserver"},"sortText":"00000156","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_contracts","insertText":"dialyzer_contracts","insertTextFormat":2,"kind":9,"label":":dialyzer_contracts","labelDetails":{"description":":dialyzer_contracts"},"sortText":"00000157","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_coordinator","insertText":"dialyzer_coordinator","insertTextFormat":2,"kind":9,"label":":dialyzer_coordinator","labelDetails":{"description":":dialyzer_coordinator"},"sortText":"00000158","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_cplt","insertText":"dialyzer_cplt","insertTextFormat":2,"kind":9,"label":":dialyzer_cplt","labelDetails":{"description":":dialyzer_cplt"},"sortText":"00000159","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_dataflow","insertText":"dialyzer_dataflow","insertTextFormat":2,"kind":9,"label":":dialyzer_dataflow","labelDetails":{"description":":dialyzer_dataflow"},"sortText":"00000160","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_dep","insertText":"dialyzer_dep","insertTextFormat":2,"kind":9,"label":":dialyzer_dep","labelDetails":{"description":":dialyzer_dep"},"sortText":"00000161","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_dot","insertText":"dialyzer_dot","insertTextFormat":2,"kind":9,"label":":dialyzer_dot","labelDetails":{"description":":dialyzer_dot"},"sortText":"00000162","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_explanation","insertText":"dialyzer_explanation","insertTextFormat":2,"kind":9,"label":":dialyzer_explanation","labelDetails":{"description":":dialyzer_explanation"},"sortText":"00000163","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_gui_wx","insertText":"dialyzer_gui_wx","insertTextFormat":2,"kind":9,"label":":dialyzer_gui_wx","labelDetails":{"description":":dialyzer_gui_wx"},"sortText":"00000164","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_incremental","insertText":"dialyzer_incremental","insertTextFormat":2,"kind":9,"label":":dialyzer_incremental","labelDetails":{"description":":dialyzer_incremental"},"sortText":"00000165","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_iplt","insertText":"dialyzer_iplt","insertTextFormat":2,"kind":9,"label":":dialyzer_iplt","labelDetails":{"description":":dialyzer_iplt"},"sortText":"00000166","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_options","insertText":"dialyzer_options","insertTextFormat":2,"kind":9,"label":":dialyzer_options","labelDetails":{"description":":dialyzer_options"},"sortText":"00000167","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_plt","insertText":"dialyzer_plt","insertTextFormat":2,"kind":9,"label":":dialyzer_plt","labelDetails":{"description":":dialyzer_plt"},"sortText":"00000168","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_succ_typings","insertText":"dialyzer_succ_typings","insertTextFormat":2,"kind":9,"label":":dialyzer_succ_typings","labelDetails":{"description":":dialyzer_succ_typings"},"sortText":"00000169","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_timing","insertText":"dialyzer_timing","insertTextFormat":2,"kind":9,"label":":dialyzer_timing","labelDetails":{"description":":dialyzer_timing"},"sortText":"00000170","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_typegraph","insertText":"dialyzer_typegraph","insertTextFormat":2,"kind":9,"label":":dialyzer_typegraph","labelDetails":{"description":":dialyzer_typegraph"},"sortText":"00000171","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_typesig","insertText":"dialyzer_typesig","insertTextFormat":2,"kind":9,"label":":dialyzer_typesig","labelDetails":{"description":":dialyzer_typesig"},"sortText":"00000172","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_utils","insertText":"dialyzer_utils","insertTextFormat":2,"kind":9,"label":":dialyzer_utils","labelDetails":{"description":":dialyzer_utils"},"sortText":"00000173","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dialyzer_worker","insertText":"dialyzer_worker","insertTextFormat":2,"kind":9,"label":":dialyzer_worker","labelDetails":{"description":":dialyzer_worker"},"sortText":"00000174","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dict","insertText":"dict","insertTextFormat":2,"kind":9,"label":":dict","labelDetails":{"description":":dict"},"sortText":"00000175","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":digraph","insertText":"digraph","insertTextFormat":2,"kind":9,"label":":digraph","labelDetails":{"description":":digraph"},"sortText":"00000176","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":digraph_utils","insertText":"digraph_utils","insertTextFormat":2,"kind":9,"label":":digraph_utils","labelDetails":{"description":":digraph_utils"},"sortText":"00000177","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":disk_log","insertText":"disk_log","insertTextFormat":2,"kind":9,"label":":disk_log","labelDetails":{"description":":disk_log"},"sortText":"00000178","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":disk_log_1","insertText":"disk_log_1","insertTextFormat":2,"kind":9,"label":":disk_log_1","labelDetails":{"description":":disk_log_1"},"sortText":"00000179","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":disk_log_server","insertText":"disk_log_server","insertTextFormat":2,"kind":9,"label":":disk_log_server","labelDetails":{"description":":disk_log_server"},"sortText":"00000180","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":disk_log_sup","insertText":"disk_log_sup","insertTextFormat":2,"kind":9,"label":":disk_log_sup","labelDetails":{"description":":disk_log_sup"},"sortText":"00000181","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dist_ac","insertText":"dist_ac","insertTextFormat":2,"kind":9,"label":":dist_ac","labelDetails":{"description":":dist_ac"},"sortText":"00000182","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dist_util","insertText":"dist_util","insertTextFormat":2,"kind":9,"label":":dist_util","labelDetails":{"description":":dist_util"},"sortText":"00000183","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_connection","insertText":"dtls_connection","insertTextFormat":2,"kind":9,"label":":dtls_connection","labelDetails":{"description":":dtls_connection"},"sortText":"00000184","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_connection_sup","insertText":"dtls_connection_sup","insertTextFormat":2,"kind":9,"label":":dtls_connection_sup","labelDetails":{"description":":dtls_connection_sup"},"sortText":"00000185","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_gen_connection","insertText":"dtls_gen_connection","insertTextFormat":2,"kind":9,"label":":dtls_gen_connection","labelDetails":{"description":":dtls_gen_connection"},"sortText":"00000186","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_handshake","insertText":"dtls_handshake","insertTextFormat":2,"kind":9,"label":":dtls_handshake","labelDetails":{"description":":dtls_handshake"},"sortText":"00000187","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_listener_sup","insertText":"dtls_listener_sup","insertTextFormat":2,"kind":9,"label":":dtls_listener_sup","labelDetails":{"description":":dtls_listener_sup"},"sortText":"00000188","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_packet_demux","insertText":"dtls_packet_demux","insertTextFormat":2,"kind":9,"label":":dtls_packet_demux","labelDetails":{"description":":dtls_packet_demux"},"sortText":"00000189","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_record","insertText":"dtls_record","insertTextFormat":2,"kind":9,"label":":dtls_record","labelDetails":{"description":":dtls_record"},"sortText":"00000190","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_server_session_cache_sup","insertText":"dtls_server_session_cache_sup","insertTextFormat":2,"kind":9,"label":":dtls_server_session_cache_sup","labelDetails":{"description":":dtls_server_session_cache_sup"},"sortText":"00000191","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_server_sup","insertText":"dtls_server_sup","insertTextFormat":2,"kind":9,"label":":dtls_server_sup","labelDetails":{"description":":dtls_server_sup"},"sortText":"00000192","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_socket","insertText":"dtls_socket","insertTextFormat":2,"kind":9,"label":":dtls_socket","labelDetails":{"description":":dtls_socket"},"sortText":"00000193","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_sup","insertText":"dtls_sup","insertTextFormat":2,"kind":9,"label":":dtls_sup","labelDetails":{"description":":dtls_sup"},"sortText":"00000194","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":dtls_v1","insertText":"dtls_v1","insertTextFormat":2,"kind":9,"label":":dtls_v1","labelDetails":{"description":":dtls_v1"},"sortText":"00000195","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":edlin","insertText":"edlin","insertTextFormat":2,"kind":9,"label":":edlin","labelDetails":{"description":":edlin"},"sortText":"00000196","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":edlin_context","insertText":"edlin_context","insertTextFormat":2,"kind":9,"label":":edlin_context","labelDetails":{"description":":edlin_context"},"sortText":"00000197","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":edlin_expand","insertText":"edlin_expand","insertTextFormat":2,"kind":9,"label":":edlin_expand","labelDetails":{"description":":edlin_expand"},"sortText":"00000198","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":edlin_key","insertText":"edlin_key","insertTextFormat":2,"kind":9,"label":":edlin_key","labelDetails":{"description":":edlin_key"},"sortText":"00000199","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":edlin_type_suggestion","insertText":"edlin_type_suggestion","insertTextFormat":2,"kind":9,"label":":edlin_type_suggestion","labelDetails":{"description":":edlin_type_suggestion"},"sortText":"00000200","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir","insertText":"elixir","insertTextFormat":2,"kind":9,"label":":elixir","labelDetails":{"description":":elixir"},"sortText":"00000201","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_aliases","insertText":"elixir_aliases","insertTextFormat":2,"kind":9,"label":":elixir_aliases","labelDetails":{"description":":elixir_aliases"},"sortText":"00000202","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_bitstring","insertText":"elixir_bitstring","insertTextFormat":2,"kind":9,"label":":elixir_bitstring","labelDetails":{"description":":elixir_bitstring"},"sortText":"00000203","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_bootstrap","insertText":"elixir_bootstrap","insertTextFormat":2,"kind":9,"label":":elixir_bootstrap","labelDetails":{"description":":elixir_bootstrap"},"sortText":"00000204","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_clauses","insertText":"elixir_clauses","insertTextFormat":2,"kind":9,"label":":elixir_clauses","labelDetails":{"description":":elixir_clauses"},"sortText":"00000205","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_code_server","insertText":"elixir_code_server","insertTextFormat":2,"kind":9,"label":":elixir_code_server","labelDetails":{"description":":elixir_code_server"},"sortText":"00000206","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_compiler","insertText":"elixir_compiler","insertTextFormat":2,"kind":9,"label":":elixir_compiler","labelDetails":{"description":":elixir_compiler"},"sortText":"00000207","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_compiler_0","insertText":"elixir_compiler_0","insertTextFormat":2,"kind":9,"label":":elixir_compiler_0","labelDetails":{"description":":elixir_compiler_0"},"sortText":"00000208","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_config","insertText":"elixir_config","insertTextFormat":2,"kind":9,"label":":elixir_config","labelDetails":{"description":":elixir_config"},"sortText":"00000209","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_def","insertText":"elixir_def","insertTextFormat":2,"kind":9,"label":":elixir_def","labelDetails":{"description":":elixir_def"},"sortText":"00000210","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_dispatch","insertText":"elixir_dispatch","insertTextFormat":2,"kind":9,"label":":elixir_dispatch","labelDetails":{"description":":elixir_dispatch"},"sortText":"00000211","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_env","insertText":"elixir_env","insertTextFormat":2,"kind":9,"label":":elixir_env","labelDetails":{"description":":elixir_env"},"sortText":"00000212","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_erl","insertText":"elixir_erl","insertTextFormat":2,"kind":9,"label":":elixir_erl","labelDetails":{"description":":elixir_erl"},"sortText":"00000213","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_erl_clauses","insertText":"elixir_erl_clauses","insertTextFormat":2,"kind":9,"label":":elixir_erl_clauses","labelDetails":{"description":":elixir_erl_clauses"},"sortText":"00000214","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_erl_compiler","insertText":"elixir_erl_compiler","insertTextFormat":2,"kind":9,"label":":elixir_erl_compiler","labelDetails":{"description":":elixir_erl_compiler"},"sortText":"00000215","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_erl_for","insertText":"elixir_erl_for","insertTextFormat":2,"kind":9,"label":":elixir_erl_for","labelDetails":{"description":":elixir_erl_for"},"sortText":"00000216","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_erl_pass","insertText":"elixir_erl_pass","insertTextFormat":2,"kind":9,"label":":elixir_erl_pass","labelDetails":{"description":":elixir_erl_pass"},"sortText":"00000217","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_erl_try","insertText":"elixir_erl_try","insertTextFormat":2,"kind":9,"label":":elixir_erl_try","labelDetails":{"description":":elixir_erl_try"},"sortText":"00000218","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_erl_var","insertText":"elixir_erl_var","insertTextFormat":2,"kind":9,"label":":elixir_erl_var","labelDetails":{"description":":elixir_erl_var"},"sortText":"00000219","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_errors","insertText":"elixir_errors","insertTextFormat":2,"kind":9,"label":":elixir_errors","labelDetails":{"description":":elixir_errors"},"sortText":"00000220","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_expand","insertText":"elixir_expand","insertTextFormat":2,"kind":9,"label":":elixir_expand","labelDetails":{"description":":elixir_expand"},"sortText":"00000221","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_fn","insertText":"elixir_fn","insertTextFormat":2,"kind":9,"label":":elixir_fn","labelDetails":{"description":":elixir_fn"},"sortText":"00000222","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_import","insertText":"elixir_import","insertTextFormat":2,"kind":9,"label":":elixir_import","labelDetails":{"description":":elixir_import"},"sortText":"00000223","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_interpolation","insertText":"elixir_interpolation","insertTextFormat":2,"kind":9,"label":":elixir_interpolation","labelDetails":{"description":":elixir_interpolation"},"sortText":"00000224","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_lexical","insertText":"elixir_lexical","insertTextFormat":2,"kind":9,"label":":elixir_lexical","labelDetails":{"description":":elixir_lexical"},"sortText":"00000225","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_locals","insertText":"elixir_locals","insertTextFormat":2,"kind":9,"label":":elixir_locals","labelDetails":{"description":":elixir_locals"},"sortText":"00000226","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_map","insertText":"elixir_map","insertTextFormat":2,"kind":9,"label":":elixir_map","labelDetails":{"description":":elixir_map"},"sortText":"00000227","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_module","insertText":"elixir_module","insertTextFormat":2,"kind":9,"label":":elixir_module","labelDetails":{"description":":elixir_module"},"sortText":"00000228","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_overridable","insertText":"elixir_overridable","insertTextFormat":2,"kind":9,"label":":elixir_overridable","labelDetails":{"description":":elixir_overridable"},"sortText":"00000229","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_parser","insertText":"elixir_parser","insertTextFormat":2,"kind":9,"label":":elixir_parser","labelDetails":{"description":":elixir_parser"},"sortText":"00000230","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_quote","insertText":"elixir_quote","insertTextFormat":2,"kind":9,"label":":elixir_quote","labelDetails":{"description":":elixir_quote"},"sortText":"00000231","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_rewrite","insertText":"elixir_rewrite","insertTextFormat":2,"kind":9,"label":":elixir_rewrite","labelDetails":{"description":":elixir_rewrite"},"sortText":"00000232","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_sense","insertText":"elixir_sense","insertTextFormat":2,"kind":9,"label":":elixir_sense","labelDetails":{"description":":elixir_sense"},"sortText":"00000233","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_sense_config","insertText":"elixir_sense_config","insertTextFormat":2,"kind":9,"label":":elixir_sense_config","labelDetails":{"description":":elixir_sense_config"},"sortText":"00000234","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_sense_interpolation","insertText":"elixir_sense_interpolation","insertTextFormat":2,"kind":9,"label":":elixir_sense_interpolation","labelDetails":{"description":":elixir_sense_interpolation"},"sortText":"00000235","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_sense_parser","insertText":"elixir_sense_parser","insertTextFormat":2,"kind":9,"label":":elixir_sense_parser","labelDetails":{"description":":elixir_sense_parser"},"sortText":"00000236","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_sense_tokenizer","insertText":"elixir_sense_tokenizer","insertTextFormat":2,"kind":9,"label":":elixir_sense_tokenizer","labelDetails":{"description":":elixir_sense_tokenizer"},"sortText":"00000237","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_sup","insertText":"elixir_sup","insertTextFormat":2,"kind":9,"label":":elixir_sup","labelDetails":{"description":":elixir_sup"},"sortText":"00000238","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_tokenizer","insertText":"elixir_tokenizer","insertTextFormat":2,"kind":9,"label":":elixir_tokenizer","labelDetails":{"description":":elixir_tokenizer"},"sortText":"00000239","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":elixir_utils","insertText":"elixir_utils","insertTextFormat":2,"kind":9,"label":":elixir_utils","labelDetails":{"description":":elixir_utils"},"sortText":"00000240","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":epp","insertText":"epp","insertTextFormat":2,"kind":9,"label":":epp","labelDetails":{"description":":epp"},"sortText":"00000241","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":epp_dodger","insertText":"epp_dodger","insertTextFormat":2,"kind":9,"label":":epp_dodger","labelDetails":{"description":":epp_dodger"},"sortText":"00000242","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_abstract_code","insertText":"erl_abstract_code","insertTextFormat":2,"kind":9,"label":":erl_abstract_code","labelDetails":{"description":":erl_abstract_code"},"sortText":"00000243","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_anno","insertText":"erl_anno","insertTextFormat":2,"kind":9,"label":":erl_anno","labelDetails":{"description":":erl_anno"},"sortText":"00000244","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_bif_types","insertText":"erl_bif_types","insertTextFormat":2,"kind":9,"label":":erl_bif_types","labelDetails":{"description":":erl_bif_types"},"sortText":"00000245","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_bifs","insertText":"erl_bifs","insertTextFormat":2,"kind":9,"label":":erl_bifs","labelDetails":{"description":":erl_bifs"},"sortText":"00000246","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_bits","insertText":"erl_bits","insertTextFormat":2,"kind":9,"label":":erl_bits","labelDetails":{"description":":erl_bits"},"sortText":"00000247","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_boot_server","insertText":"erl_boot_server","insertTextFormat":2,"kind":9,"label":":erl_boot_server","labelDetails":{"description":":erl_boot_server"},"sortText":"00000248","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_comment_scan","insertText":"erl_comment_scan","insertTextFormat":2,"kind":9,"label":":erl_comment_scan","labelDetails":{"description":":erl_comment_scan"},"sortText":"00000249","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_compile","insertText":"erl_compile","insertTextFormat":2,"kind":9,"label":":erl_compile","labelDetails":{"description":":erl_compile"},"sortText":"00000250","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_compile_server","insertText":"erl_compile_server","insertTextFormat":2,"kind":9,"label":":erl_compile_server","labelDetails":{"description":":erl_compile_server"},"sortText":"00000251","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_ddll","insertText":"erl_ddll","insertTextFormat":2,"kind":9,"label":":erl_ddll","labelDetails":{"description":":erl_ddll"},"sortText":"00000252","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_distribution","insertText":"erl_distribution","insertTextFormat":2,"kind":9,"label":":erl_distribution","labelDetails":{"description":":erl_distribution"},"sortText":"00000253","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_epmd","insertText":"erl_epmd","insertTextFormat":2,"kind":9,"label":":erl_epmd","labelDetails":{"description":":erl_epmd"},"sortText":"00000254","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_error","insertText":"erl_error","insertTextFormat":2,"kind":9,"label":":erl_error","labelDetails":{"description":":erl_error"},"sortText":"00000255","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_erts_errors","insertText":"erl_erts_errors","insertTextFormat":2,"kind":9,"label":":erl_erts_errors","labelDetails":{"description":":erl_erts_errors"},"sortText":"00000256","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_eval","insertText":"erl_eval","insertTextFormat":2,"kind":9,"label":":erl_eval","labelDetails":{"description":":erl_eval"},"sortText":"00000257","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_expand_records","insertText":"erl_expand_records","insertTextFormat":2,"kind":9,"label":":erl_expand_records","labelDetails":{"description":":erl_expand_records"},"sortText":"00000258","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_features","insertText":"erl_features","insertTextFormat":2,"kind":9,"label":":erl_features","labelDetails":{"description":":erl_features"},"sortText":"00000259","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_init","insertText":"erl_init","insertTextFormat":2,"kind":9,"label":":erl_init","labelDetails":{"description":":erl_init"},"sortText":"00000260","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_internal","insertText":"erl_internal","insertTextFormat":2,"kind":9,"label":":erl_internal","labelDetails":{"description":":erl_internal"},"sortText":"00000261","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_kernel_errors","insertText":"erl_kernel_errors","insertTextFormat":2,"kind":9,"label":":erl_kernel_errors","labelDetails":{"description":":erl_kernel_errors"},"sortText":"00000262","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_lint","insertText":"erl_lint","insertTextFormat":2,"kind":9,"label":":erl_lint","labelDetails":{"description":":erl_lint"},"sortText":"00000263","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_parse","insertText":"erl_parse","insertTextFormat":2,"kind":9,"label":":erl_parse","labelDetails":{"description":":erl_parse"},"sortText":"00000264","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_posix_msg","insertText":"erl_posix_msg","insertTextFormat":2,"kind":9,"label":":erl_posix_msg","labelDetails":{"description":":erl_posix_msg"},"sortText":"00000265","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_pp","insertText":"erl_pp","insertTextFormat":2,"kind":9,"label":":erl_pp","labelDetails":{"description":":erl_pp"},"sortText":"00000266","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_prettypr","insertText":"erl_prettypr","insertTextFormat":2,"kind":9,"label":":erl_prettypr","labelDetails":{"description":":erl_prettypr"},"sortText":"00000267","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_prim_loader","insertText":"erl_prim_loader","insertTextFormat":2,"kind":9,"label":":erl_prim_loader","labelDetails":{"description":":erl_prim_loader"},"sortText":"00000268","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_recomment","insertText":"erl_recomment","insertTextFormat":2,"kind":9,"label":":erl_recomment","labelDetails":{"description":":erl_recomment"},"sortText":"00000269","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_reply","insertText":"erl_reply","insertTextFormat":2,"kind":9,"label":":erl_reply","labelDetails":{"description":":erl_reply"},"sortText":"00000270","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_scan","insertText":"erl_scan","insertTextFormat":2,"kind":9,"label":":erl_scan","labelDetails":{"description":":erl_scan"},"sortText":"00000271","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_signal_handler","insertText":"erl_signal_handler","insertTextFormat":2,"kind":9,"label":":erl_signal_handler","labelDetails":{"description":":erl_signal_handler"},"sortText":"00000272","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_stdlib_errors","insertText":"erl_stdlib_errors","insertTextFormat":2,"kind":9,"label":":erl_stdlib_errors","labelDetails":{"description":":erl_stdlib_errors"},"sortText":"00000273","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_syntax","insertText":"erl_syntax","insertTextFormat":2,"kind":9,"label":":erl_syntax","labelDetails":{"description":":erl_syntax"},"sortText":"00000274","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_syntax_lib","insertText":"erl_syntax_lib","insertTextFormat":2,"kind":9,"label":":erl_syntax_lib","labelDetails":{"description":":erl_syntax_lib"},"sortText":"00000275","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_tar","insertText":"erl_tar","insertTextFormat":2,"kind":9,"label":":erl_tar","labelDetails":{"description":":erl_tar"},"sortText":"00000276","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_tracer","insertText":"erl_tracer","insertTextFormat":2,"kind":9,"label":":erl_tracer","labelDetails":{"description":":erl_tracer"},"sortText":"00000277","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erl_types","insertText":"erl_types","insertTextFormat":2,"kind":9,"label":":erl_types","labelDetails":{"description":":erl_types"},"sortText":"00000278","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erlang","insertText":"erlang","insertTextFormat":2,"kind":9,"label":":erlang","labelDetails":{"description":":erlang"},"sortText":"00000279","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erpc","insertText":"erpc","insertTextFormat":2,"kind":9,"label":":erpc","labelDetails":{"description":":erpc"},"sortText":"00000280","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":error_handler","insertText":"error_handler","insertTextFormat":2,"kind":9,"label":":error_handler","labelDetails":{"description":":error_handler"},"sortText":"00000281","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":error_logger","insertText":"error_logger","insertTextFormat":2,"kind":9,"label":":error_logger","labelDetails":{"description":":error_logger"},"sortText":"00000282","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":error_logger_file_h","insertText":"error_logger_file_h","insertTextFormat":2,"kind":9,"label":":error_logger_file_h","labelDetails":{"description":":error_logger_file_h"},"sortText":"00000283","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":error_logger_tty_h","insertText":"error_logger_tty_h","insertTextFormat":2,"kind":9,"label":":error_logger_tty_h","labelDetails":{"description":":error_logger_tty_h"},"sortText":"00000284","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erts_code_purger","insertText":"erts_code_purger","insertTextFormat":2,"kind":9,"label":":erts_code_purger","labelDetails":{"description":":erts_code_purger"},"sortText":"00000285","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erts_debug","insertText":"erts_debug","insertTextFormat":2,"kind":9,"label":":erts_debug","labelDetails":{"description":":erts_debug"},"sortText":"00000286","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erts_dirty_process_signal_handler","insertText":"erts_dirty_process_signal_handler","insertTextFormat":2,"kind":9,"label":":erts_dirty_process_signal_handler","labelDetails":{"description":":erts_dirty_process_signal_handler"},"sortText":"00000287","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erts_internal","insertText":"erts_internal","insertTextFormat":2,"kind":9,"label":":erts_internal","labelDetails":{"description":":erts_internal"},"sortText":"00000288","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":erts_literal_area_collector","insertText":"erts_literal_area_collector","insertTextFormat":2,"kind":9,"label":":erts_literal_area_collector","labelDetails":{"description":":erts_literal_area_collector"},"sortText":"00000289","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":escript","insertText":"escript","insertTextFormat":2,"kind":9,"label":":escript","labelDetails":{"description":":escript"},"sortText":"00000290","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ets","insertText":"ets","insertTextFormat":2,"kind":9,"label":":ets","labelDetails":{"description":":ets"},"sortText":"00000291","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":eval_bits","insertText":"eval_bits","insertTextFormat":2,"kind":9,"label":":eval_bits","labelDetails":{"description":":eval_bits"},"sortText":"00000292","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":exprecs","insertText":"exprecs","insertTextFormat":2,"kind":9,"label":":exprecs","labelDetails":{"description":":exprecs"},"sortText":"00000293","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":file","insertText":"file","insertTextFormat":2,"kind":9,"label":":file","labelDetails":{"description":":file"},"sortText":"00000294","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":file_io_server","insertText":"file_io_server","insertTextFormat":2,"kind":9,"label":":file_io_server","labelDetails":{"description":":file_io_server"},"sortText":"00000295","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":file_server","insertText":"file_server","insertTextFormat":2,"kind":9,"label":":file_server","labelDetails":{"description":":file_server"},"sortText":"00000296","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":file_sorter","insertText":"file_sorter","insertTextFormat":2,"kind":9,"label":":file_sorter","labelDetails":{"description":":file_sorter"},"sortText":"00000297","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":filelib","insertText":"filelib","insertTextFormat":2,"kind":9,"label":":filelib","labelDetails":{"description":":filelib"},"sortText":"00000298","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":filename","insertText":"filename","insertTextFormat":2,"kind":9,"label":":filename","labelDetails":{"description":":filename"},"sortText":"00000299","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":gb_sets","insertText":"gb_sets","insertTextFormat":2,"kind":9,"label":":gb_sets","labelDetails":{"description":":gb_sets"},"sortText":"00000300","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":gb_trees","insertText":"gb_trees","insertTextFormat":2,"kind":9,"label":":gb_trees","labelDetails":{"description":":gb_trees"},"sortText":"00000301","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":gen","insertText":"gen","insertTextFormat":2,"kind":9,"label":":gen","labelDetails":{"description":":gen"},"sortText":"00000302","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":gen_event","insertText":"gen_event","insertTextFormat":2,"kind":8,"label":":gen_event","labelDetails":{"description":":gen_event","detail":"behaviour"},"sortText":"00000303","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":gen_fsm","insertText":"gen_fsm","insertTextFormat":2,"kind":8,"label":":gen_fsm","labelDetails":{"description":":gen_fsm","detail":"behaviour"},"sortText":"00000304","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":gen_sctp","insertText":"gen_sctp","insertTextFormat":2,"kind":9,"label":":gen_sctp","labelDetails":{"description":":gen_sctp"},"sortText":"00000305","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":gen_server","insertText":"gen_server","insertTextFormat":2,"kind":8,"label":":gen_server","labelDetails":{"description":":gen_server","detail":"behaviour"},"sortText":"00000306","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":gen_statem","insertText":"gen_statem","insertTextFormat":2,"kind":8,"label":":gen_statem","labelDetails":{"description":":gen_statem","detail":"behaviour"},"sortText":"00000307","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":gen_tcp","insertText":"gen_tcp","insertTextFormat":2,"kind":9,"label":":gen_tcp","labelDetails":{"description":":gen_tcp"},"sortText":"00000308","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":gen_tcp_socket","insertText":"gen_tcp_socket","insertTextFormat":2,"kind":9,"label":":gen_tcp_socket","labelDetails":{"description":":gen_tcp_socket"},"sortText":"00000309","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":gen_udp","insertText":"gen_udp","insertTextFormat":2,"kind":9,"label":":gen_udp","labelDetails":{"description":":gen_udp"},"sortText":"00000310","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":gen_udp_socket","insertText":"gen_udp_socket","insertTextFormat":2,"kind":9,"label":":gen_udp_socket","labelDetails":{"description":":gen_udp_socket"},"sortText":"00000311","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":global","insertText":"global","insertTextFormat":2,"kind":9,"label":":global","labelDetails":{"description":":global"},"sortText":"00000312","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":global_group","insertText":"global_group","insertTextFormat":2,"kind":9,"label":":global_group","labelDetails":{"description":":global_group"},"sortText":"00000313","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":global_search","insertText":"global_search","insertTextFormat":2,"kind":9,"label":":global_search","labelDetails":{"description":":global_search"},"sortText":"00000314","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":group","insertText":"group","insertTextFormat":2,"kind":9,"label":":group","labelDetails":{"description":":group"},"sortText":"00000315","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":group_history","insertText":"group_history","insertTextFormat":2,"kind":9,"label":":group_history","labelDetails":{"description":":group_history"},"sortText":"00000316","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney","insertText":"hackney","insertTextFormat":2,"kind":9,"label":":hackney","labelDetails":{"description":":hackney"},"sortText":"00000317","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_app","insertText":"hackney_app","insertTextFormat":2,"kind":9,"label":":hackney_app","labelDetails":{"description":":hackney_app"},"sortText":"00000318","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_bstr","insertText":"hackney_bstr","insertTextFormat":2,"kind":9,"label":":hackney_bstr","labelDetails":{"description":":hackney_bstr"},"sortText":"00000319","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_connect","insertText":"hackney_connect","insertTextFormat":2,"kind":9,"label":":hackney_connect","labelDetails":{"description":":hackney_connect"},"sortText":"00000320","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_connection","insertText":"hackney_connection","insertTextFormat":2,"kind":9,"label":":hackney_connection","labelDetails":{"description":":hackney_connection"},"sortText":"00000321","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_connections","insertText":"hackney_connections","insertTextFormat":2,"kind":9,"label":":hackney_connections","labelDetails":{"description":":hackney_connections"},"sortText":"00000322","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_cookie","insertText":"hackney_cookie","insertTextFormat":2,"kind":9,"label":":hackney_cookie","labelDetails":{"description":":hackney_cookie"},"sortText":"00000323","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_date","insertText":"hackney_date","insertTextFormat":2,"kind":9,"label":":hackney_date","labelDetails":{"description":":hackney_date"},"sortText":"00000324","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_headers","insertText":"hackney_headers","insertTextFormat":2,"kind":9,"label":":hackney_headers","labelDetails":{"description":":hackney_headers"},"sortText":"00000325","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_headers_new","insertText":"hackney_headers_new","insertTextFormat":2,"kind":9,"label":":hackney_headers_new","labelDetails":{"description":":hackney_headers_new"},"sortText":"00000326","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_http","insertText":"hackney_http","insertTextFormat":2,"kind":9,"label":":hackney_http","labelDetails":{"description":":hackney_http"},"sortText":"00000327","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_http_connect","insertText":"hackney_http_connect","insertTextFormat":2,"kind":9,"label":":hackney_http_connect","labelDetails":{"description":":hackney_http_connect"},"sortText":"00000328","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_local_tcp","insertText":"hackney_local_tcp","insertTextFormat":2,"kind":9,"label":":hackney_local_tcp","labelDetails":{"description":":hackney_local_tcp"},"sortText":"00000329","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_manager","insertText":"hackney_manager","insertTextFormat":2,"kind":9,"label":":hackney_manager","labelDetails":{"description":":hackney_manager"},"sortText":"00000330","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_metrics","insertText":"hackney_metrics","insertTextFormat":2,"kind":9,"label":":hackney_metrics","labelDetails":{"description":":hackney_metrics"},"sortText":"00000331","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_multipart","insertText":"hackney_multipart","insertTextFormat":2,"kind":9,"label":":hackney_multipart","labelDetails":{"description":":hackney_multipart"},"sortText":"00000332","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_pool","insertText":"hackney_pool","insertTextFormat":2,"kind":9,"label":":hackney_pool","labelDetails":{"description":":hackney_pool"},"sortText":"00000333","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":hackney_pool_handler","insertText":"hackney_pool_handler","insertTextFormat":2,"kind":8,"label":":hackney_pool_handler","labelDetails":{"description":":hackney_pool_handler","detail":"behaviour"},"sortText":"00000334","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_request","insertText":"hackney_request","insertTextFormat":2,"kind":9,"label":":hackney_request","labelDetails":{"description":":hackney_request"},"sortText":"00000335","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_response","insertText":"hackney_response","insertTextFormat":2,"kind":9,"label":":hackney_response","labelDetails":{"description":":hackney_response"},"sortText":"00000336","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_socks5","insertText":"hackney_socks5","insertTextFormat":2,"kind":9,"label":":hackney_socks5","labelDetails":{"description":":hackney_socks5"},"sortText":"00000337","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_ssl","insertText":"hackney_ssl","insertTextFormat":2,"kind":9,"label":":hackney_ssl","labelDetails":{"description":":hackney_ssl"},"sortText":"00000338","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_ssl_certificate","insertText":"hackney_ssl_certificate","insertTextFormat":2,"kind":9,"label":":hackney_ssl_certificate","labelDetails":{"description":":hackney_ssl_certificate"},"sortText":"00000339","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_stream","insertText":"hackney_stream","insertTextFormat":2,"kind":9,"label":":hackney_stream","labelDetails":{"description":":hackney_stream"},"sortText":"00000340","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_sup","insertText":"hackney_sup","insertTextFormat":2,"kind":9,"label":":hackney_sup","labelDetails":{"description":":hackney_sup"},"sortText":"00000341","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_tcp","insertText":"hackney_tcp","insertTextFormat":2,"kind":9,"label":":hackney_tcp","labelDetails":{"description":":hackney_tcp"},"sortText":"00000342","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_trace","insertText":"hackney_trace","insertTextFormat":2,"kind":9,"label":":hackney_trace","labelDetails":{"description":":hackney_trace"},"sortText":"00000343","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_url","insertText":"hackney_url","insertTextFormat":2,"kind":9,"label":":hackney_url","labelDetails":{"description":":hackney_url"},"sortText":"00000344","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":hackney_util","insertText":"hackney_util","insertTextFormat":2,"kind":9,"label":":hackney_util","labelDetails":{"description":":hackney_util"},"sortText":"00000345","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":heart","insertText":"heart","insertTextFormat":2,"kind":9,"label":":heart","labelDetails":{"description":":heart"},"sortText":"00000346","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":http_chunk","insertText":"http_chunk","insertTextFormat":2,"kind":9,"label":":http_chunk","labelDetails":{"description":":http_chunk"},"sortText":"00000347","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":http_request","insertText":"http_request","insertTextFormat":2,"kind":9,"label":":http_request","labelDetails":{"description":":http_request"},"sortText":"00000348","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":http_response","insertText":"http_response","insertTextFormat":2,"kind":9,"label":":http_response","labelDetails":{"description":":http_response"},"sortText":"00000349","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":http_transport","insertText":"http_transport","insertTextFormat":2,"kind":9,"label":":http_transport","labelDetails":{"description":":http_transport"},"sortText":"00000350","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":http_uri","insertText":"http_uri","insertTextFormat":2,"kind":9,"label":":http_uri","labelDetails":{"description":":http_uri"},"sortText":"00000351","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":http_util","insertText":"http_util","insertTextFormat":2,"kind":9,"label":":http_util","labelDetails":{"description":":http_util"},"sortText":"00000352","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpc","insertText":"httpc","insertTextFormat":2,"kind":9,"label":":httpc","labelDetails":{"description":":httpc"},"sortText":"00000353","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpc_cookie","insertText":"httpc_cookie","insertTextFormat":2,"kind":9,"label":":httpc_cookie","labelDetails":{"description":":httpc_cookie"},"sortText":"00000354","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpc_handler","insertText":"httpc_handler","insertTextFormat":2,"kind":9,"label":":httpc_handler","labelDetails":{"description":":httpc_handler"},"sortText":"00000355","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpc_handler_sup","insertText":"httpc_handler_sup","insertTextFormat":2,"kind":9,"label":":httpc_handler_sup","labelDetails":{"description":":httpc_handler_sup"},"sortText":"00000356","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpc_manager","insertText":"httpc_manager","insertTextFormat":2,"kind":9,"label":":httpc_manager","labelDetails":{"description":":httpc_manager"},"sortText":"00000357","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpc_profile_sup","insertText":"httpc_profile_sup","insertTextFormat":2,"kind":9,"label":":httpc_profile_sup","labelDetails":{"description":":httpc_profile_sup"},"sortText":"00000358","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpc_request","insertText":"httpc_request","insertTextFormat":2,"kind":9,"label":":httpc_request","labelDetails":{"description":":httpc_request"},"sortText":"00000359","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpc_response","insertText":"httpc_response","insertTextFormat":2,"kind":9,"label":":httpc_response","labelDetails":{"description":":httpc_response"},"sortText":"00000360","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpc_sup","insertText":"httpc_sup","insertTextFormat":2,"kind":9,"label":":httpc_sup","labelDetails":{"description":":httpc_sup"},"sortText":"00000361","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd","insertText":"httpd","insertTextFormat":2,"kind":9,"label":":httpd","labelDetails":{"description":":httpd"},"sortText":"00000362","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_acceptor","insertText":"httpd_acceptor","insertTextFormat":2,"kind":9,"label":":httpd_acceptor","labelDetails":{"description":":httpd_acceptor"},"sortText":"00000363","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_acceptor_sup","insertText":"httpd_acceptor_sup","insertTextFormat":2,"kind":9,"label":":httpd_acceptor_sup","labelDetails":{"description":":httpd_acceptor_sup"},"sortText":"00000364","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_cgi","insertText":"httpd_cgi","insertTextFormat":2,"kind":9,"label":":httpd_cgi","labelDetails":{"description":":httpd_cgi"},"sortText":"00000365","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_conf","insertText":"httpd_conf","insertTextFormat":2,"kind":9,"label":":httpd_conf","labelDetails":{"description":":httpd_conf"},"sortText":"00000366","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_connection_sup","insertText":"httpd_connection_sup","insertTextFormat":2,"kind":9,"label":":httpd_connection_sup","labelDetails":{"description":":httpd_connection_sup"},"sortText":"00000367","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_custom","insertText":"httpd_custom","insertTextFormat":2,"kind":9,"label":":httpd_custom","labelDetails":{"description":":httpd_custom"},"sortText":"00000368","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":httpd_custom_api","insertText":"httpd_custom_api","insertTextFormat":2,"kind":8,"label":":httpd_custom_api","labelDetails":{"description":":httpd_custom_api","detail":"behaviour"},"sortText":"00000369","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_esi","insertText":"httpd_esi","insertTextFormat":2,"kind":9,"label":":httpd_esi","labelDetails":{"description":":httpd_esi"},"sortText":"00000370","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_example","insertText":"httpd_example","insertTextFormat":2,"kind":9,"label":":httpd_example","labelDetails":{"description":":httpd_example"},"sortText":"00000371","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_file","insertText":"httpd_file","insertTextFormat":2,"kind":9,"label":":httpd_file","labelDetails":{"description":":httpd_file"},"sortText":"00000372","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_instance_sup","insertText":"httpd_instance_sup","insertTextFormat":2,"kind":9,"label":":httpd_instance_sup","labelDetails":{"description":":httpd_instance_sup"},"sortText":"00000373","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_log","insertText":"httpd_log","insertTextFormat":2,"kind":9,"label":":httpd_log","labelDetails":{"description":":httpd_log"},"sortText":"00000374","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_logger","insertText":"httpd_logger","insertTextFormat":2,"kind":9,"label":":httpd_logger","labelDetails":{"description":":httpd_logger"},"sortText":"00000375","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_manager","insertText":"httpd_manager","insertTextFormat":2,"kind":9,"label":":httpd_manager","labelDetails":{"description":":httpd_manager"},"sortText":"00000376","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_misc_sup","insertText":"httpd_misc_sup","insertTextFormat":2,"kind":9,"label":":httpd_misc_sup","labelDetails":{"description":":httpd_misc_sup"},"sortText":"00000377","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_request","insertText":"httpd_request","insertTextFormat":2,"kind":9,"label":":httpd_request","labelDetails":{"description":":httpd_request"},"sortText":"00000378","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_request_handler","insertText":"httpd_request_handler","insertTextFormat":2,"kind":9,"label":":httpd_request_handler","labelDetails":{"description":":httpd_request_handler"},"sortText":"00000379","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_response","insertText":"httpd_response","insertTextFormat":2,"kind":9,"label":":httpd_response","labelDetails":{"description":":httpd_response"},"sortText":"00000380","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_script_env","insertText":"httpd_script_env","insertTextFormat":2,"kind":9,"label":":httpd_script_env","labelDetails":{"description":":httpd_script_env"},"sortText":"00000381","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_socket","insertText":"httpd_socket","insertTextFormat":2,"kind":9,"label":":httpd_socket","labelDetails":{"description":":httpd_socket"},"sortText":"00000382","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_sup","insertText":"httpd_sup","insertTextFormat":2,"kind":9,"label":":httpd_sup","labelDetails":{"description":":httpd_sup"},"sortText":"00000383","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":httpd_util","insertText":"httpd_util","insertTextFormat":2,"kind":9,"label":":httpd_util","labelDetails":{"description":":httpd_util"},"sortText":"00000384","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":idna","insertText":"idna","insertTextFormat":2,"kind":9,"label":":idna","labelDetails":{"description":":idna"},"sortText":"00000385","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":idna_bidi","insertText":"idna_bidi","insertTextFormat":2,"kind":9,"label":":idna_bidi","labelDetails":{"description":":idna_bidi"},"sortText":"00000386","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":idna_context","insertText":"idna_context","insertTextFormat":2,"kind":9,"label":":idna_context","labelDetails":{"description":":idna_context"},"sortText":"00000387","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":idna_data","insertText":"idna_data","insertTextFormat":2,"kind":9,"label":":idna_data","labelDetails":{"description":":idna_data"},"sortText":"00000388","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":idna_mapping","insertText":"idna_mapping","insertTextFormat":2,"kind":9,"label":":idna_mapping","labelDetails":{"description":":idna_mapping"},"sortText":"00000389","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":idna_table","insertText":"idna_table","insertTextFormat":2,"kind":9,"label":":idna_table","labelDetails":{"description":":idna_table"},"sortText":"00000390","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":idna_ucs","insertText":"idna_ucs","insertTextFormat":2,"kind":9,"label":":idna_ucs","labelDetails":{"description":":idna_ucs"},"sortText":"00000391","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet","insertText":"inet","insertTextFormat":2,"kind":9,"label":":inet","labelDetails":{"description":":inet"},"sortText":"00000392","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet6_sctp","insertText":"inet6_sctp","insertTextFormat":2,"kind":9,"label":":inet6_sctp","labelDetails":{"description":":inet6_sctp"},"sortText":"00000393","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet6_tcp","insertText":"inet6_tcp","insertTextFormat":2,"kind":9,"label":":inet6_tcp","labelDetails":{"description":":inet6_tcp"},"sortText":"00000394","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet6_tcp_dist","insertText":"inet6_tcp_dist","insertTextFormat":2,"kind":9,"label":":inet6_tcp_dist","labelDetails":{"description":":inet6_tcp_dist"},"sortText":"00000395","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet6_tls_dist","insertText":"inet6_tls_dist","insertTextFormat":2,"kind":9,"label":":inet6_tls_dist","labelDetails":{"description":":inet6_tls_dist"},"sortText":"00000396","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet6_udp","insertText":"inet6_udp","insertTextFormat":2,"kind":9,"label":":inet6_udp","labelDetails":{"description":":inet6_udp"},"sortText":"00000397","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_config","insertText":"inet_config","insertTextFormat":2,"kind":9,"label":":inet_config","labelDetails":{"description":":inet_config"},"sortText":"00000398","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_db","insertText":"inet_db","insertTextFormat":2,"kind":9,"label":":inet_db","labelDetails":{"description":":inet_db"},"sortText":"00000399","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_dns","insertText":"inet_dns","insertTextFormat":2,"kind":9,"label":":inet_dns","labelDetails":{"description":":inet_dns"},"sortText":"00000400","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_epmd_dist","insertText":"inet_epmd_dist","insertTextFormat":2,"kind":9,"label":":inet_epmd_dist","labelDetails":{"description":":inet_epmd_dist"},"sortText":"00000401","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_epmd_socket","insertText":"inet_epmd_socket","insertTextFormat":2,"kind":9,"label":":inet_epmd_socket","labelDetails":{"description":":inet_epmd_socket"},"sortText":"00000402","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_gethost_native","insertText":"inet_gethost_native","insertTextFormat":2,"kind":9,"label":":inet_gethost_native","labelDetails":{"description":":inet_gethost_native"},"sortText":"00000403","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_hosts","insertText":"inet_hosts","insertTextFormat":2,"kind":9,"label":":inet_hosts","labelDetails":{"description":":inet_hosts"},"sortText":"00000404","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_parse","insertText":"inet_parse","insertTextFormat":2,"kind":9,"label":":inet_parse","labelDetails":{"description":":inet_parse"},"sortText":"00000405","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_res","insertText":"inet_res","insertTextFormat":2,"kind":9,"label":":inet_res","labelDetails":{"description":":inet_res"},"sortText":"00000406","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_sctp","insertText":"inet_sctp","insertTextFormat":2,"kind":9,"label":":inet_sctp","labelDetails":{"description":":inet_sctp"},"sortText":"00000407","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_tcp","insertText":"inet_tcp","insertTextFormat":2,"kind":9,"label":":inet_tcp","labelDetails":{"description":":inet_tcp"},"sortText":"00000408","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_tcp_dist","insertText":"inet_tcp_dist","insertTextFormat":2,"kind":9,"label":":inet_tcp_dist","labelDetails":{"description":":inet_tcp_dist"},"sortText":"00000409","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_tls_dist","insertText":"inet_tls_dist","insertTextFormat":2,"kind":9,"label":":inet_tls_dist","labelDetails":{"description":":inet_tls_dist"},"sortText":"00000410","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inet_udp","insertText":"inet_udp","insertTextFormat":2,"kind":9,"label":":inet_udp","labelDetails":{"description":":inet_udp"},"sortText":"00000411","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inets","insertText":"inets","insertTextFormat":2,"kind":9,"label":":inets","labelDetails":{"description":":inets"},"sortText":"00000412","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inets_app","insertText":"inets_app","insertTextFormat":2,"kind":9,"label":":inets_app","labelDetails":{"description":":inets_app"},"sortText":"00000413","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inets_lib","insertText":"inets_lib","insertTextFormat":2,"kind":9,"label":":inets_lib","labelDetails":{"description":":inets_lib"},"sortText":"00000414","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":inets_service","insertText":"inets_service","insertTextFormat":2,"kind":8,"label":":inets_service","labelDetails":{"description":":inets_service","detail":"behaviour"},"sortText":"00000415","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inets_sup","insertText":"inets_sup","insertTextFormat":2,"kind":9,"label":":inets_sup","labelDetails":{"description":":inets_sup"},"sortText":"00000416","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":inets_trace","insertText":"inets_trace","insertTextFormat":2,"kind":9,"label":":inets_trace","labelDetails":{"description":":inets_trace"},"sortText":"00000417","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":init","insertText":"init","insertTextFormat":2,"kind":9,"label":":init","labelDetails":{"description":":init"},"sortText":"00000418","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":io","insertText":"io","insertTextFormat":2,"kind":9,"label":":io","labelDetails":{"description":":io"},"sortText":"00000419","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":io_lib","insertText":"io_lib","insertTextFormat":2,"kind":9,"label":":io_lib","labelDetails":{"description":":io_lib"},"sortText":"00000420","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":io_lib_format","insertText":"io_lib_format","insertTextFormat":2,"kind":9,"label":":io_lib_format","labelDetails":{"description":":io_lib_format"},"sortText":"00000421","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":io_lib_fread","insertText":"io_lib_fread","insertTextFormat":2,"kind":9,"label":":io_lib_fread","labelDetails":{"description":":io_lib_fread"},"sortText":"00000422","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":io_lib_pretty","insertText":"io_lib_pretty","insertTextFormat":2,"kind":9,"label":":io_lib_pretty","labelDetails":{"description":":io_lib_pretty"},"sortText":"00000423","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":kernel","insertText":"kernel","insertTextFormat":2,"kind":9,"label":":kernel","labelDetails":{"description":":kernel"},"sortText":"00000424","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":kernel_config","insertText":"kernel_config","insertTextFormat":2,"kind":9,"label":":kernel_config","labelDetails":{"description":":kernel_config"},"sortText":"00000425","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":kernel_refc","insertText":"kernel_refc","insertTextFormat":2,"kind":9,"label":":kernel_refc","labelDetails":{"description":":kernel_refc"},"sortText":"00000426","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":lexer","insertText":"lexer","insertTextFormat":2,"kind":9,"label":":lexer","labelDetails":{"description":":lexer"},"sortText":"00000427","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":lists","insertText":"lists","insertTextFormat":2,"kind":9,"label":":lists","labelDetails":{"description":":lists"},"sortText":"00000428","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":local_tcp","insertText":"local_tcp","insertTextFormat":2,"kind":9,"label":":local_tcp","labelDetails":{"description":":local_tcp"},"sortText":"00000429","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":local_udp","insertText":"local_udp","insertTextFormat":2,"kind":9,"label":":local_udp","labelDetails":{"description":":local_udp"},"sortText":"00000430","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":log_mf_h","insertText":"log_mf_h","insertTextFormat":2,"kind":9,"label":":log_mf_h","labelDetails":{"description":":log_mf_h"},"sortText":"00000431","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger","insertText":"logger","insertTextFormat":2,"kind":9,"label":":logger","labelDetails":{"description":":logger"},"sortText":"00000432","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_backend","insertText":"logger_backend","insertTextFormat":2,"kind":9,"label":":logger_backend","labelDetails":{"description":":logger_backend"},"sortText":"00000433","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_config","insertText":"logger_config","insertTextFormat":2,"kind":9,"label":":logger_config","labelDetails":{"description":":logger_config"},"sortText":"00000434","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_disk_log_h","insertText":"logger_disk_log_h","insertTextFormat":2,"kind":9,"label":":logger_disk_log_h","labelDetails":{"description":":logger_disk_log_h"},"sortText":"00000435","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_filters","insertText":"logger_filters","insertTextFormat":2,"kind":9,"label":":logger_filters","labelDetails":{"description":":logger_filters"},"sortText":"00000436","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_formatter","insertText":"logger_formatter","insertTextFormat":2,"kind":9,"label":":logger_formatter","labelDetails":{"description":":logger_formatter"},"sortText":"00000437","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_h_common","insertText":"logger_h_common","insertTextFormat":2,"kind":9,"label":":logger_h_common","labelDetails":{"description":":logger_h_common"},"sortText":"00000438","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_handler_watcher","insertText":"logger_handler_watcher","insertTextFormat":2,"kind":9,"label":":logger_handler_watcher","labelDetails":{"description":":logger_handler_watcher"},"sortText":"00000439","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_olp","insertText":"logger_olp","insertTextFormat":2,"kind":9,"label":":logger_olp","labelDetails":{"description":":logger_olp"},"sortText":"00000440","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_proxy","insertText":"logger_proxy","insertTextFormat":2,"kind":9,"label":":logger_proxy","labelDetails":{"description":":logger_proxy"},"sortText":"00000441","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_server","insertText":"logger_server","insertTextFormat":2,"kind":9,"label":":logger_server","labelDetails":{"description":":logger_server"},"sortText":"00000442","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_simple_h","insertText":"logger_simple_h","insertTextFormat":2,"kind":9,"label":":logger_simple_h","labelDetails":{"description":":logger_simple_h"},"sortText":"00000443","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_std_h","insertText":"logger_std_h","insertTextFormat":2,"kind":9,"label":":logger_std_h","labelDetails":{"description":":logger_std_h"},"sortText":"00000444","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":logger_sup","insertText":"logger_sup","insertTextFormat":2,"kind":9,"label":":logger_sup","labelDetails":{"description":":logger_sup"},"sortText":"00000445","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":maps","insertText":"maps","insertTextFormat":2,"kind":9,"label":":maps","labelDetails":{"description":":maps"},"sortText":"00000446","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":math","insertText":"math","insertTextFormat":2,"kind":9,"label":":math","labelDetails":{"description":":math"},"sortText":"00000447","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":merl","insertText":"merl","insertTextFormat":2,"kind":9,"label":":merl","labelDetails":{"description":":merl"},"sortText":"00000448","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":merl_transform","insertText":"merl_transform","insertTextFormat":2,"kind":9,"label":":merl_transform","labelDetails":{"description":":merl_transform"},"sortText":"00000449","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":metrics","insertText":"metrics","insertTextFormat":2,"kind":9,"label":":metrics","labelDetails":{"description":":metrics"},"sortText":"00000450","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":metrics_dummy","insertText":"metrics_dummy","insertTextFormat":2,"kind":9,"label":":metrics_dummy","labelDetails":{"description":":metrics_dummy"},"sortText":"00000451","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":metrics_exometer","insertText":"metrics_exometer","insertTextFormat":2,"kind":9,"label":":metrics_exometer","labelDetails":{"description":":metrics_exometer"},"sortText":"00000452","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":metrics_folsom","insertText":"metrics_folsom","insertTextFormat":2,"kind":9,"label":":metrics_folsom","labelDetails":{"description":":metrics_folsom"},"sortText":"00000453","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mimerl","insertText":"mimerl","insertTextFormat":2,"kind":9,"label":":mimerl","labelDetails":{"description":":mimerl"},"sortText":"00000454","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_core","insertText":"mix_hex_core","insertTextFormat":2,"kind":9,"label":":mix_hex_core","labelDetails":{"description":":mix_hex_core"},"sortText":"00000455","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_erl_tar","insertText":"mix_hex_erl_tar","insertTextFormat":2,"kind":9,"label":":mix_hex_erl_tar","labelDetails":{"description":":mix_hex_erl_tar"},"sortText":"00000456","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_filename","insertText":"mix_hex_filename","insertTextFormat":2,"kind":9,"label":":mix_hex_filename","labelDetails":{"description":":mix_hex_filename"},"sortText":"00000457","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_http","insertText":"mix_hex_http","insertTextFormat":2,"kind":8,"label":":mix_hex_http","labelDetails":{"description":":mix_hex_http","detail":"behaviour"},"sortText":"00000458","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_http_httpc","insertText":"mix_hex_http_httpc","insertTextFormat":2,"kind":9,"label":":mix_hex_http_httpc","labelDetails":{"description":":mix_hex_http_httpc"},"sortText":"00000459","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_licenses","insertText":"mix_hex_licenses","insertTextFormat":2,"kind":9,"label":":mix_hex_licenses","labelDetails":{"description":":mix_hex_licenses"},"sortText":"00000460","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_pb_names","insertText":"mix_hex_pb_names","insertTextFormat":2,"kind":9,"label":":mix_hex_pb_names","labelDetails":{"description":":mix_hex_pb_names"},"sortText":"00000461","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_pb_package","insertText":"mix_hex_pb_package","insertTextFormat":2,"kind":9,"label":":mix_hex_pb_package","labelDetails":{"description":":mix_hex_pb_package"},"sortText":"00000462","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_pb_signed","insertText":"mix_hex_pb_signed","insertTextFormat":2,"kind":9,"label":":mix_hex_pb_signed","labelDetails":{"description":":mix_hex_pb_signed"},"sortText":"00000463","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_pb_versions","insertText":"mix_hex_pb_versions","insertTextFormat":2,"kind":9,"label":":mix_hex_pb_versions","labelDetails":{"description":":mix_hex_pb_versions"},"sortText":"00000464","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_registry","insertText":"mix_hex_registry","insertTextFormat":2,"kind":9,"label":":mix_hex_registry","labelDetails":{"description":":mix_hex_registry"},"sortText":"00000465","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_repo","insertText":"mix_hex_repo","insertTextFormat":2,"kind":9,"label":":mix_hex_repo","labelDetails":{"description":":mix_hex_repo"},"sortText":"00000466","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_hex_tarball","insertText":"mix_hex_tarball","insertTextFormat":2,"kind":9,"label":":mix_hex_tarball","labelDetails":{"description":":mix_hex_tarball"},"sortText":"00000467","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mix_safe_erl_term","insertText":"mix_safe_erl_term","insertTextFormat":2,"kind":9,"label":":mix_safe_erl_term","labelDetails":{"description":":mix_safe_erl_term"},"sortText":"00000468","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_actions","insertText":"mod_actions","insertTextFormat":2,"kind":9,"label":":mod_actions","labelDetails":{"description":":mod_actions"},"sortText":"00000469","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_alias","insertText":"mod_alias","insertTextFormat":2,"kind":9,"label":":mod_alias","labelDetails":{"description":":mod_alias"},"sortText":"00000470","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_auth","insertText":"mod_auth","insertTextFormat":2,"kind":9,"label":":mod_auth","labelDetails":{"description":":mod_auth"},"sortText":"00000471","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_auth_dets","insertText":"mod_auth_dets","insertTextFormat":2,"kind":9,"label":":mod_auth_dets","labelDetails":{"description":":mod_auth_dets"},"sortText":"00000472","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_auth_mnesia","insertText":"mod_auth_mnesia","insertTextFormat":2,"kind":9,"label":":mod_auth_mnesia","labelDetails":{"description":":mod_auth_mnesia"},"sortText":"00000473","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_auth_plain","insertText":"mod_auth_plain","insertTextFormat":2,"kind":9,"label":":mod_auth_plain","labelDetails":{"description":":mod_auth_plain"},"sortText":"00000474","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_auth_server","insertText":"mod_auth_server","insertTextFormat":2,"kind":9,"label":":mod_auth_server","labelDetails":{"description":":mod_auth_server"},"sortText":"00000475","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_cgi","insertText":"mod_cgi","insertTextFormat":2,"kind":9,"label":":mod_cgi","labelDetails":{"description":":mod_cgi"},"sortText":"00000476","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_dir","insertText":"mod_dir","insertTextFormat":2,"kind":9,"label":":mod_dir","labelDetails":{"description":":mod_dir"},"sortText":"00000477","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_disk_log","insertText":"mod_disk_log","insertTextFormat":2,"kind":9,"label":":mod_disk_log","labelDetails":{"description":":mod_disk_log"},"sortText":"00000478","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_esi","insertText":"mod_esi","insertTextFormat":2,"kind":9,"label":":mod_esi","labelDetails":{"description":":mod_esi"},"sortText":"00000479","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_get","insertText":"mod_get","insertTextFormat":2,"kind":9,"label":":mod_get","labelDetails":{"description":":mod_get"},"sortText":"00000480","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_head","insertText":"mod_head","insertTextFormat":2,"kind":9,"label":":mod_head","labelDetails":{"description":":mod_head"},"sortText":"00000481","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_log","insertText":"mod_log","insertTextFormat":2,"kind":9,"label":":mod_log","labelDetails":{"description":":mod_log"},"sortText":"00000482","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_range","insertText":"mod_range","insertTextFormat":2,"kind":9,"label":":mod_range","labelDetails":{"description":":mod_range"},"sortText":"00000483","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_responsecontrol","insertText":"mod_responsecontrol","insertTextFormat":2,"kind":9,"label":":mod_responsecontrol","labelDetails":{"description":":mod_responsecontrol"},"sortText":"00000484","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_security","insertText":"mod_security","insertTextFormat":2,"kind":9,"label":":mod_security","labelDetails":{"description":":mod_security"},"sortText":"00000485","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_security_server","insertText":"mod_security_server","insertTextFormat":2,"kind":9,"label":":mod_security_server","labelDetails":{"description":":mod_security_server"},"sortText":"00000486","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":mod_trace","insertText":"mod_trace","insertTextFormat":2,"kind":9,"label":":mod_trace","labelDetails":{"description":":mod_trace"},"sortText":"00000487","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ms_transform","insertText":"ms_transform","insertTextFormat":2,"kind":9,"label":":ms_transform","labelDetails":{"description":":ms_transform"},"sortText":"00000488","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":net","insertText":"net","insertTextFormat":2,"kind":9,"label":":net","labelDetails":{"description":":net"},"sortText":"00000489","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":net_adm","insertText":"net_adm","insertTextFormat":2,"kind":9,"label":":net_adm","labelDetails":{"description":":net_adm"},"sortText":"00000490","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":net_kernel","insertText":"net_kernel","insertTextFormat":2,"kind":9,"label":":net_kernel","labelDetails":{"description":":net_kernel"},"sortText":"00000491","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":orddict","insertText":"orddict","insertTextFormat":2,"kind":9,"label":":orddict","labelDetails":{"description":":orddict"},"sortText":"00000492","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ordsets","insertText":"ordsets","insertTextFormat":2,"kind":9,"label":":ordsets","labelDetails":{"description":":ordsets"},"sortText":"00000493","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":os","insertText":"os","insertTextFormat":2,"kind":9,"label":":os","labelDetails":{"description":":os"},"sortText":"00000494","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":otp_internal","insertText":"otp_internal","insertTextFormat":2,"kind":9,"label":":otp_internal","labelDetails":{"description":":otp_internal"},"sortText":"00000495","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":parse_trans","insertText":"parse_trans","insertTextFormat":2,"kind":9,"label":":parse_trans","labelDetails":{"description":":parse_trans"},"sortText":"00000496","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":parse_trans_codegen","insertText":"parse_trans_codegen","insertTextFormat":2,"kind":9,"label":":parse_trans_codegen","labelDetails":{"description":":parse_trans_codegen"},"sortText":"00000497","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":parse_trans_mod","insertText":"parse_trans_mod","insertTextFormat":2,"kind":9,"label":":parse_trans_mod","labelDetails":{"description":":parse_trans_mod"},"sortText":"00000498","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":parse_trans_pp","insertText":"parse_trans_pp","insertTextFormat":2,"kind":9,"label":":parse_trans_pp","labelDetails":{"description":":parse_trans_pp"},"sortText":"00000499","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":parser","insertText":"parser","insertTextFormat":2,"kind":9,"label":":parser","labelDetails":{"description":":parser"},"sortText":"00000500","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":peer","insertText":"peer","insertTextFormat":2,"kind":9,"label":":peer","labelDetails":{"description":":peer"},"sortText":"00000501","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":persistent_term","insertText":"persistent_term","insertTextFormat":2,"kind":9,"label":":persistent_term","labelDetails":{"description":":persistent_term"},"sortText":"00000502","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pg","insertText":"pg","insertTextFormat":2,"kind":9,"label":":pg","labelDetails":{"description":":pg"},"sortText":"00000503","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pg2","insertText":"pg2","insertTextFormat":2,"kind":9,"label":":pg2","labelDetails":{"description":":pg2"},"sortText":"00000504","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pool","insertText":"pool","insertTextFormat":2,"kind":9,"label":":pool","labelDetails":{"description":":pool"},"sortText":"00000505","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":prettypr","insertText":"prettypr","insertTextFormat":2,"kind":9,"label":":prettypr","labelDetails":{"description":":prettypr"},"sortText":"00000506","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":prim_buffer","insertText":"prim_buffer","insertTextFormat":2,"kind":9,"label":":prim_buffer","labelDetails":{"description":":prim_buffer"},"sortText":"00000507","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":prim_eval","insertText":"prim_eval","insertTextFormat":2,"kind":9,"label":":prim_eval","labelDetails":{"description":":prim_eval"},"sortText":"00000508","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":prim_file","insertText":"prim_file","insertTextFormat":2,"kind":9,"label":":prim_file","labelDetails":{"description":":prim_file"},"sortText":"00000509","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":prim_inet","insertText":"prim_inet","insertTextFormat":2,"kind":9,"label":":prim_inet","labelDetails":{"description":":prim_inet"},"sortText":"00000510","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":prim_net","insertText":"prim_net","insertTextFormat":2,"kind":9,"label":":prim_net","labelDetails":{"description":":prim_net"},"sortText":"00000511","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":prim_socket","insertText":"prim_socket","insertTextFormat":2,"kind":9,"label":":prim_socket","labelDetails":{"description":":prim_socket"},"sortText":"00000512","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":prim_tty","insertText":"prim_tty","insertTextFormat":2,"kind":9,"label":":prim_tty","labelDetails":{"description":":prim_tty"},"sortText":"00000513","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":prim_zip","insertText":"prim_zip","insertTextFormat":2,"kind":9,"label":":prim_zip","labelDetails":{"description":":prim_zip"},"sortText":"00000514","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":proc_lib","insertText":"proc_lib","insertTextFormat":2,"kind":9,"label":":proc_lib","labelDetails":{"description":":proc_lib"},"sortText":"00000515","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":proplists","insertText":"proplists","insertTextFormat":2,"kind":9,"label":":proplists","labelDetails":{"description":":proplists"},"sortText":"00000516","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pubkey_cert","insertText":"pubkey_cert","insertTextFormat":2,"kind":9,"label":":pubkey_cert","labelDetails":{"description":":pubkey_cert"},"sortText":"00000517","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pubkey_cert_records","insertText":"pubkey_cert_records","insertTextFormat":2,"kind":9,"label":":pubkey_cert_records","labelDetails":{"description":":pubkey_cert_records"},"sortText":"00000518","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pubkey_crl","insertText":"pubkey_crl","insertTextFormat":2,"kind":9,"label":":pubkey_crl","labelDetails":{"description":":pubkey_crl"},"sortText":"00000519","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pubkey_ocsp","insertText":"pubkey_ocsp","insertTextFormat":2,"kind":9,"label":":pubkey_ocsp","labelDetails":{"description":":pubkey_ocsp"},"sortText":"00000520","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pubkey_os_cacerts","insertText":"pubkey_os_cacerts","insertTextFormat":2,"kind":9,"label":":pubkey_os_cacerts","labelDetails":{"description":":pubkey_os_cacerts"},"sortText":"00000521","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pubkey_pbe","insertText":"pubkey_pbe","insertTextFormat":2,"kind":9,"label":":pubkey_pbe","labelDetails":{"description":":pubkey_pbe"},"sortText":"00000522","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pubkey_pem","insertText":"pubkey_pem","insertTextFormat":2,"kind":9,"label":":pubkey_pem","labelDetails":{"description":":pubkey_pem"},"sortText":"00000523","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":pubkey_ssh","insertText":"pubkey_ssh","insertTextFormat":2,"kind":9,"label":":pubkey_ssh","labelDetails":{"description":":pubkey_ssh"},"sortText":"00000524","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":public_key","insertText":"public_key","insertTextFormat":2,"kind":9,"label":":public_key","labelDetails":{"description":":public_key"},"sortText":"00000525","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":punycode","insertText":"punycode","insertTextFormat":2,"kind":9,"label":":punycode","labelDetails":{"description":":punycode"},"sortText":"00000526","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":qlc","insertText":"qlc","insertTextFormat":2,"kind":9,"label":":qlc","labelDetails":{"description":":qlc"},"sortText":"00000527","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":qlc_pt","insertText":"qlc_pt","insertTextFormat":2,"kind":9,"label":":qlc_pt","labelDetails":{"description":":qlc_pt"},"sortText":"00000528","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":queue","insertText":"queue","insertTextFormat":2,"kind":9,"label":":queue","labelDetails":{"description":":queue"},"sortText":"00000529","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ram_file","insertText":"ram_file","insertTextFormat":2,"kind":9,"label":":ram_file","labelDetails":{"description":":ram_file"},"sortText":"00000530","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":rand","insertText":"rand","insertTextFormat":2,"kind":9,"label":":rand","labelDetails":{"description":":rand"},"sortText":"00000531","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":random","insertText":"random","insertTextFormat":2,"kind":9,"label":":random","labelDetails":{"description":":random"},"sortText":"00000532","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":raw_file_io","insertText":"raw_file_io","insertTextFormat":2,"kind":9,"label":":raw_file_io","labelDetails":{"description":":raw_file_io"},"sortText":"00000533","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":raw_file_io_compressed","insertText":"raw_file_io_compressed","insertTextFormat":2,"kind":9,"label":":raw_file_io_compressed","labelDetails":{"description":":raw_file_io_compressed"},"sortText":"00000534","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":raw_file_io_deflate","insertText":"raw_file_io_deflate","insertTextFormat":2,"kind":9,"label":":raw_file_io_deflate","labelDetails":{"description":":raw_file_io_deflate"},"sortText":"00000535","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":raw_file_io_delayed","insertText":"raw_file_io_delayed","insertTextFormat":2,"kind":9,"label":":raw_file_io_delayed","labelDetails":{"description":":raw_file_io_delayed"},"sortText":"00000536","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":raw_file_io_inflate","insertText":"raw_file_io_inflate","insertTextFormat":2,"kind":9,"label":":raw_file_io_inflate","labelDetails":{"description":":raw_file_io_inflate"},"sortText":"00000537","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":raw_file_io_list","insertText":"raw_file_io_list","insertTextFormat":2,"kind":9,"label":":raw_file_io_list","labelDetails":{"description":":raw_file_io_list"},"sortText":"00000538","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":re","insertText":"re","insertTextFormat":2,"kind":9,"label":":re","labelDetails":{"description":":re"},"sortText":"00000539","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":rec_env","insertText":"rec_env","insertTextFormat":2,"kind":9,"label":":rec_env","labelDetails":{"description":":rec_env"},"sortText":"00000540","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":rpc","insertText":"rpc","insertTextFormat":2,"kind":9,"label":":rpc","labelDetails":{"description":":rpc"},"sortText":"00000541","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":seq_trace","insertText":"seq_trace","insertTextFormat":2,"kind":9,"label":":seq_trace","labelDetails":{"description":":seq_trace"},"sortText":"00000542","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sets","insertText":"sets","insertTextFormat":2,"kind":9,"label":":sets","labelDetails":{"description":":sets"},"sortText":"00000543","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":shell","insertText":"shell","insertTextFormat":2,"kind":9,"label":":shell","labelDetails":{"description":":shell"},"sortText":"00000544","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":shell_default","insertText":"shell_default","insertTextFormat":2,"kind":9,"label":":shell_default","labelDetails":{"description":":shell_default"},"sortText":"00000545","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":shell_docs","insertText":"shell_docs","insertTextFormat":2,"kind":9,"label":":shell_docs","labelDetails":{"description":":shell_docs"},"sortText":"00000546","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":slave","insertText":"slave","insertTextFormat":2,"kind":9,"label":":slave","labelDetails":{"description":":slave"},"sortText":"00000547","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":socket","insertText":"socket","insertTextFormat":2,"kind":9,"label":":socket","labelDetails":{"description":":socket"},"sortText":"00000548","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":socket_registry","insertText":"socket_registry","insertTextFormat":2,"kind":9,"label":":socket_registry","labelDetails":{"description":":socket_registry"},"sortText":"00000549","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sofs","insertText":"sofs","insertTextFormat":2,"kind":9,"label":":sofs","labelDetails":{"description":":sofs"},"sortText":"00000550","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl","insertText":"ssl","insertTextFormat":2,"kind":9,"label":":ssl","labelDetails":{"description":":ssl"},"sortText":"00000551","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_admin_sup","insertText":"ssl_admin_sup","insertTextFormat":2,"kind":9,"label":":ssl_admin_sup","labelDetails":{"description":":ssl_admin_sup"},"sortText":"00000552","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_alert","insertText":"ssl_alert","insertTextFormat":2,"kind":9,"label":":ssl_alert","labelDetails":{"description":":ssl_alert"},"sortText":"00000553","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_app","insertText":"ssl_app","insertTextFormat":2,"kind":9,"label":":ssl_app","labelDetails":{"description":":ssl_app"},"sortText":"00000554","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_certificate","insertText":"ssl_certificate","insertTextFormat":2,"kind":9,"label":":ssl_certificate","labelDetails":{"description":":ssl_certificate"},"sortText":"00000555","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_cipher","insertText":"ssl_cipher","insertTextFormat":2,"kind":9,"label":":ssl_cipher","labelDetails":{"description":":ssl_cipher"},"sortText":"00000556","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_cipher_format","insertText":"ssl_cipher_format","insertTextFormat":2,"kind":9,"label":":ssl_cipher_format","labelDetails":{"description":":ssl_cipher_format"},"sortText":"00000557","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_client_session_cache_db","insertText":"ssl_client_session_cache_db","insertTextFormat":2,"kind":9,"label":":ssl_client_session_cache_db","labelDetails":{"description":":ssl_client_session_cache_db"},"sortText":"00000558","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_config","insertText":"ssl_config","insertTextFormat":2,"kind":9,"label":":ssl_config","labelDetails":{"description":":ssl_config"},"sortText":"00000559","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_connection_sup","insertText":"ssl_connection_sup","insertTextFormat":2,"kind":9,"label":":ssl_connection_sup","labelDetails":{"description":":ssl_connection_sup"},"sortText":"00000560","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_crl","insertText":"ssl_crl","insertTextFormat":2,"kind":9,"label":":ssl_crl","labelDetails":{"description":":ssl_crl"},"sortText":"00000561","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_crl_cache","insertText":"ssl_crl_cache","insertTextFormat":2,"kind":9,"label":":ssl_crl_cache","labelDetails":{"description":":ssl_crl_cache"},"sortText":"00000562","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":ssl_crl_cache_api","insertText":"ssl_crl_cache_api","insertTextFormat":2,"kind":8,"label":":ssl_crl_cache_api","labelDetails":{"description":":ssl_crl_cache_api","detail":"behaviour"},"sortText":"00000563","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_crl_hash_dir","insertText":"ssl_crl_hash_dir","insertTextFormat":2,"kind":9,"label":":ssl_crl_hash_dir","labelDetails":{"description":":ssl_crl_hash_dir"},"sortText":"00000564","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_dh_groups","insertText":"ssl_dh_groups","insertTextFormat":2,"kind":9,"label":":ssl_dh_groups","labelDetails":{"description":":ssl_dh_groups"},"sortText":"00000565","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_dist_admin_sup","insertText":"ssl_dist_admin_sup","insertTextFormat":2,"kind":9,"label":":ssl_dist_admin_sup","labelDetails":{"description":":ssl_dist_admin_sup"},"sortText":"00000566","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_dist_connection_sup","insertText":"ssl_dist_connection_sup","insertTextFormat":2,"kind":9,"label":":ssl_dist_connection_sup","labelDetails":{"description":":ssl_dist_connection_sup"},"sortText":"00000567","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_dist_sup","insertText":"ssl_dist_sup","insertTextFormat":2,"kind":9,"label":":ssl_dist_sup","labelDetails":{"description":":ssl_dist_sup"},"sortText":"00000568","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_gen_statem","insertText":"ssl_gen_statem","insertTextFormat":2,"kind":9,"label":":ssl_gen_statem","labelDetails":{"description":":ssl_gen_statem"},"sortText":"00000569","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_handshake","insertText":"ssl_handshake","insertTextFormat":2,"kind":9,"label":":ssl_handshake","labelDetails":{"description":":ssl_handshake"},"sortText":"00000570","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_listen_tracker_sup","insertText":"ssl_listen_tracker_sup","insertTextFormat":2,"kind":9,"label":":ssl_listen_tracker_sup","labelDetails":{"description":":ssl_listen_tracker_sup"},"sortText":"00000571","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_logger","insertText":"ssl_logger","insertTextFormat":2,"kind":9,"label":":ssl_logger","labelDetails":{"description":":ssl_logger"},"sortText":"00000572","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_manager","insertText":"ssl_manager","insertTextFormat":2,"kind":9,"label":":ssl_manager","labelDetails":{"description":":ssl_manager"},"sortText":"00000573","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_pem_cache","insertText":"ssl_pem_cache","insertTextFormat":2,"kind":9,"label":":ssl_pem_cache","labelDetails":{"description":":ssl_pem_cache"},"sortText":"00000574","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_pkix_db","insertText":"ssl_pkix_db","insertTextFormat":2,"kind":9,"label":":ssl_pkix_db","labelDetails":{"description":":ssl_pkix_db"},"sortText":"00000575","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_record","insertText":"ssl_record","insertTextFormat":2,"kind":9,"label":":ssl_record","labelDetails":{"description":":ssl_record"},"sortText":"00000576","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_server_session_cache","insertText":"ssl_server_session_cache","insertTextFormat":2,"kind":9,"label":":ssl_server_session_cache","labelDetails":{"description":":ssl_server_session_cache"},"sortText":"00000577","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_server_session_cache_db","insertText":"ssl_server_session_cache_db","insertTextFormat":2,"kind":9,"label":":ssl_server_session_cache_db","labelDetails":{"description":":ssl_server_session_cache_db"},"sortText":"00000578","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_server_session_cache_sup","insertText":"ssl_server_session_cache_sup","insertTextFormat":2,"kind":9,"label":":ssl_server_session_cache_sup","labelDetails":{"description":":ssl_server_session_cache_sup"},"sortText":"00000579","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_session","insertText":"ssl_session","insertTextFormat":2,"kind":9,"label":":ssl_session","labelDetails":{"description":":ssl_session"},"sortText":"00000580","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":ssl_session_cache_api","insertText":"ssl_session_cache_api","insertTextFormat":2,"kind":8,"label":":ssl_session_cache_api","labelDetails":{"description":":ssl_session_cache_api","detail":"behaviour"},"sortText":"00000581","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_srp_primes","insertText":"ssl_srp_primes","insertTextFormat":2,"kind":9,"label":":ssl_srp_primes","labelDetails":{"description":":ssl_srp_primes"},"sortText":"00000582","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_sup","insertText":"ssl_sup","insertTextFormat":2,"kind":9,"label":":ssl_sup","labelDetails":{"description":":ssl_sup"},"sortText":"00000583","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_trace","insertText":"ssl_trace","insertTextFormat":2,"kind":9,"label":":ssl_trace","labelDetails":{"description":":ssl_trace"},"sortText":"00000584","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_upgrade_server_session_cache_sup","insertText":"ssl_upgrade_server_session_cache_sup","insertTextFormat":2,"kind":9,"label":":ssl_upgrade_server_session_cache_sup","labelDetails":{"description":":ssl_upgrade_server_session_cache_sup"},"sortText":"00000585","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_verify_fingerprint","insertText":"ssl_verify_fingerprint","insertTextFormat":2,"kind":9,"label":":ssl_verify_fingerprint","labelDetails":{"description":":ssl_verify_fingerprint"},"sortText":"00000586","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_verify_fun_cert_helpers","insertText":"ssl_verify_fun_cert_helpers","insertTextFormat":2,"kind":9,"label":":ssl_verify_fun_cert_helpers","labelDetails":{"description":":ssl_verify_fun_cert_helpers"},"sortText":"00000587","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_verify_fun_encodings","insertText":"ssl_verify_fun_encodings","insertTextFormat":2,"kind":9,"label":":ssl_verify_fun_encodings","labelDetails":{"description":":ssl_verify_fun_encodings"},"sortText":"00000588","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_verify_hostname","insertText":"ssl_verify_hostname","insertTextFormat":2,"kind":9,"label":":ssl_verify_hostname","labelDetails":{"description":":ssl_verify_hostname"},"sortText":"00000589","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_verify_pk","insertText":"ssl_verify_pk","insertTextFormat":2,"kind":9,"label":":ssl_verify_pk","labelDetails":{"description":":ssl_verify_pk"},"sortText":"00000590","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_verify_string","insertText":"ssl_verify_string","insertTextFormat":2,"kind":9,"label":":ssl_verify_string","labelDetails":{"description":":ssl_verify_string"},"sortText":"00000591","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":ssl_verify_util","insertText":"ssl_verify_util","insertTextFormat":2,"kind":9,"label":":ssl_verify_util","labelDetails":{"description":":ssl_verify_util"},"sortText":"00000592","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":standard_error","insertText":"standard_error","insertTextFormat":2,"kind":9,"label":":standard_error","labelDetails":{"description":":standard_error"},"sortText":"00000593","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":string","insertText":"string","insertTextFormat":2,"kind":9,"label":":string","labelDetails":{"description":":string"},"sortText":"00000594","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":string_compat","insertText":"string_compat","insertTextFormat":2,"kind":9,"label":":string_compat","labelDetails":{"description":":string_compat"},"sortText":"00000595","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":supervisor","insertText":"supervisor","insertTextFormat":2,"kind":8,"label":":supervisor","labelDetails":{"description":":supervisor","detail":"behaviour"},"sortText":"00000596","tags":[]},{"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":""},"filterText":":supervisor_bridge","insertText":"supervisor_bridge","insertTextFormat":2,"kind":8,"label":":supervisor_bridge","labelDetails":{"description":":supervisor_bridge","detail":"behaviour"},"sortText":"00000597","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sys","insertText":"sys","insertTextFormat":2,"kind":9,"label":":sys","labelDetails":{"description":":sys"},"sortText":"00000598","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sys_core_alias","insertText":"sys_core_alias","insertTextFormat":2,"kind":9,"label":":sys_core_alias","labelDetails":{"description":":sys_core_alias"},"sortText":"00000599","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sys_core_bsm","insertText":"sys_core_bsm","insertTextFormat":2,"kind":9,"label":":sys_core_bsm","labelDetails":{"description":":sys_core_bsm"},"sortText":"00000600","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sys_core_fold","insertText":"sys_core_fold","insertTextFormat":2,"kind":9,"label":":sys_core_fold","labelDetails":{"description":":sys_core_fold"},"sortText":"00000601","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sys_core_fold_lists","insertText":"sys_core_fold_lists","insertTextFormat":2,"kind":9,"label":":sys_core_fold_lists","labelDetails":{"description":":sys_core_fold_lists"},"sortText":"00000602","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sys_core_inline","insertText":"sys_core_inline","insertTextFormat":2,"kind":9,"label":":sys_core_inline","labelDetails":{"description":":sys_core_inline"},"sortText":"00000603","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sys_core_prepare","insertText":"sys_core_prepare","insertTextFormat":2,"kind":9,"label":":sys_core_prepare","labelDetails":{"description":":sys_core_prepare"},"sortText":"00000604","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sys_messages","insertText":"sys_messages","insertTextFormat":2,"kind":9,"label":":sys_messages","labelDetails":{"description":":sys_messages"},"sortText":"00000605","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":sys_pre_attributes","insertText":"sys_pre_attributes","insertTextFormat":2,"kind":9,"label":":sys_pre_attributes","labelDetails":{"description":":sys_pre_attributes"},"sortText":"00000606","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":timer","insertText":"timer","insertTextFormat":2,"kind":9,"label":":timer","labelDetails":{"description":":timer"},"sortText":"00000607","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_bloom_filter","insertText":"tls_bloom_filter","insertTextFormat":2,"kind":9,"label":":tls_bloom_filter","labelDetails":{"description":":tls_bloom_filter"},"sortText":"00000608","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_client_connection_1_3","insertText":"tls_client_connection_1_3","insertTextFormat":2,"kind":9,"label":":tls_client_connection_1_3","labelDetails":{"description":":tls_client_connection_1_3"},"sortText":"00000609","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_client_ticket_store","insertText":"tls_client_ticket_store","insertTextFormat":2,"kind":9,"label":":tls_client_ticket_store","labelDetails":{"description":":tls_client_ticket_store"},"sortText":"00000610","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_connection","insertText":"tls_connection","insertTextFormat":2,"kind":9,"label":":tls_connection","labelDetails":{"description":":tls_connection"},"sortText":"00000611","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_connection_sup","insertText":"tls_connection_sup","insertTextFormat":2,"kind":9,"label":":tls_connection_sup","labelDetails":{"description":":tls_connection_sup"},"sortText":"00000612","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_dist_server_sup","insertText":"tls_dist_server_sup","insertTextFormat":2,"kind":9,"label":":tls_dist_server_sup","labelDetails":{"description":":tls_dist_server_sup"},"sortText":"00000613","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_dist_sup","insertText":"tls_dist_sup","insertTextFormat":2,"kind":9,"label":":tls_dist_sup","labelDetails":{"description":":tls_dist_sup"},"sortText":"00000614","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_dtls_connection","insertText":"tls_dtls_connection","insertTextFormat":2,"kind":9,"label":":tls_dtls_connection","labelDetails":{"description":":tls_dtls_connection"},"sortText":"00000615","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_dyn_connection_sup","insertText":"tls_dyn_connection_sup","insertTextFormat":2,"kind":9,"label":":tls_dyn_connection_sup","labelDetails":{"description":":tls_dyn_connection_sup"},"sortText":"00000616","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_gen_connection","insertText":"tls_gen_connection","insertTextFormat":2,"kind":9,"label":":tls_gen_connection","labelDetails":{"description":":tls_gen_connection"},"sortText":"00000617","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_gen_connection_1_3","insertText":"tls_gen_connection_1_3","insertTextFormat":2,"kind":9,"label":":tls_gen_connection_1_3","labelDetails":{"description":":tls_gen_connection_1_3"},"sortText":"00000618","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_handshake","insertText":"tls_handshake","insertTextFormat":2,"kind":9,"label":":tls_handshake","labelDetails":{"description":":tls_handshake"},"sortText":"00000619","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_handshake_1_3","insertText":"tls_handshake_1_3","insertTextFormat":2,"kind":9,"label":":tls_handshake_1_3","labelDetails":{"description":":tls_handshake_1_3"},"sortText":"00000620","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_record","insertText":"tls_record","insertTextFormat":2,"kind":9,"label":":tls_record","labelDetails":{"description":":tls_record"},"sortText":"00000621","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_record_1_3","insertText":"tls_record_1_3","insertTextFormat":2,"kind":9,"label":":tls_record_1_3","labelDetails":{"description":":tls_record_1_3"},"sortText":"00000622","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_sender","insertText":"tls_sender","insertTextFormat":2,"kind":9,"label":":tls_sender","labelDetails":{"description":":tls_sender"},"sortText":"00000623","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_server_connection_1_3","insertText":"tls_server_connection_1_3","insertTextFormat":2,"kind":9,"label":":tls_server_connection_1_3","labelDetails":{"description":":tls_server_connection_1_3"},"sortText":"00000624","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_server_session_ticket","insertText":"tls_server_session_ticket","insertTextFormat":2,"kind":9,"label":":tls_server_session_ticket","labelDetails":{"description":":tls_server_session_ticket"},"sortText":"00000625","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_server_session_ticket_sup","insertText":"tls_server_session_ticket_sup","insertTextFormat":2,"kind":9,"label":":tls_server_session_ticket_sup","labelDetails":{"description":":tls_server_session_ticket_sup"},"sortText":"00000626","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_server_sup","insertText":"tls_server_sup","insertTextFormat":2,"kind":9,"label":":tls_server_sup","labelDetails":{"description":":tls_server_sup"},"sortText":"00000627","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_socket","insertText":"tls_socket","insertTextFormat":2,"kind":9,"label":":tls_socket","labelDetails":{"description":":tls_socket"},"sortText":"00000628","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_sup","insertText":"tls_sup","insertTextFormat":2,"kind":9,"label":":tls_sup","labelDetails":{"description":":tls_sup"},"sortText":"00000629","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":tls_v1","insertText":"tls_v1","insertTextFormat":2,"kind":9,"label":":tls_v1","labelDetails":{"description":":tls_v1"},"sortText":"00000630","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":typer","insertText":"typer","insertTextFormat":2,"kind":9,"label":":typer","labelDetails":{"description":":typer"},"sortText":"00000631","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":typer_core","insertText":"typer_core","insertTextFormat":2,"kind":9,"label":":typer_core","labelDetails":{"description":":typer_core"},"sortText":"00000632","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":unicode","insertText":"unicode","insertTextFormat":2,"kind":9,"label":":unicode","labelDetails":{"description":":unicode"},"sortText":"00000633","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":unicode_util","insertText":"unicode_util","insertTextFormat":2,"kind":9,"label":":unicode_util","labelDetails":{"description":":unicode_util"},"sortText":"00000634","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":unicode_util_compat","insertText":"unicode_util_compat","insertTextFormat":2,"kind":9,"label":":unicode_util_compat","labelDetails":{"description":":unicode_util_compat"},"sortText":"00000635","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":uri_string","insertText":"uri_string","insertTextFormat":2,"kind":9,"label":":uri_string","labelDetails":{"description":":uri_string"},"sortText":"00000636","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":user_drv","insertText":"user_drv","insertTextFormat":2,"kind":9,"label":":user_drv","labelDetails":{"description":":user_drv"},"sortText":"00000637","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":user_sup","insertText":"user_sup","insertTextFormat":2,"kind":9,"label":":user_sup","labelDetails":{"description":":user_sup"},"sortText":"00000638","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":v3_core","insertText":"v3_core","insertTextFormat":2,"kind":9,"label":":v3_core","labelDetails":{"description":":v3_core"},"sortText":"00000639","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":v3_kernel","insertText":"v3_kernel","insertTextFormat":2,"kind":9,"label":":v3_kernel","labelDetails":{"description":":v3_kernel"},"sortText":"00000640","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":v3_kernel_pp","insertText":"v3_kernel_pp","insertTextFormat":2,"kind":9,"label":":v3_kernel_pp","labelDetails":{"description":":v3_kernel_pp"},"sortText":"00000641","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":win32reg","insertText":"win32reg","insertTextFormat":2,"kind":9,"label":":win32reg","labelDetails":{"description":":win32reg"},"sortText":"00000642","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":wrap_log_reader","insertText":"wrap_log_reader","insertTextFormat":2,"kind":9,"label":":wrap_log_reader","labelDetails":{"description":":wrap_log_reader"},"sortText":"00000643","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":zip","insertText":"zip","insertTextFormat":2,"kind":9,"label":":zip","labelDetails":{"description":":zip"},"sortText":"00000644","tags":[]},{"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":""},"filterText":":zlib","insertText":"zlib","insertTextFormat":2,"kind":9,"label":":zlib","labelDetails":{"description":":zlib"},"sortText":"00000645","tags":[]},{"deprecated":false,"detail":"return value","documentation":{"kind":"markdown","value":"GenServer.on_start()"},"insertText":"${1:GenServer.on_start()}","insertTextFormat":2,"kind":12,"label":"GenServer.on_start()","sortText":"00000646","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"\n```elixir\n@spec check_token(\n        Airthings.t()\n      ) :: Airthings.t()\n```\n"},"insertText":"check_token($1)$0","insertTextFormat":2,"kind":3,"label":"check_token","labelDetails":{"description":"Airthings.check_token/1","detail":"(state)"},"sortText":"00000647","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":""},"insertText":"child_spec($1)$0","insertTextFormat":2,"kind":3,"label":"child_spec","labelDetails":{"description":"Airthings.child_spec/1","detail":"(init_arg)"},"sortText":"00000648","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Invoked to change the state of the `GenServer` when a different version of a\nmodule is loaded (hot code swapping) and the state's term structure should be\nchanged.\n```elixir\n@callback code_change(\n            old_vsn,\n            state :: term(),\n            extra :: term()\n          ) ::\n            {:ok,\n             new_state ::\n               term()}\n            | {:error,\n               reason ::\n                 term()}\n          when old_vsn:\n                 term()\n                 | {:down,\n                    term()}\n```\n"},"insertText":"code_change($1)$0","insertTextFormat":2,"kind":3,"label":"code_change","labelDetails":{"description":"Airthings.code_change/3","detail":"(_old, state, _extra)"},"sortText":"00000649","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"\n```elixir\n@spec get_devices(pid) ::\n        {:ok, [Device.t()]}\n        | {:error, any}\n        | any\n```\n"},"insertText":"get_devices($1)$0","insertTextFormat":2,"kind":3,"label":"get_devices","labelDetails":{"description":"Airthings.get_devices/1","detail":"(pid)"},"sortText":"00000650","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Invoked to handle synchronous `call/3` messages. `call/3` will block until a\nreply is received (unless the call times out or nodes are disconnected).\n```elixir\n@callback handle_call(\n            request :: term(),\n            from(),\n            state :: term()\n          ) ::\n            {:reply, reply,\n             new_state}\n            | {:reply, reply,\n               new_state,\n               timeout()\n               | :hibernate\n               | {:continue,\n                  continue_arg ::\n                    term()}}\n            | {:noreply,\n               new_state}\n            | {:noreply,\n               new_state,\n               timeout()\n               | :hibernate\n               | {:continue,\n                  continue_arg ::\n                    term()}}\n            | {:stop, reason,\n               reply,\n               new_state}\n            | {:stop, reason,\n               new_state}\n          when reply: term(),\n               new_state:\n                 term(),\n               reason: term()\n```\n"},"insertText":"handle_call($1)$0","insertTextFormat":2,"kind":3,"label":"handle_call","labelDetails":{"description":"Airthings.handle_call/3","detail":"(msg, _from, state)"},"sortText":"00000651","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Invoked to handle asynchronous `cast/2` messages.\n```elixir\n@callback handle_cast(\n            request :: term(),\n            state :: term()\n          ) ::\n            {:noreply,\n             new_state}\n            | {:noreply,\n               new_state,\n               timeout()\n               | :hibernate\n               | {:continue,\n                  continue_arg ::\n                    term()}}\n            | {:stop,\n               reason ::\n                 term(),\n               new_state}\n          when new_state:\n                 term()\n```\n"},"insertText":"handle_cast($1)$0","insertTextFormat":2,"kind":3,"label":"handle_cast","labelDetails":{"description":"Airthings.handle_cast/2","detail":"(msg, state)"},"sortText":"00000652","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Invoked to handle all other messages.\n```elixir\n@callback handle_info(\n            msg ::\n              :timeout\n              | term(),\n            state :: term()\n          ) ::\n            {:noreply,\n             new_state}\n            | {:noreply,\n               new_state,\n               timeout()\n               | :hibernate\n               | {:continue,\n                  continue_arg ::\n                    term()}}\n            | {:stop,\n               reason ::\n                 term(),\n               new_state}\n          when new_state:\n                 term()\n```\n"},"insertText":"handle_info($1)$0","insertTextFormat":2,"kind":3,"label":"handle_info","labelDetails":{"description":"Airthings.handle_info/2","detail":"(msg, state)"},"sortText":"00000653","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Invoked when the server is started. `start_link/3` or `start/3` will\nblock until it returns.\n```elixir\n@callback init(\n            init_arg :: term()\n          ) ::\n            {:ok, state}\n            | {:ok, state,\n               timeout()\n               | :hibernate\n               | {:continue,\n                  continue_arg ::\n                    term()}}\n            | :ignore\n            | {:stop,\n               reason :: any()}\n          when state: any()\n```\n"},"insertText":"init($1)$0","insertTextFormat":2,"kind":3,"label":"init","labelDetails":{"description":"Airthings.init/1","detail":"([client_id, client_secret])"},"sortText":"00000654","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"\n```elixir\n@spec refresh_token(\n        Airthings.t()\n      ) :: Airthings.t()\n```\n"},"insertText":"refresh_token($1)$0","insertTextFormat":2,"kind":3,"label":"refresh_token","labelDetails":{"description":"Airthings.refresh_token/1","detail":"(state)"},"sortText":"00000655","tags":[]},{"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":""},"insertText":"schedule_token_check()","insertTextFormat":2,"kind":3,"label":"schedule_token_check","labelDetails":{"description":"Airthings.schedule_token_check/0","detail":"()"},"sortText":"00000656","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":""},"insertText":"should_retry?($1)$0","insertTextFormat":2,"kind":3,"label":"should_retry?","labelDetails":{"description":"Airthings.should_retry?/1","detail":"({:error, %{status: 401}})"},"sortText":"00000657","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"\n```elixir\n@spec start_link(\n        String.t(),\n        String.t()\n      ) ::\n        GenServer.on_start()\n```\n"},"insertText":"start_link($1)$0","insertTextFormat":2,"kind":3,"label":"start_link","labelDetails":{"description":"Airthings.start_link/2","detail":"(client_id, client_secret)"},"sortText":"00000658","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Invoked when the server is about to exit. It should do any cleanup required.\n```elixir\n@callback terminate(\n            reason,\n            state :: term()\n          ) :: term()\n          when reason:\n                 :normal\n                 | :shutdown\n                 | {:shutdown,\n                    term()}\n                 | term()\n```\n"},"insertText":"terminate($1)$0","insertTextFormat":2,"kind":3,"label":"terminate","labelDetails":{"description":"Airthings.terminate/2","detail":"(_reason, _state)"},"sortText":"00000659","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Built-in function\n```elixir\n@spec __struct__() :: %{\n        required(:__struct__) =>\n          module,\n        optional(any) => any\n      }\n```\n"},"insertText":"__struct__($1)$0","insertTextFormat":2,"kind":3,"label":"__struct__","labelDetails":{"description":"Airthings.__struct__/0","detail":"()"},"sortText":"00000660","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Built-in function\n```elixir\n@spec __struct__(keyword) ::\n        %{\n          required(\n            :__struct__\n          ) => module,\n          optional(any) => any\n        }\n```\n"},"insertText":"__struct__","insertTextFormat":2,"kind":3,"label":"__struct__","labelDetails":{"description":"Airthings.__struct__/1","detail":"(kv)"},"sortText":"00000661","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"ArgumentError","insertText":"ArgumentError","insertTextFormat":2,"kind":22,"label":"ArgumentError","labelDetails":{"description":"ArgumentError","detail":"exception"},"sortText":"00000662","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"ArithmeticError","insertText":"ArithmeticError","insertTextFormat":2,"kind":22,"label":"ArithmeticError","labelDetails":{"description":"ArithmeticError","detail":"exception"},"sortText":"00000663","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"BadArityError","insertText":"BadArityError","insertTextFormat":2,"kind":22,"label":"BadArityError","labelDetails":{"description":"BadArityError","detail":"exception"},"sortText":"00000664","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"BadBooleanError","insertText":"BadBooleanError","insertTextFormat":2,"kind":22,"label":"BadBooleanError","labelDetails":{"description":"BadBooleanError","detail":"exception"},"sortText":"00000665","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"BadFunctionError","insertText":"BadFunctionError","insertTextFormat":2,"kind":22,"label":"BadFunctionError","labelDetails":{"description":"BadFunctionError","detail":"exception"},"sortText":"00000666","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"BadMapError","insertText":"BadMapError","insertTextFormat":2,"kind":22,"label":"BadMapError","labelDetails":{"description":"BadMapError","detail":"exception"},"sortText":"00000667","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"BadStructError","insertText":"BadStructError","insertTextFormat":2,"kind":22,"label":"BadStructError","labelDetails":{"description":"BadStructError","detail":"exception"},"sortText":"00000668","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"CaseClauseError","insertText":"CaseClauseError","insertTextFormat":2,"kind":22,"label":"CaseClauseError","labelDetails":{"description":"CaseClauseError","detail":"exception"},"sortText":"00000669","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"CompileError","insertText":"CompileError","insertTextFormat":2,"kind":22,"label":"CompileError","labelDetails":{"description":"CompileError","detail":"exception"},"sortText":"00000670","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"CondClauseError","insertText":"CondClauseError","insertTextFormat":2,"kind":22,"label":"CondClauseError","labelDetails":{"description":"CondClauseError","detail":"exception"},"sortText":"00000671","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"ErlangError","insertText":"ErlangError","insertTextFormat":2,"kind":22,"label":"ErlangError","labelDetails":{"description":"ErlangError","detail":"exception"},"sortText":"00000672","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"FunctionClauseError","insertText":"FunctionClauseError","insertTextFormat":2,"kind":22,"label":"FunctionClauseError","labelDetails":{"description":"FunctionClauseError","detail":"exception"},"sortText":"00000673","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"KeyError","insertText":"KeyError","insertTextFormat":2,"kind":22,"label":"KeyError","labelDetails":{"description":"KeyError","detail":"exception"},"sortText":"00000674","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"MatchError","insertText":"MatchError","insertTextFormat":2,"kind":22,"label":"MatchError","labelDetails":{"description":"MatchError","detail":"exception"},"sortText":"00000675","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"RuntimeError","insertText":"RuntimeError","insertTextFormat":2,"kind":22,"label":"RuntimeError","labelDetails":{"description":"RuntimeError","detail":"exception"},"sortText":"00000676","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"SyntaxError","insertText":"SyntaxError","insertTextFormat":2,"kind":22,"label":"SyntaxError","labelDetails":{"description":"SyntaxError","detail":"exception"},"sortText":"00000677","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"SystemLimitError","insertText":"SystemLimitError","insertTextFormat":2,"kind":22,"label":"SystemLimitError","labelDetails":{"description":"SystemLimitError","detail":"exception"},"sortText":"00000678","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"TokenMissingError","insertText":"TokenMissingError","insertTextFormat":2,"kind":22,"label":"TokenMissingError","labelDetails":{"description":"TokenMissingError","detail":"exception"},"sortText":"00000679","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"TryClauseError","insertText":"TryClauseError","insertTextFormat":2,"kind":22,"label":"TryClauseError","labelDetails":{"description":"TryClauseError","detail":"exception"},"sortText":"00000680","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"UndefinedFunctionError","insertText":"UndefinedFunctionError","insertTextFormat":2,"kind":22,"label":"UndefinedFunctionError","labelDetails":{"description":"UndefinedFunctionError","detail":"exception"},"sortText":"00000681","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"UnicodeConversionError","insertText":"UnicodeConversionError","insertTextFormat":2,"kind":22,"label":"UnicodeConversionError","labelDetails":{"description":"UnicodeConversionError","detail":"exception"},"sortText":"00000682","tags":[]},{"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":""},"filterText":"WithClauseError","insertText":"WithClauseError","insertTextFormat":2,"kind":22,"label":"WithClauseError","labelDetails":{"description":"WithClauseError","detail":"exception"},"sortText":"00000683","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns an integer or float which is the arithmetical absolute value of `number`.\n```elixir\n@spec abs(number()) ::\n        number()\n```\n"},"insertText":"abs($1)$0","insertTextFormat":2,"kind":14,"label":"abs","labelDetails":{"description":"Kernel.abs/1","detail":"(number)"},"sortText":"00000684","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"`alias/2` is used to set up aliases, often useful with modules' names."},"insertText":"alias","insertTextFormat":2,"kind":14,"label":"alias","labelDetails":{"description":"Kernel.SpecialForms.alias/2","detail":"(module, opts)"},"sortText":"00000685","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"When used inside quoting, marks that the given alias should not\nbe hygienized. This means the alias will be expanded when\nthe macro is expanded."},"insertText":"alias!($1)$0","insertTextFormat":2,"kind":14,"label":"alias!","labelDetails":{"description":"Kernel.alias!/1","detail":"(alias)"},"sortText":"00000686","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Strictly boolean \"and\" operator."},"insertText":"and","insertTextFormat":2,"kind":14,"label":"and","labelDetails":{"description":"Kernel.and/2","detail":"(left, right)"},"sortText":"00000687","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Invokes the given anonymous function `fun` with the list of\narguments `args`.\n```elixir\n@spec apply((... -> any()), [\n        any()\n      ]) :: any()\n```\n"},"insertText":"apply($1)$0","insertTextFormat":2,"kind":14,"label":"apply","labelDetails":{"description":"Kernel.apply/2","detail":"(fun, args)"},"sortText":"00000688","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Invokes the given function from `module` with the list of\narguments `args`.\n```elixir\n@spec apply(\n        module(),\n        function_name ::\n          atom(),\n        [any()]\n      ) :: any()\n```\n"},"insertText":"apply($1)$0","insertTextFormat":2,"kind":14,"label":"apply","labelDetails":{"description":"Kernel.apply/3","detail":"(module, function_name, args)"},"sortText":"00000689","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Extracts the part of the binary starting at `start` with length `length`.\nBinaries are zero-indexed.\n```elixir\n@spec binary_part(\n        binary(),\n        non_neg_integer(),\n        integer()\n      ) :: binary()\n```\n"},"insertText":"binary_part($1)$0","insertTextFormat":2,"kind":14,"label":"binary_part","labelDetails":{"description":"Kernel.binary_part/3","detail":"(binary, start, length)"},"sortText":"00000690","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns a binary from the offset given by the start of the\nrange to the offset given by the end of the range."},"insertText":"binary_slice($1)$0","insertTextFormat":2,"kind":14,"label":"binary_slice","labelDetails":{"description":"Kernel.binary_slice/2","detail":"(binary, range)"},"sortText":"00000691","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns a binary starting at the offset `start` and of the given `size`."},"insertText":"binary_slice($1)$0","insertTextFormat":2,"kind":14,"label":"binary_slice","labelDetails":{"description":"Kernel.binary_slice/3","detail":"(binary, start, size)"},"sortText":"00000692","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns the binding for the given context as a keyword list."},"insertText":"binding($1)$0","insertTextFormat":2,"kind":14,"label":"binding","labelDetails":{"description":"Kernel.binding/1","detail":"(context \\\\ nil)"},"sortText":"00000693","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns an integer which is the size in bits of `bitstring`.\n```elixir\n@spec bit_size(bitstring()) ::\n        non_neg_integer()\n```\n"},"insertText":"bit_size($1)$0","insertTextFormat":2,"kind":14,"label":"bit_size","labelDetails":{"description":"Kernel.bit_size/1","detail":"(bitstring)"},"sortText":"00000694","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the number of bytes needed to contain `bitstring`.\n```elixir\n@spec byte_size(bitstring()) ::\n        non_neg_integer()\n```\n"},"insertText":"byte_size($1)$0","insertTextFormat":2,"kind":14,"label":"byte_size","labelDetails":{"description":"Kernel.byte_size/1","detail":"(bitstring)"},"sortText":"00000695","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Matches the given expression against the given clauses."},"insertText":"case $1 do\n\t$2 ->\n\t\t$0\nend","insertTextFormat":2,"kind":15,"label":"case","labelDetails":{"description":"Kernel.SpecialForms.case/2","detail":"(condition, clauses)"},"sortText":"00000696","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the smallest integer greater than or equal to `number`.\n```elixir\n@spec ceil(number()) ::\n        integer()\n```\n"},"insertText":"ceil($1)$0","insertTextFormat":2,"kind":14,"label":"ceil","labelDetails":{"description":"Kernel.ceil/1","detail":"(number)"},"sortText":"00000697","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Evaluates the expression corresponding to the first clause that\nevaluates to a truthy value."},"insertText":"cond do\n\t$1 ->\n\t\t$0\nend","insertTextFormat":2,"kind":15,"label":"cond","labelDetails":{"description":"Kernel.SpecialForms.cond/1","detail":"(clauses)"},"sortText":"00000698","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Debugs the given `code`."},"insertText":"dbg($1)$0","insertTextFormat":2,"kind":14,"label":"dbg","labelDetails":{"description":"Kernel.dbg/2","detail":"(code \\\\ quote do\n  binding()\nend, options \\\\ [])"},"sortText":"00000699","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines a public function with the given name and body."},"insertText":"def $1 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"def","labelDetails":{"description":"Kernel.def/2","detail":"(call, expr \\\\ nil)"},"sortText":"00000700","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines a function that delegates to another module."},"insertText":"defdelegate $1, to: $0","insertTextFormat":2,"kind":15,"label":"defdelegate","labelDetails":{"description":"Kernel.defdelegate/2","detail":"(funs, opts)"},"sortText":"00000701","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines an exception."},"insertText":"defexception [${1::message}]","insertTextFormat":2,"kind":15,"label":"defexception","labelDetails":{"description":"Kernel.defexception/1","detail":"(fields)"},"sortText":"00000702","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Generates a macro suitable for use in guard expressions.\n```elixir\n@spec defguard(Macro.t()) ::\n        Macro.t()\n```\n"},"insertText":"defguard ${1:guard_name}($2) when $3","insertTextFormat":2,"kind":15,"label":"defguard","labelDetails":{"description":"Kernel.defguard/1","detail":"(guard)"},"sortText":"00000703","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Generates a private macro suitable for use in guard expressions.\n```elixir\n@spec defguardp(Macro.t()) ::\n        Macro.t()\n```\n"},"insertText":"defguardp ${1:guard_name}($2) when $3","insertTextFormat":2,"kind":15,"label":"defguardp","labelDetails":{"description":"Kernel.defguardp/1","detail":"(guard)"},"sortText":"00000704","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines an implementation for the given protocol."},"insertText":"defimpl $1, for: $2 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"defimpl","labelDetails":{"description":"Kernel.defimpl/3","detail":"(name, opts, do_block \\\\ [])"},"sortText":"00000705","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines a public macro with the given name and body."},"insertText":"defmacro $1 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"defmacro","labelDetails":{"description":"Kernel.defmacro/2","detail":"(call, expr \\\\ nil)"},"sortText":"00000706","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines a private macro with the given name and body."},"insertText":"defmacrop $1 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"defmacrop","labelDetails":{"description":"Kernel.defmacrop/2","detail":"(call, expr \\\\ nil)"},"sortText":"00000707","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines a module given by name with the given contents."},"insertText":"defmodule Airthings$1 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"defmodule","labelDetails":{"description":"Kernel.defmodule/2","detail":"(alias, do_block)"},"sortText":"00000708","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Makes the given definitions in the current module overridable."},"insertText":"defoverridable($1)$0","insertTextFormat":2,"kind":14,"label":"defoverridable","labelDetails":{"description":"Kernel.defoverridable/1","detail":"(keywords_or_behaviour)"},"sortText":"00000709","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines a private function with the given name and body."},"insertText":"defp $1 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"defp","labelDetails":{"description":"Kernel.defp/2","detail":"(call, expr \\\\ nil)"},"sortText":"00000710","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines a protocol."},"insertText":"defprotocol Airthings$1 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"defprotocol","labelDetails":{"description":"Kernel.defprotocol/2","detail":"(name, do_block)"},"sortText":"00000711","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines a struct."},"insertText":"defstruct $1: $2","insertTextFormat":2,"kind":15,"label":"defstruct","labelDetails":{"description":"Kernel.defstruct/1","detail":"(fields)"},"sortText":"00000712","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Destructures two lists, assigning each term in the\nright one to the matching term in the left one."},"insertText":"destructure($1)$0","insertTextFormat":2,"kind":14,"label":"destructure","labelDetails":{"description":"Kernel.destructure/2","detail":"(left, right)"},"sortText":"00000713","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Performs an integer division.\n```elixir\n@spec div(\n        integer(),\n        neg_integer()\n        | pos_integer()\n      ) :: integer()\n```\n"},"insertText":"div($1)$0","insertTextFormat":2,"kind":14,"label":"div","labelDetails":{"description":"Kernel.div/2","detail":"(dividend, divisor)"},"sortText":"00000714","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Gets the element at the zero-based `index` in `tuple`.\n```elixir\n@spec elem(\n        tuple(),\n        non_neg_integer()\n      ) :: term()\n```\n"},"insertText":"elem($1)$0","insertTextFormat":2,"kind":14,"label":"elem","labelDetails":{"description":"Kernel.elem/2","detail":"(tuple, index)"},"sortText":"00000715","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Stops the execution of the calling process with the given reason.\n```elixir\n@spec exit(term()) ::\n        no_return()\n```\n"},"insertText":"exit($1)$0","insertTextFormat":2,"kind":14,"label":"exit","labelDetails":{"description":"Kernel.exit/1","detail":"(reason)"},"sortText":"00000716","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the largest integer smaller than or equal to `number`.\n```elixir\n@spec floor(number()) ::\n        integer()\n```\n"},"insertText":"floor($1)$0","insertTextFormat":2,"kind":14,"label":"floor","labelDetails":{"description":"Kernel.floor/1","detail":"(number)"},"sortText":"00000717","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines an anonymous function."},"insertText":"fn $1 -> $0 end","insertTextFormat":2,"kind":15,"label":"fn","labelDetails":{"description":"Kernel.SpecialForms.fn/1","detail":"(term)"},"sortText":"00000718","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Comprehensions allow you to quickly build a data structure from\nan enumerable or a bitstring."},"insertText":"for $1 <- $2 do\n\t$3\nend","insertTextFormat":2,"kind":15,"label":"for","labelDetails":{"description":"Kernel.SpecialForms.for/1","detail":"(args)"},"sortText":"00000719","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `module` is loaded and contains a\npublic `function` with the given `arity`, otherwise `false`.\n```elixir\n@spec function_exported?(\n        module(),\n        atom(),\n        arity()\n      ) :: boolean()\n```\n"},"insertText":"function_exported?($1)$0","insertTextFormat":2,"kind":14,"label":"function_exported?","labelDetails":{"description":"Kernel.function_exported?/3","detail":"(module, function, arity)"},"sortText":"00000720","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Gets a value and updates a nested data structure via the given `path`."},"insertText":"get_and_update_in($1)$0","insertTextFormat":2,"kind":14,"label":"get_and_update_in","labelDetails":{"description":"Kernel.get_and_update_in/2","detail":"(path, fun)"},"sortText":"00000721","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Gets a value and updates a nested structure.\n```elixir\n@spec get_and_update_in(\n        structure,\n        keys,\n        (term() | nil ->\n           {current_value,\n            new_value}\n           | :pop)\n      ) ::\n        {current_value,\n         new_structure ::\n           structure}\n      when structure:\n             Access.t(),\n           keys: [any(), ...],\n           current_value:\n             Access.value(),\n           new_value:\n             Access.value()\n```\n"},"insertText":"get_and_update_in($1)$0","insertTextFormat":2,"kind":14,"label":"get_and_update_in","labelDetails":{"description":"Kernel.get_and_update_in/3","detail":"(data, keys, fun)"},"sortText":"00000722","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Gets a value from a nested structure.\n```elixir\n@spec get_in(Access.t(), [\n        term(),\n        ...\n      ]) :: term()\n```\n"},"insertText":"get_in($1)$0","insertTextFormat":2,"kind":14,"label":"get_in","labelDetails":{"description":"Kernel.get_in/2","detail":"(data, keys)"},"sortText":"00000723","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the head of a list. Raises `ArgumentError` if the list is empty.\n```elixir\n@spec hd(\n        nonempty_maybe_improper_list(\n          elem,\n          any()\n        )\n      ) :: elem\n      when elem: term()\n```\n"},"insertText":"hd($1)$0","insertTextFormat":2,"kind":14,"label":"hd","labelDetails":{"description":"Kernel.hd/1","detail":"(list)"},"sortText":"00000724","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Provides an `if/2` macro."},"insertText":"if $1 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"if","labelDetails":{"description":"Kernel.if/2","detail":"(condition, clauses)"},"sortText":"00000725","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Imports functions and macros from other modules."},"insertText":"import","insertTextFormat":2,"kind":14,"label":"import","labelDetails":{"description":"Kernel.SpecialForms.import/2","detail":"(module, opts)"},"sortText":"00000726","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Membership operator."},"insertText":"in","insertTextFormat":2,"kind":14,"label":"in","labelDetails":{"description":"Kernel.in/2","detail":"(left, right)"},"sortText":"00000727","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Inspects the given argument according to the `Inspect` protocol.\nThe second argument is a keyword list with options to control\ninspection.\n```elixir\n@spec inspect(\n        Inspect.t(),\n        keyword()\n      ) :: String.t()\n```\n"},"insertText":"inspect($1)$0","insertTextFormat":2,"kind":14,"label":"inspect","labelDetails":{"description":"Kernel.inspect/2","detail":"(term, opts \\\\ [])"},"sortText":"00000728","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is an atom; otherwise returns `false`.\n```elixir\n@spec is_atom(term()) ::\n        boolean()\n```\n"},"insertText":"is_atom($1)$0","insertTextFormat":2,"kind":14,"label":"is_atom","labelDetails":{"description":"Kernel.is_atom/1","detail":"(term)"},"sortText":"00000729","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a binary; otherwise returns `false`.\n```elixir\n@spec is_binary(term()) ::\n        boolean()\n```\n"},"insertText":"is_binary($1)$0","insertTextFormat":2,"kind":14,"label":"is_binary","labelDetails":{"description":"Kernel.is_binary/1","detail":"(term)"},"sortText":"00000730","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a bitstring (including a binary); otherwise returns `false`.\n```elixir\n@spec is_bitstring(term()) ::\n        boolean()\n```\n"},"insertText":"is_bitstring($1)$0","insertTextFormat":2,"kind":14,"label":"is_bitstring","labelDetails":{"description":"Kernel.is_bitstring/1","detail":"(term)"},"sortText":"00000731","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is either the atom `true` or the atom `false` (i.e.,\na boolean); otherwise returns `false`.\n```elixir\n@spec is_boolean(term()) ::\n        boolean()\n```\n"},"insertText":"is_boolean($1)$0","insertTextFormat":2,"kind":14,"label":"is_boolean","labelDetails":{"description":"Kernel.is_boolean/1","detail":"(term)"},"sortText":"00000732","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns true if `term` is an exception; otherwise returns `false`."},"insertText":"is_exception($1)$0","insertTextFormat":2,"kind":14,"label":"is_exception","labelDetails":{"description":"Kernel.is_exception/1","detail":"(term)"},"sortText":"00000733","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns true if `term` is an exception of `name`; otherwise returns `false`."},"insertText":"is_exception($1)$0","insertTextFormat":2,"kind":14,"label":"is_exception","labelDetails":{"description":"Kernel.is_exception/2","detail":"(term, name)"},"sortText":"00000734","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a floating-point number; otherwise returns `false`.\n```elixir\n@spec is_float(term()) ::\n        boolean()\n```\n"},"insertText":"is_float($1)$0","insertTextFormat":2,"kind":14,"label":"is_float","labelDetails":{"description":"Kernel.is_float/1","detail":"(term)"},"sortText":"00000735","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a function; otherwise returns `false`.\n```elixir\n@spec is_function(term()) ::\n        boolean()\n```\n"},"insertText":"is_function($1)$0","insertTextFormat":2,"kind":14,"label":"is_function","labelDetails":{"description":"Kernel.is_function/1","detail":"(term)"},"sortText":"00000736","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a function that can be applied with `arity` number of arguments;\notherwise returns `false`.\n```elixir\n@spec is_function(\n        term(),\n        non_neg_integer()\n      ) :: boolean()\n```\n"},"insertText":"is_function($1)$0","insertTextFormat":2,"kind":14,"label":"is_function","labelDetails":{"description":"Kernel.is_function/2","detail":"(term, arity)"},"sortText":"00000737","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is an integer; otherwise returns `false`.\n```elixir\n@spec is_integer(term()) ::\n        boolean()\n```\n"},"insertText":"is_integer($1)$0","insertTextFormat":2,"kind":14,"label":"is_integer","labelDetails":{"description":"Kernel.is_integer/1","detail":"(term)"},"sortText":"00000738","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a list with zero or more elements; otherwise returns `false`.\n```elixir\n@spec is_list(term()) ::\n        boolean()\n```\n"},"insertText":"is_list($1)$0","insertTextFormat":2,"kind":14,"label":"is_list","labelDetails":{"description":"Kernel.is_list/1","detail":"(term)"},"sortText":"00000739","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a map; otherwise returns `false`.\n```elixir\n@spec is_map(term()) ::\n        boolean()\n```\n"},"insertText":"is_map($1)$0","insertTextFormat":2,"kind":14,"label":"is_map","labelDetails":{"description":"Kernel.is_map/1","detail":"(term)"},"sortText":"00000740","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `key` is a key in `map`; otherwise returns `false`.\n```elixir\n@spec is_map_key(\n        map(),\n        term()\n      ) :: boolean()\n```\n"},"insertText":"is_map_key($1)$0","insertTextFormat":2,"kind":14,"label":"is_map_key","labelDetails":{"description":"Kernel.is_map_key/2","detail":"(map, key)"},"sortText":"00000741","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns `true` if `term` is `nil`, `false` otherwise."},"insertText":"is_nil($1)$0","insertTextFormat":2,"kind":14,"label":"is_nil","labelDetails":{"description":"Kernel.is_nil/1","detail":"(term)"},"sortText":"00000742","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is either an integer or a floating-point number;\notherwise returns `false`.\n```elixir\n@spec is_number(term()) ::\n        boolean()\n```\n"},"insertText":"is_number($1)$0","insertTextFormat":2,"kind":14,"label":"is_number","labelDetails":{"description":"Kernel.is_number/1","detail":"(term)"},"sortText":"00000743","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a PID (process identifier); otherwise returns `false`.\n```elixir\n@spec is_pid(term()) ::\n        boolean()\n```\n"},"insertText":"is_pid($1)$0","insertTextFormat":2,"kind":14,"label":"is_pid","labelDetails":{"description":"Kernel.is_pid/1","detail":"(term)"},"sortText":"00000744","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a port identifier; otherwise returns `false`.\n```elixir\n@spec is_port(term()) ::\n        boolean()\n```\n"},"insertText":"is_port($1)$0","insertTextFormat":2,"kind":14,"label":"is_port","labelDetails":{"description":"Kernel.is_port/1","detail":"(term)"},"sortText":"00000745","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a reference; otherwise returns `false`.\n```elixir\n@spec is_reference(term()) ::\n        boolean()\n```\n"},"insertText":"is_reference($1)$0","insertTextFormat":2,"kind":14,"label":"is_reference","labelDetails":{"description":"Kernel.is_reference/1","detail":"(term)"},"sortText":"00000746","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns true if `term` is a struct; otherwise returns `false`."},"insertText":"is_struct($1)$0","insertTextFormat":2,"kind":14,"label":"is_struct","labelDetails":{"description":"Kernel.is_struct/1","detail":"(term)"},"sortText":"00000747","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns true if `term` is a struct of `name`; otherwise returns `false`."},"insertText":"is_struct($1)$0","insertTextFormat":2,"kind":14,"label":"is_struct","labelDetails":{"description":"Kernel.is_struct/2","detail":"(term, name)"},"sortText":"00000748","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `term` is a tuple; otherwise returns `false`.\n```elixir\n@spec is_tuple(term()) ::\n        boolean()\n```\n"},"insertText":"is_tuple($1)$0","insertTextFormat":2,"kind":14,"label":"is_tuple","labelDetails":{"description":"Kernel.is_tuple/1","detail":"(term)"},"sortText":"00000749","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the length of `list`.\n```elixir\n@spec length(list()) ::\n        non_neg_integer()\n```\n"},"insertText":"length($1)$0","insertTextFormat":2,"kind":14,"label":"length","labelDetails":{"description":"Kernel.length/1","detail":"(list)"},"sortText":"00000750","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns `true` if `module` is loaded and contains a\npublic `macro` with the given `arity`, otherwise `false`.\n```elixir\n@spec macro_exported?(\n        module(),\n        atom(),\n        arity()\n      ) :: boolean()\n```\n"},"insertText":"macro_exported?($1)$0","insertTextFormat":2,"kind":14,"label":"macro_exported?","labelDetails":{"description":"Kernel.macro_exported?/3","detail":"(module, macro, arity)"},"sortText":"00000751","tags":[]},{"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns an almost unique reference.\n```elixir\n@spec make_ref() ::\n        reference()\n```\n"},"insertText":"make_ref()","insertTextFormat":2,"kind":14,"label":"make_ref","labelDetails":{"description":"Kernel.make_ref/0","detail":"()"},"sortText":"00000752","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the size of a map.\n```elixir\n@spec map_size(map()) ::\n        non_neg_integer()\n```\n"},"insertText":"map_size($1)$0","insertTextFormat":2,"kind":14,"label":"map_size","labelDetails":{"description":"Kernel.map_size/1","detail":"(map)"},"sortText":"00000753","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"A convenience macro that checks if the right side (an expression) matches the\nleft side (a pattern)."},"insertText":"match?($1)$0","insertTextFormat":2,"kind":14,"label":"match?","labelDetails":{"description":"Kernel.match?/2","detail":"(pattern, expr)"},"sortText":"00000754","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the biggest of the two given terms according to\ntheir structural comparison.\n```elixir\n@spec max(first, second) ::\n        first | second\n      when first: term(),\n           second: term()\n```\n"},"insertText":"max($1)$0","insertTextFormat":2,"kind":14,"label":"max","labelDetails":{"description":"Kernel.max/2","detail":"(first, second)"},"sortText":"00000755","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the smallest of the two given terms according to\ntheir structural comparison.\n```elixir\n@spec min(first, second) ::\n        first | second\n      when first: term(),\n           second: term()\n```\n"},"insertText":"min($1)$0","insertTextFormat":2,"kind":14,"label":"min","labelDetails":{"description":"Kernel.min/2","detail":"(first, second)"},"sortText":"00000756","tags":[]},{"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns an atom representing the name of the local node.\nIf the node is not alive, `:nonode@nohost` is returned instead.\n```elixir\n@spec node() :: node()\n```\n"},"insertText":"node()","insertTextFormat":2,"kind":14,"label":"node","labelDetails":{"description":"Kernel.node/0","detail":"()"},"sortText":"00000757","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the node where the given argument is located.\nThe argument can be a PID, a reference, or a port.\nIf the local node is not alive, `:nonode@nohost` is returned.\n```elixir\n@spec node(\n        pid()\n        | reference()\n        | port()\n      ) :: node()\n```\n"},"insertText":"node($1)$0","insertTextFormat":2,"kind":14,"label":"node","labelDetails":{"description":"Kernel.node/1","detail":"(arg)"},"sortText":"00000758","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Strictly boolean \"not\" operator.\n```elixir\n@spec not true :: false\n@spec not false :: true\n```\n"},"insertText":"not","insertTextFormat":2,"kind":14,"label":"not","labelDetails":{"description":"Kernel.not/1","detail":"(value)"},"sortText":"00000759","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Strictly boolean \"or\" operator."},"insertText":"or","insertTextFormat":2,"kind":14,"label":"or","labelDetails":{"description":"Kernel.or/2","detail":"(left, right)"},"sortText":"00000760","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Pops a key from the nested structure via the given `path`."},"insertText":"pop_in($1)$0","insertTextFormat":2,"kind":14,"label":"pop_in","labelDetails":{"description":"Kernel.pop_in/1","detail":"(path)"},"sortText":"00000761","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Pops a key from the given nested structure.\n```elixir\n@spec pop_in(data, [\n        Access.get_and_update_fun(\n          term(),\n          data\n        )\n        | term(),\n        ...\n      ]) :: {term(), data}\n      when data:\n             Access.container()\n```\n"},"insertText":"pop_in($1)$0","insertTextFormat":2,"kind":14,"label":"pop_in","labelDetails":{"description":"Kernel.pop_in/2","detail":"(data, keys)"},"sortText":"00000762","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Puts `value` at the given zero-based `index` in `tuple`.\n```elixir\n@spec put_elem(\n        tuple(),\n        non_neg_integer(),\n        term()\n      ) :: tuple()\n```\n"},"insertText":"put_elem($1)$0","insertTextFormat":2,"kind":14,"label":"put_elem","labelDetails":{"description":"Kernel.put_elem/3","detail":"(tuple, index, value)"},"sortText":"00000763","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Puts a value in a nested structure via the given `path`."},"insertText":"put_in($1)$0","insertTextFormat":2,"kind":14,"label":"put_in","labelDetails":{"description":"Kernel.put_in/2","detail":"(path, value)"},"sortText":"00000764","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Puts a value in a nested structure.\n```elixir\n@spec put_in(\n        Access.t(),\n        [term(), ...],\n        term()\n      ) :: Access.t()\n```\n"},"insertText":"put_in($1)$0","insertTextFormat":2,"kind":14,"label":"put_in","labelDetails":{"description":"Kernel.put_in/3","detail":"(data, keys, value)"},"sortText":"00000765","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Gets the representation of any expression."},"insertText":"quote do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"quote","labelDetails":{"description":"Kernel.SpecialForms.quote/2","detail":"(opts, block)"},"sortText":"00000766","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Raises an exception."},"insertText":"raise","insertTextFormat":2,"kind":14,"label":"raise","labelDetails":{"description":"Kernel.raise/1","detail":"(message)"},"sortText":"00000767","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Raises an exception."},"insertText":"raise","insertTextFormat":2,"kind":14,"label":"raise","labelDetails":{"description":"Kernel.raise/2","detail":"(exception, attributes)"},"sortText":"00000768","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Checks if there is a message matching the given clauses\nin the current process mailbox."},"insertText":"receive do\n\t${1:{${2::message_type}, ${3:value}\\}} ->\n\t\t${0:# code}\nend\n","insertTextFormat":2,"kind":15,"label":"receive","labelDetails":{"description":"Kernel.SpecialForms.receive/1","detail":"(args)"},"sortText":"00000769","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Computes the remainder of an integer division.\n```elixir\n@spec rem(\n        integer(),\n        neg_integer()\n        | pos_integer()\n      ) :: integer()\n```\n"},"insertText":"rem($1)$0","insertTextFormat":2,"kind":14,"label":"rem","labelDetails":{"description":"Kernel.rem/2","detail":"(dividend, divisor)"},"sortText":"00000770","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Requires a module in order to use its macros."},"insertText":"require","insertTextFormat":2,"kind":14,"label":"require","labelDetails":{"description":"Kernel.SpecialForms.require/2","detail":"(module, opts)"},"sortText":"00000771","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Raises an exception preserving a previous stacktrace."},"insertText":"reraise","insertTextFormat":2,"kind":14,"label":"reraise","labelDetails":{"description":"Kernel.reraise/2","detail":"(message, stacktrace)"},"sortText":"00000772","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Raises an exception preserving a previous stacktrace."},"insertText":"reraise","insertTextFormat":2,"kind":14,"label":"reraise","labelDetails":{"description":"Kernel.reraise/3","detail":"(exception, attributes, stacktrace)"},"sortText":"00000773","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Rounds a number to the nearest integer.\n```elixir\n@spec round(number()) ::\n        integer()\n```\n"},"insertText":"round($1)$0","insertTextFormat":2,"kind":14,"label":"round","labelDetails":{"description":"Kernel.round/1","detail":"(number)"},"sortText":"00000774","tags":[]},{"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the PID (process identifier) of the calling process.\n```elixir\n@spec self() :: pid()\n```\n"},"insertText":"self()","insertTextFormat":2,"kind":14,"label":"self","labelDetails":{"description":"Kernel.self/0","detail":"()"},"sortText":"00000775","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Sends a message to the given `dest` and returns the message.\n```elixir\n@spec send(\n        dest ::\n          Process.dest(),\n        message\n      ) :: message\n      when message: any()\n```\n"},"insertText":"send($1)$0","insertTextFormat":2,"kind":14,"label":"send","labelDetails":{"description":"Kernel.send/2","detail":"(dest, message)"},"sortText":"00000776","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~C` for charlists."},"insertText":"sigil_C($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_C","labelDetails":{"description":"Kernel.sigil_C/2","detail":"(term, modifiers)"},"sortText":"00000777","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~D` for dates."},"insertText":"sigil_D($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_D","labelDetails":{"description":"Kernel.sigil_D/2","detail":"(date_string, modifiers)"},"sortText":"00000778","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~N` for naive date times."},"insertText":"sigil_N($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_N","labelDetails":{"description":"Kernel.sigil_N/2","detail":"(naive_datetime_string, modifiers)"},"sortText":"00000779","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~R` for regular expressions."},"insertText":"sigil_R($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_R","labelDetails":{"description":"Kernel.sigil_R/2","detail":"(term, modifiers)"},"sortText":"00000780","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~S` for strings."},"insertText":"sigil_S($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_S","labelDetails":{"description":"Kernel.sigil_S/2","detail":"(term, modifiers)"},"sortText":"00000781","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~T` for times."},"insertText":"sigil_T($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_T","labelDetails":{"description":"Kernel.sigil_T/2","detail":"(time_string, modifiers)"},"sortText":"00000782","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~U` to create a UTC `DateTime`."},"insertText":"sigil_U($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_U","labelDetails":{"description":"Kernel.sigil_U/2","detail":"(datetime_string, modifiers)"},"sortText":"00000783","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~W` for list of words."},"insertText":"sigil_W($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_W","labelDetails":{"description":"Kernel.sigil_W/2","detail":"(term, modifiers)"},"sortText":"00000784","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~c` for charlists."},"insertText":"sigil_c($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_c","labelDetails":{"description":"Kernel.sigil_c/2","detail":"(term, modifiers)"},"sortText":"00000785","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~r` for regular expressions."},"insertText":"sigil_r($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_r","labelDetails":{"description":"Kernel.sigil_r/2","detail":"(term, modifiers)"},"sortText":"00000786","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~s` for strings."},"insertText":"sigil_s($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_s","labelDetails":{"description":"Kernel.sigil_s/2","detail":"(term, modifiers)"},"sortText":"00000787","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Handles the sigil `~w` for list of words."},"insertText":"sigil_w($1)$0","insertTextFormat":2,"kind":14,"label":"sigil_w","labelDetails":{"description":"Kernel.sigil_w/2","detail":"(term, modifiers)"},"sortText":"00000788","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Spawns the given function and returns its PID.\n```elixir\n@spec spawn((-> any())) ::\n        pid()\n```\n"},"insertText":"spawn($1)$0","insertTextFormat":2,"kind":14,"label":"spawn","labelDetails":{"description":"Kernel.spawn/1","detail":"(fun)"},"sortText":"00000789","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Spawns the given function `fun` from the given `module` passing it the given\n`args` and returns its PID.\n```elixir\n@spec spawn(\n        module(),\n        atom(),\n        list()\n      ) :: pid()\n```\n"},"insertText":"spawn($1)$0","insertTextFormat":2,"kind":14,"label":"spawn","labelDetails":{"description":"Kernel.spawn/3","detail":"(module, fun, args)"},"sortText":"00000790","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Spawns the given function, links it to the current process, and returns its PID.\n```elixir\n@spec spawn_link((-> any())) ::\n        pid()\n```\n"},"insertText":"spawn_link($1)$0","insertTextFormat":2,"kind":14,"label":"spawn_link","labelDetails":{"description":"Kernel.spawn_link/1","detail":"(fun)"},"sortText":"00000791","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Spawns the given function `fun` from the given `module` passing it the given\n`args`, links it to the current process, and returns its PID.\n```elixir\n@spec spawn_link(\n        module(),\n        atom(),\n        list()\n      ) :: pid()\n```\n"},"insertText":"spawn_link($1)$0","insertTextFormat":2,"kind":14,"label":"spawn_link","labelDetails":{"description":"Kernel.spawn_link/3","detail":"(module, fun, args)"},"sortText":"00000792","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Spawns the given function, monitors it and returns its PID\nand monitoring reference.\n```elixir\n@spec spawn_monitor(\n        (-> any())\n      ) ::\n        {pid(), reference()}\n```\n"},"insertText":"spawn_monitor($1)$0","insertTextFormat":2,"kind":14,"label":"spawn_monitor","labelDetails":{"description":"Kernel.spawn_monitor/1","detail":"(fun)"},"sortText":"00000793","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Spawns the given module and function passing the given args,\nmonitors it and returns its PID and monitoring reference.\n```elixir\n@spec spawn_monitor(\n        module(),\n        atom(),\n        list()\n      ) ::\n        {pid(), reference()}\n```\n"},"insertText":"spawn_monitor($1)$0","insertTextFormat":2,"kind":14,"label":"spawn_monitor","labelDetails":{"description":"Kernel.spawn_monitor/3","detail":"(module, fun, args)"},"sortText":"00000794","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Creates and updates a struct.\n```elixir\n@spec struct(\n        module() | struct(),\n        Enumerable.t()\n      ) :: struct()\n```\n"},"insertText":"struct($1)$0","insertTextFormat":2,"kind":14,"label":"struct","labelDetails":{"description":"Kernel.struct/2","detail":"(struct, fields \\\\ [])"},"sortText":"00000795","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Similar to `struct/2` but checks for key validity.\n```elixir\n@spec struct!(\n        module() | struct(),\n        Enumerable.t()\n      ) :: struct()\n```\n"},"insertText":"struct!($1)$0","insertTextFormat":2,"kind":14,"label":"struct!","labelDetails":{"description":"Kernel.struct!/2","detail":"(struct, fields \\\\ [])"},"sortText":"00000796","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Calls the overridden function when overriding it with `Kernel.defoverridable/1`."},"insertText":"super($1)","insertTextFormat":2,"kind":15,"label":"super","labelDetails":{"description":"Kernel.SpecialForms.super/1","detail":"(args)"},"sortText":"00000797","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Pipes the first argument, `value`, into the second argument, a function `fun`,\nand returns `value` itself."},"insertText":"tap($1)$0","insertTextFormat":2,"kind":14,"label":"tap","labelDetails":{"description":"Kernel.tap/2","detail":"(value, fun)"},"sortText":"00000798","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Pipes the first argument, `value`, into the second argument, a function `fun`,\nand returns the result of calling `fun`."},"insertText":"then($1)$0","insertTextFormat":2,"kind":14,"label":"then","labelDetails":{"description":"Kernel.then/2","detail":"(value, fun)"},"sortText":"00000799","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"A non-local return from a function.\n```elixir\n@spec throw(term()) ::\n        no_return()\n```\n"},"insertText":"throw($1)$0","insertTextFormat":2,"kind":14,"label":"throw","labelDetails":{"description":"Kernel.throw/1","detail":"(term)"},"sortText":"00000800","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the tail of a list. Raises `ArgumentError` if the list is empty.\n```elixir\n@spec tl(\n        nonempty_maybe_improper_list(\n          elem,\n          last\n        )\n      ) ::\n        maybe_improper_list(\n          elem,\n          last\n        )\n        | last\n      when elem: term(),\n           last: term()\n```\n"},"insertText":"tl($1)$0","insertTextFormat":2,"kind":14,"label":"tl","labelDetails":{"description":"Kernel.tl/1","detail":"(list)"},"sortText":"00000801","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":""},"insertText":"to_char_list($1)$0","insertTextFormat":2,"kind":14,"label":"to_char_list","labelDetails":{"description":"Kernel.to_char_list/1","detail":"(arg)"},"sortText":"00000802","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Converts the given term to a charlist according to the `List.Chars` protocol."},"insertText":"to_charlist($1)$0","insertTextFormat":2,"kind":14,"label":"to_charlist","labelDetails":{"description":"Kernel.to_charlist/1","detail":"(term)"},"sortText":"00000803","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Converts the argument to a string according to the\n`String.Chars` protocol."},"insertText":"to_string($1)$0","insertTextFormat":2,"kind":14,"label":"to_string","labelDetails":{"description":"Kernel.to_string/1","detail":"(term)"},"sortText":"00000804","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the integer part of `number`.\n```elixir\n@spec trunc(number()) ::\n        integer()\n```\n"},"insertText":"trunc($1)$0","insertTextFormat":2,"kind":14,"label":"trunc","labelDetails":{"description":"Kernel.trunc/1","detail":"(number)"},"sortText":"00000805","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Evaluates the given expressions and handles any error, exit,\nor throw that may have happened."},"insertText":"try do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"try","labelDetails":{"description":"Kernel.SpecialForms.try/1","detail":"(args)"},"sortText":"00000806","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Returns the size of a tuple.\n```elixir\n@spec tuple_size(tuple()) ::\n        non_neg_integer()\n```\n"},"insertText":"tuple_size($1)$0","insertTextFormat":2,"kind":14,"label":"tuple_size","labelDetails":{"description":"Kernel.tuple_size/1","detail":"(tuple)"},"sortText":"00000807","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Provides an `unless` macro."},"insertText":"unless $1 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"unless","labelDetails":{"description":"Kernel.unless/2","detail":"(condition, clauses)"},"sortText":"00000808","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Unquotes the given expression inside a quoted expression."},"insertText":"unquote($1)$0","insertTextFormat":2,"kind":14,"label":"unquote","labelDetails":{"description":"Kernel.SpecialForms.unquote/1","detail":"(expr)"},"sortText":"00000809","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Unquotes the given list expanding its arguments."},"insertText":"unquote_splicing($1)$0","insertTextFormat":2,"kind":14,"label":"unquote_splicing","labelDetails":{"description":"Kernel.SpecialForms.unquote_splicing/1","detail":"(term)"},"sortText":"00000810","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Updates a nested structure via the given `path`."},"insertText":"update_in($1)$0","insertTextFormat":2,"kind":14,"label":"update_in","labelDetails":{"description":"Kernel.update_in/2","detail":"(path, fun)"},"sortText":"00000811","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Updates a key in a nested structure.\n```elixir\n@spec update_in(\n        Access.t(),\n        [term(), ...],\n        (term() -> term())\n      ) :: Access.t()\n```\n"},"insertText":"update_in($1)$0","insertTextFormat":2,"kind":14,"label":"update_in","labelDetails":{"description":"Kernel.update_in/3","detail":"(data, keys, fun)"},"sortText":"00000812","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Uses the given module in the current context."},"insertText":"use","insertTextFormat":2,"kind":14,"label":"use","labelDetails":{"description":"Kernel.use/2","detail":"(module, opts \\\\ [])"},"sortText":"00000813","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Marks that the given variable should not be hygienized."},"insertText":"var!($1)$0","insertTextFormat":2,"kind":14,"label":"var!","labelDetails":{"description":"Kernel.var!/2","detail":"(var, context \\\\ nil)"},"sortText":"00000814","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Combine matching clauses."},"insertText":"with $2 <- $1 do\n\t$0\nend","insertTextFormat":2,"kind":15,"label":"with","labelDetails":{"description":"Kernel.SpecialForms.with/1","detail":"(args)"},"sortText":"00000815","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Boolean \"not\" operator."},"insertText":"!","insertTextFormat":2,"kind":14,"label":"!","labelDetails":{"description":"Kernel.!/1","detail":"(value)"},"sortText":"00000816","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Not equal to operator.\n```elixir\n@spec term() != term() ::\n        boolean()\n```\n"},"insertText":"!=","insertTextFormat":2,"kind":14,"label":"!=","labelDetails":{"description":"Kernel.!=/2","detail":"(left, right)"},"sortText":"00000817","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Strictly not equal to operator.\n```elixir\n@spec term() !== term() ::\n        boolean()\n```\n"},"insertText":"!==","insertTextFormat":2,"kind":14,"label":"!==","labelDetails":{"description":"Kernel.!==/2","detail":"(left, right)"},"sortText":"00000818","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Matches on or builds a struct."},"insertText":"%","insertTextFormat":2,"kind":14,"label":"%","labelDetails":{"description":"Kernel.SpecialForms.%/2","detail":"(struct, %{})"},"sortText":"00000819","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Creates a map."},"insertText":"%{}","insertTextFormat":2,"kind":14,"label":"%{}","labelDetails":{"description":"Kernel.SpecialForms.%{}/1","detail":"(term)"},"sortText":"00000820","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Capture operator. Captures or creates an anonymous function."},"insertText":"&","insertTextFormat":2,"kind":14,"label":"&","labelDetails":{"description":"Kernel.SpecialForms.&/1","detail":"(expr)"},"sortText":"00000821","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Boolean \"and\" operator."},"insertText":"&&","insertTextFormat":2,"kind":14,"label":"&&","labelDetails":{"description":"Kernel.&&/2","detail":"(left, right)"},"sortText":"00000822","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Arithmetic multiplication operator.\n```elixir\n@spec integer() * integer() ::\n        integer()\n@spec float() * float() ::\n        float()\n@spec integer() * float() ::\n        float()\n@spec float() * integer() ::\n        float()\n```\n"},"insertText":"*","insertTextFormat":2,"kind":14,"label":"*","labelDetails":{"description":"Kernel.*/2","detail":"(left, right)"},"sortText":"00000823","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Power operator.\n```elixir\n@spec integer() **\n        non_neg_integer() ::\n        integer()\n@spec integer() **\n        neg_integer() ::\n        float()\n@spec float() ** float() ::\n        float()\n@spec integer() ** float() ::\n        float()\n@spec float() ** integer() ::\n        float()\n```\n"},"insertText":"**","insertTextFormat":2,"kind":14,"label":"**","labelDetails":{"description":"Kernel.**/2","detail":"(base, exponent)"},"sortText":"00000824","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Arithmetic positive unary operator.\n```elixir\n@spec +integer() :: integer()\n@spec +float() :: float()\n```\n"},"insertText":"+","insertTextFormat":2,"kind":14,"label":"+","labelDetails":{"description":"Kernel.+/1","detail":"(value)"},"sortText":"00000825","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Arithmetic addition operator.\n```elixir\n@spec integer() + integer() ::\n        integer()\n@spec float() + float() ::\n        float()\n@spec integer() + float() ::\n        float()\n@spec float() + integer() ::\n        float()\n```\n"},"insertText":"+","insertTextFormat":2,"kind":14,"label":"+","labelDetails":{"description":"Kernel.+/2","detail":"(left, right)"},"sortText":"00000826","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"List concatenation operator. Concatenates a proper list and a term, returning a list.\n```elixir\n@spec list() ++ term() ::\n        maybe_improper_list()\n```\n"},"insertText":"++","insertTextFormat":2,"kind":14,"label":"++","labelDetails":{"description":"Kernel.++/2","detail":"(left, right)"},"sortText":"00000827","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Arithmetic negative unary operator.\n```elixir\n@spec -0 :: 0\n@spec -pos_integer() ::\n        neg_integer()\n@spec -neg_integer() ::\n        pos_integer()\n@spec -float() :: float()\n```\n"},"insertText":"-","insertTextFormat":2,"kind":14,"label":"-","labelDetails":{"description":"Kernel.-/1","detail":"(value)"},"sortText":"00000828","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Arithmetic subtraction operator.\n```elixir\n@spec integer() - integer() ::\n        integer()\n@spec float() - float() ::\n        float()\n@spec integer() - float() ::\n        float()\n@spec float() - integer() ::\n        float()\n```\n"},"insertText":"-","insertTextFormat":2,"kind":14,"label":"-","labelDetails":{"description":"Kernel.-/2","detail":"(left, right)"},"sortText":"00000829","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"List subtraction operator. Removes the first occurrence of an element\non the left list for each element on the right.\n```elixir\n@spec list() -- list() ::\n        list()\n```\n"},"insertText":"--","insertTextFormat":2,"kind":14,"label":"--","labelDetails":{"description":"Kernel.--/2","detail":"(left, right)"},"sortText":"00000830","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Dot operator. Defines a remote call, a call to an anonymous function, or an alias."},"insertText":".","insertTextFormat":2,"kind":14,"label":".","labelDetails":{"description":"Kernel.SpecialForms../2","detail":"(term, term)"},"sortText":"00000831","tags":[]},{"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Creates the full-slice range `0..-1//1`."},"insertText":"..","insertTextFormat":2,"kind":14,"label":"..","labelDetails":{"description":"Kernel.../0","detail":"()"},"sortText":"00000832","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Creates a range from `first` to `last`."},"insertText":"..","insertTextFormat":2,"kind":14,"label":"..","labelDetails":{"description":"Kernel.../2","detail":"(first, last)"},"sortText":"00000833","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Creates a range from `first` to `last` with `step`."},"insertText":"..//","insertTextFormat":2,"kind":14,"label":"..//","labelDetails":{"description":"Kernel...///3","detail":"(first, last, step)"},"sortText":"00000834","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Arithmetic division operator.\n```elixir\n@spec number() / number() ::\n        float()\n```\n"},"insertText":"/","insertTextFormat":2,"kind":14,"label":"/","labelDetails":{"description":"Kernel.//2","detail":"(left, right)"},"sortText":"00000835","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Type operator. Used by types and bitstrings to specify types."},"insertText":"::","insertTextFormat":2,"kind":14,"label":"::","labelDetails":{"description":"Kernel.SpecialForms.::/2","detail":"(left, right)"},"sortText":"00000836","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Less-than operator.\n```elixir\n@spec term() < term() ::\n        boolean()\n```\n"},"insertText":"<","insertTextFormat":2,"kind":14,"label":"<","labelDetails":{"description":"Kernel.</2","detail":"(left, right)"},"sortText":"00000837","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Defines a new bitstring."},"insertText":"<<>>","insertTextFormat":2,"kind":14,"label":"<<>>","labelDetails":{"description":"Kernel.SpecialForms.<<>>/1","detail":"(args)"},"sortText":"00000838","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Less-than or equal to operator.\n```elixir\n@spec term() <= term() ::\n        boolean()\n```\n"},"insertText":"<=","insertTextFormat":2,"kind":14,"label":"<=","labelDetails":{"description":"Kernel.<=/2","detail":"(left, right)"},"sortText":"00000839","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Binary concatenation operator. Concatenates two binaries."},"insertText":"<>","insertTextFormat":2,"kind":14,"label":"<>","labelDetails":{"description":"Kernel.<>/2","detail":"(left, right)"},"sortText":"00000840","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Match operator. Matches the value on the right against the pattern on the left.\n"},"insertText":"=","insertTextFormat":2,"kind":14,"label":"=","labelDetails":{"description":"Kernel.SpecialForms.=/2","detail":"(left, right)"},"sortText":"00000841","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Equal to operator. Returns `true` if the two terms are equal.\n```elixir\n@spec term() == term() ::\n        boolean()\n```\n"},"insertText":"==","insertTextFormat":2,"kind":14,"label":"==","labelDetails":{"description":"Kernel.==/2","detail":"(left, right)"},"sortText":"00000842","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Strictly equal to operator.\n```elixir\n@spec term() === term() ::\n        boolean()\n```\n"},"insertText":"===","insertTextFormat":2,"kind":14,"label":"===","labelDetails":{"description":"Kernel.===/2","detail":"(left, right)"},"sortText":"00000843","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Text-based match operator. Matches the term on the `left`\nagainst the regular expression or string on the `right`.\n```elixir\n@spec String.t() =~\n        (String.t()\n         | Regex.t()) ::\n        boolean()\n```\n"},"insertText":"=~","insertTextFormat":2,"kind":14,"label":"=~","labelDetails":{"description":"Kernel.=~/2","detail":"(left, right)"},"sortText":"00000844","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Greater-than operator.\n```elixir\n@spec term() > term() ::\n        boolean()\n```\n"},"insertText":">","insertTextFormat":2,"kind":14,"label":">","labelDetails":{"description":"Kernel.>/2","detail":"(left, right)"},"sortText":"00000845","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"function","documentation":{"kind":"markdown","value":"Greater-than or equal to operator.\n```elixir\n@spec term() >= term() ::\n        boolean()\n```\n"},"insertText":">=","insertTextFormat":2,"kind":14,"label":">=","labelDetails":{"description":"Kernel.>=/2","detail":"(left, right)"},"sortText":"00000846","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Module attribute unary operator."},"insertText":"@","insertTextFormat":2,"kind":14,"label":"@","labelDetails":{"description":"Kernel.@/1","detail":"(expr)"},"sortText":"00000847","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Pin operator. Accesses an already bound variable in match clauses."},"insertText":"^","insertTextFormat":2,"kind":14,"label":"^","labelDetails":{"description":"Kernel.SpecialForms.^/1","detail":"(var)"},"sortText":"00000848","tags":[]},{"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns the current calling environment as a `Macro.Env` struct."},"insertText":"__CALLER__","insertTextFormat":2,"kind":14,"label":"__CALLER__","labelDetails":{"description":"Kernel.SpecialForms.__CALLER__/0","detail":"()"},"sortText":"00000849","tags":[]},{"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns the absolute path of the directory of the current file as a binary."},"insertText":"__DIR__","insertTextFormat":2,"kind":14,"label":"__DIR__","labelDetails":{"description":"Kernel.SpecialForms.__DIR__/0","detail":"()"},"sortText":"00000850","tags":[]},{"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns the current environment information as a `Macro.Env` struct."},"insertText":"__ENV__","insertTextFormat":2,"kind":14,"label":"__ENV__","labelDetails":{"description":"Kernel.SpecialForms.__ENV__/0","detail":"()"},"sortText":"00000851","tags":[]},{"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns the current module name as an atom or `nil` otherwise."},"insertText":"__MODULE__","insertTextFormat":2,"kind":14,"label":"__MODULE__","labelDetails":{"description":"Kernel.SpecialForms.__MODULE__/0","detail":"()"},"sortText":"00000852","tags":[]},{"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Returns the stacktrace for the currently handled exception."},"insertText":"__STACKTRACE__","insertTextFormat":2,"kind":14,"label":"__STACKTRACE__","labelDetails":{"description":"Kernel.SpecialForms.__STACKTRACE__/0","detail":"()"},"sortText":"00000853","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Internal special form to hold aliases information."},"insertText":"__aliases__","insertTextFormat":2,"kind":14,"label":"__aliases__","labelDetails":{"description":"Kernel.SpecialForms.__aliases__/1","detail":"(term)"},"sortText":"00000854","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Internal special form for block expressions."},"insertText":"__block__","insertTextFormat":2,"kind":14,"label":"__block__","labelDetails":{"description":"Kernel.SpecialForms.__block__/1","detail":"(term)"},"sortText":"00000855","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Creates a tuple."},"insertText":"{}","insertTextFormat":2,"kind":14,"label":"{}","labelDetails":{"description":"Kernel.SpecialForms.{}/1","detail":"(args)"},"sortText":"00000856","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Pipe operator."},"insertText":"|>","insertTextFormat":2,"kind":14,"label":"|>","labelDetails":{"description":"Kernel.|>/2","detail":"(left, right)"},"sortText":"00000857","tags":[]},{"command":{"command":"editor.action.triggerParameterHints","title":"Trigger Parameter Hint"},"deprecated":false,"detail":"macro","documentation":{"kind":"markdown","value":"Boolean \"or\" operator."},"insertText":"||","insertTextFormat":2,"kind":14,"label":"||","labelDetails":{"description":"Kernel.||/2","detail":"(left, right)"},"sortText":"00000858","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Crypto.AES_CBC_HMAC_SHA2\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"AES_CBC_HMAC_SHA2\n"},"filterText":"AES_CBC_HMAC_SHA2","insertText":"AES_CBC_HMAC_SHA2","insertTextFormat":2,"kind":9,"label":"AES_CBC_HMAC_SHA2","labelDetails":{"description":"alias Hex.Crypto.AES_CBC_HMAC_SHA2"},"sortText":"00000859","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Crypto.AES_GCM\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"AES_GCM\n"},"filterText":"AES_GCM","insertText":"AES_GCM","insertTextFormat":2,"kind":9,"label":"AES_GCM","labelDetails":{"description":"alias Hex.Crypto.AES_GCM"},"sortText":"00000860","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IO.ANSI\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ANSI\nFunctionality to render ANSI escape sequences."},"filterText":"ANSI","insertText":"ANSI","insertTextFormat":2,"kind":9,"label":"ANSI","labelDetails":{"description":"alias IO.ANSI"},"sortText":"00000861","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"API\n"},"filterText":"API","insertText":"API","insertTextFormat":2,"kind":9,"label":"API","labelDetails":{"description":"alias Hex.API"},"sortText":"00000862","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.ExecuteCommand.ManipulatePipes.AST\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"AST\nAST manipulation helpers for the `ElixirLS.LanguageServer.Providers.ExecuteCommand.ManipulatePipes`command.\n"},"filterText":"AST","insertText":"AST","insertTextFormat":2,"kind":9,"label":"AST","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.ExecuteCommand.ManipulatePipes.AST"},"sortText":"00000863","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Adapter\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Adapter\nThe adapter specification."},"filterText":"Adapter","insertText":"Adapter","insertTextFormat":2,"kind":8,"label":"Adapter","labelDetails":{"description":"alias Tesla.Adapter","detail":"behaviour"},"sortText":"00000864","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Inspect.Algebra\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Algebra\nA set of functions for creating and manipulating algebra\ndocuments."},"filterText":"Algebra","insertText":"Algebra","insertTextFormat":2,"kind":9,"label":"Algebra","labelDetails":{"description":"alias Inspect.Algebra"},"sortText":"00000865","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.Analyze\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Analyze\n"},"filterText":"Analyze","insertText":"Analyze","insertTextFormat":2,"kind":9,"label":"Analyze","labelDetails":{"description":"alias Erl2exVendored.Pipeline.Analyze"},"sortText":"00000866","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Dialyzer.Analyzer\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Analyzer\n"},"filterText":"Analyzer","insertText":"Analyzer","insertTextFormat":2,"kind":22,"label":"Analyzer","labelDetails":{"description":"alias ElixirLS.LanguageServer.Dialyzer.Analyzer","detail":"struct"},"sortText":"00000867","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.App\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"App\n"},"filterText":"App","insertText":"App","insertTextFormat":2,"kind":9,"label":"App","labelDetails":{"description":"alias IEx.App"},"sortText":"00000868","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.App\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"App\n"},"filterText":"App","insertText":"App","insertTextFormat":2,"kind":9,"label":"App","labelDetails":{"description":"alias Logger.App"},"sortText":"00000869","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.AppCall\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"AppCall\n"},"filterText":"AppCall","insertText":"AppCall","insertTextFormat":2,"kind":9,"label":"AppCall","labelDetails":{"description":"alias DialyxirVendored.Warnings.AppCall"},"sortText":"00000870","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.AppLoader\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"AppLoader\n"},"filterText":"AppLoader","insertText":"AppLoader","insertTextFormat":2,"kind":9,"label":"AppLoader","labelDetails":{"description":"alias Mix.AppLoader"},"sortText":"00000871","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Application\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Application\n"},"filterText":"Application","insertText":"Application","insertTextFormat":2,"kind":9,"label":"Application","labelDetails":{"description":"alias Hex.Application"},"sortText":"00000872","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Applications\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Applications\nThis module contains helper functions for introspecting running OTP applications\n"},"filterText":"Applications","insertText":"Applications","insertTextFormat":2,"kind":9,"label":"Applications","labelDetails":{"description":"alias ElixirSense.Core.Applications"},"sortText":"00000873","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.Apply\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Apply\nThe function being invoked exists, and has the correct arity, but\nwill not succeed."},"filterText":"Apply","insertText":"Apply","insertTextFormat":2,"kind":9,"label":"Apply","labelDetails":{"description":"alias DialyxirVendored.Warnings.Apply"},"sortText":"00000874","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.ExecuteCommand.ApplySpec\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ApplySpec\nThis module implements a custom command inserting dialyzer suggested function spec.\nGenerates source file edit as a result.\n"},"filterText":"ApplySpec","insertText":"ApplySpec","insertTextFormat":2,"kind":9,"label":"ApplySpec","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.ExecuteCommand.ApplySpec"},"sortText":"00000875","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.AssertionError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"AssertionError\nRaised to signal an assertion error.\n"},"filterText":"AssertionError","insertText":"AssertionError","insertTextFormat":2,"kind":22,"label":"AssertionError","labelDetails":{"description":"alias ExUnit.AssertionError","detail":"exception"},"sortText":"00000876","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.Assertions\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Assertions\nThis module contains a set of assertion functions that are\nimported by default into your test cases."},"filterText":"Assertions","insertText":"Assertions","insertTextFormat":2,"kind":9,"label":"Assertions","labelDetails":{"description":"alias ExUnit.Assertions"},"sortText":"00000877","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Assignment\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Assignment\n"},"filterText":"Assignment","insertText":"Assignment","insertTextFormat":2,"kind":22,"label":"Assignment","labelDetails":{"description":"alias Hex.Solver.Assignment","detail":"struct"},"sortText":"00000878","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Ast\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Ast\nAbstract Syntax Tree support\n"},"filterText":"Ast","insertText":"Ast","insertTextFormat":2,"kind":9,"label":"Ast","labelDetails":{"description":"alias ElixirSense.Core.Ast"},"sortText":"00000879","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.State.AttributeInfo\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"AttributeInfo\nVariable info\n"},"filterText":"AttributeInfo","insertText":"AttributeInfo","insertTextFormat":2,"kind":22,"label":"AttributeInfo","labelDetails":{"description":"alias ElixirSense.Core.State.AttributeInfo","detail":"struct"},"sortText":"00000880","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API.Auth\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Auth\n"},"filterText":"Auth","insertText":"Auth","insertTextFormat":2,"kind":9,"label":"Auth","labelDetails":{"description":"alias Hex.API.Auth"},"sortText":"00000881","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.Autocomplete\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Autocomplete\n"},"filterText":"Autocomplete","insertText":"Autocomplete","insertTextFormat":2,"kind":9,"label":"Autocomplete","labelDetails":{"description":"alias IEx.Autocomplete"},"sortText":"00000882","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Backends\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Backends\n"},"filterText":"Backends","insertText":"Backends","insertTextFormat":2,"kind":9,"label":"Backends","labelDetails":{"description":"alias Logger.Backends","detail":"alias"},"sortText":"00000883","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.BaseUrl\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"BaseUrl\nSet base URL for all requests."},"filterText":"BaseUrl","insertText":"BaseUrl","insertTextFormat":2,"kind":9,"label":"BaseUrl","labelDetails":{"description":"alias Tesla.Middleware.BaseUrl"},"sortText":"00000884","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.BasicAuth\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"BasicAuth\nBasic authentication middleware."},"filterText":"BasicAuth","insertText":"BasicAuth","insertTextFormat":2,"kind":9,"label":"BasicAuth","labelDetails":{"description":"alias Tesla.Middleware.BasicAuth"},"sortText":"00000885","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.BearerAuth\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"BearerAuth\nBearer authentication middleware."},"filterText":"BearerAuth","insertText":"BearerAuth","insertTextFormat":2,"kind":9,"label":"BearerAuth","labelDetails":{"description":"alias Tesla.Middleware.BearerAuth"},"sortText":"00000886","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.Types.Behaviour\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Behaviour\n"},"filterText":"Behaviour","insertText":"Behaviour","insertTextFormat":2,"kind":9,"label":"Behaviour","labelDetails":{"description":"alias Module.Types.Behaviour"},"sortText":"00000887","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Behaviours\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Behaviours\n"},"filterText":"Behaviours","insertText":"Behaviours","insertTextFormat":2,"kind":9,"label":"Behaviours","labelDetails":{"description":"alias ElixirSense.Core.Behaviours"},"sortText":"00000888","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.BinaryConstruction\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"BinaryConstruction\n"},"filterText":"BinaryConstruction","insertText":"BinaryConstruction","insertTextFormat":2,"kind":9,"label":"BinaryConstruction","labelDetails":{"description":"alias DialyxirVendored.Warnings.BinaryConstruction"},"sortText":"00000889","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Binding\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Binding\n"},"filterText":"Binding","insertText":"Binding","insertTextFormat":2,"kind":22,"label":"Binding","labelDetails":{"description":"alias ElixirSense.Core.Binding","detail":"struct"},"sortText":"00000890","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Bitstring\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Bitstring\n"},"filterText":"Bitstring","insertText":"Bitstring","insertTextFormat":2,"kind":9,"label":"Bitstring","labelDetails":{"description":"alias ElixirSense.Core.Bitstring"},"sortText":"00000891","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.Bitstring\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Bitstring\n"},"filterText":"Bitstring","insertText":"Bitstring","insertTextFormat":2,"kind":9,"label":"Bitstring","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.Bitstring"},"sortText":"00000892","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias String.Break\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Break\n"},"filterText":"Break","insertText":"Break","insertTextFormat":2,"kind":9,"label":"Break","labelDetails":{"description":"alias String.Break"},"sortText":"00000893","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.Broker\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Broker\n"},"filterText":"Broker","insertText":"Broker","insertTextFormat":2,"kind":9,"label":"Broker","labelDetails":{"description":"alias IEx.Broker"},"sortText":"00000894","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Build\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Build\n"},"filterText":"Build","insertText":"Build","insertTextFormat":2,"kind":9,"label":"Build","labelDetails":{"description":"alias ElixirLS.LanguageServer.Build"},"sortText":"00000895","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Builder\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Builder\n"},"filterText":"Builder","insertText":"Builder","insertTextFormat":2,"kind":9,"label":"Builder","labelDetails":{"description":"alias Tesla.Builder"},"sortText":"00000896","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.BuiltinAttributes\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"BuiltinAttributes\n"},"filterText":"BuiltinAttributes","insertText":"BuiltinAttributes","insertTextFormat":2,"kind":9,"label":"BuiltinAttributes","labelDetails":{"description":"alias ElixirSense.Core.BuiltinAttributes"},"sortText":"00000897","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.BuiltinFunctions\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"BuiltinFunctions\n"},"filterText":"BuiltinFunctions","insertText":"BuiltinFunctions","insertTextFormat":2,"kind":9,"label":"BuiltinFunctions","labelDetails":{"description":"alias ElixirSense.Core.BuiltinFunctions"},"sortText":"00000898","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.BuiltinTypes\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"BuiltinTypes\n"},"filterText":"BuiltinTypes","insertText":"BuiltinTypes","insertTextFormat":2,"kind":9,"label":"BuiltinTypes","labelDetails":{"description":"alias ElixirSense.Core.BuiltinTypes"},"sortText":"00000899","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.CLI\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CLI\n"},"filterText":"CLI","insertText":"CLI","insertTextFormat":2,"kind":9,"label":"CLI","labelDetails":{"description":"alias ElixirLS.LanguageServer.CLI"},"sortText":"00000900","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.CLI\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CLI\n"},"filterText":"CLI","insertText":"CLI","insertTextFormat":2,"kind":9,"label":"CLI","labelDetails":{"description":"alias IEx.CLI"},"sortText":"00000901","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Kernel.CLI\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CLI\n"},"filterText":"CLI","insertText":"CLI","insertTextFormat":2,"kind":9,"label":"CLI","labelDetails":{"description":"alias Kernel.CLI"},"sortText":"00000902","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.CLI\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CLI\n"},"filterText":"CLI","insertText":"CLI","insertTextFormat":2,"kind":9,"label":"CLI","labelDetails":{"description":"alias Mix.CLI"},"sortText":"00000903","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.CLIFormatter\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CLIFormatter\n"},"filterText":"CLIFormatter","insertText":"CLIFormatter","insertTextFormat":2,"kind":9,"label":"CLIFormatter","labelDetails":{"description":"alias ExUnit.CLIFormatter"},"sortText":"00000904","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Netrc.Cache\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Cache\n"},"filterText":"Cache","insertText":"Cache","insertTextFormat":2,"kind":9,"label":"Cache","labelDetails":{"description":"alias Hex.Netrc.Cache"},"sortText":"00000905","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.Call\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Call\nThe function call will not succeed."},"filterText":"Call","insertText":"Call","insertTextFormat":2,"kind":9,"label":"Call","labelDetails":{"description":"alias DialyxirVendored.Warnings.Call"},"sortText":"00000906","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.State.CallInfo\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"CallInfo\nFunction call info\n"},"filterText":"CallInfo","insertText":"CallInfo","insertTextFormat":2,"kind":22,"label":"CallInfo","labelDetails":{"description":"alias ElixirSense.Core.State.CallInfo","detail":"struct"},"sortText":"00000907","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallToMissingFunction\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallToMissingFunction\nFunction calls a missing or private function. This may be caused by\na typo or incorrect arity. This is also a compiler warning."},"filterText":"CallToMissingFunction","insertText":"CallToMissingFunction","insertTextFormat":2,"kind":9,"label":"CallToMissingFunction","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallToMissingFunction"},"sortText":"00000908","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallWithOpaque\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallWithOpaque\n"},"filterText":"CallWithOpaque","insertText":"CallWithOpaque","insertTextFormat":2,"kind":9,"label":"CallWithOpaque","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallWithOpaque"},"sortText":"00000909","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallWithoutOpaque\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallWithoutOpaque\nFunction call without opaqueness type mismatch."},"filterText":"CallWithoutOpaque","insertText":"CallWithoutOpaque","insertTextFormat":2,"kind":9,"label":"CallWithoutOpaque","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallWithoutOpaque"},"sortText":"00000910","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallbackArgumentTypeMismatch\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallbackArgumentTypeMismatch\nType of argument does not match the callback's expected type."},"filterText":"CallbackArgumentTypeMismatch","insertText":"CallbackArgumentTypeMismatch","insertTextFormat":2,"kind":9,"label":"CallbackArgumentTypeMismatch","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallbackArgumentTypeMismatch"},"sortText":"00000911","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallbackInfoMissing\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallbackInfoMissing\nThe module is using a behaviour that does not exist or is not a\nbehaviour. This is also a compiler warning."},"filterText":"CallbackInfoMissing","insertText":"CallbackInfoMissing","insertTextFormat":2,"kind":9,"label":"CallbackInfoMissing","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallbackInfoMissing"},"sortText":"00000912","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallbackMissing\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallbackMissing\nModule implements a behaviour, but does not have all of its\ncallbacks. This is also a compiler warning."},"filterText":"CallbackMissing","insertText":"CallbackMissing","insertTextFormat":2,"kind":9,"label":"CallbackMissing","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallbackMissing"},"sortText":"00000913","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallbackNotExported\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallbackNotExported\nModule implements a behaviour, but does not export some of its\ncallbacks."},"filterText":"CallbackNotExported","insertText":"CallbackNotExported","insertTextFormat":2,"kind":9,"label":"CallbackNotExported","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallbackNotExported"},"sortText":"00000914","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallbackSpecArgumentTypeMismatch\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallbackSpecArgumentTypeMismatch\nSpec type of argument does not match the callback's expected type."},"filterText":"CallbackSpecArgumentTypeMismatch","insertText":"CallbackSpecArgumentTypeMismatch","insertTextFormat":2,"kind":9,"label":"CallbackSpecArgumentTypeMismatch","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallbackSpecArgumentTypeMismatch"},"sortText":"00000915","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallbackSpecTypeMismatch\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallbackSpecTypeMismatch\nThe return type in the @spec does not match the\nexpected return type of the behaviour."},"filterText":"CallbackSpecTypeMismatch","insertText":"CallbackSpecTypeMismatch","insertTextFormat":2,"kind":9,"label":"CallbackSpecTypeMismatch","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallbackSpecTypeMismatch"},"sortText":"00000916","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.CallbackTypeMismatch\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CallbackTypeMismatch\nThe success type of the function does not match the callback type in\nthe behaviour."},"filterText":"CallbackTypeMismatch","insertText":"CallbackTypeMismatch","insertTextFormat":2,"kind":9,"label":"CallbackTypeMismatch","labelDetails":{"description":"alias DialyxirVendored.Warnings.CallbackTypeMismatch"},"sortText":"00000917","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.Callbacks\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Callbacks\n"},"filterText":"Callbacks","insertText":"Callbacks","insertTextFormat":2,"kind":9,"label":"Callbacks","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.Callbacks"},"sortText":"00000918","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.Callbacks\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Callbacks\nDefines ExUnit callbacks."},"filterText":"Callbacks","insertText":"Callbacks","insertTextFormat":2,"kind":9,"label":"Callbacks","labelDetails":{"description":"alias ExUnit.Callbacks"},"sortText":"00000919","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.CaptureIO\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CaptureIO\nFunctionality to capture IO for testing."},"filterText":"CaptureIO","insertText":"CaptureIO","insertTextFormat":2,"kind":9,"label":"CaptureIO","labelDetails":{"description":"alias ExUnit.CaptureIO"},"sortText":"00000920","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.CaptureLog\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CaptureLog\nFunctionality to capture logs for testing."},"filterText":"CaptureLog","insertText":"CaptureLog","insertTextFormat":2,"kind":9,"label":"CaptureLog","labelDetails":{"description":"alias ExUnit.CaptureLog"},"sortText":"00000921","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.CaptureServer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CaptureServer\n"},"filterText":"CaptureServer","insertText":"CaptureServer","insertTextFormat":2,"kind":9,"label":"CaptureServer","labelDetails":{"description":"alias ExUnit.CaptureServer"},"sortText":"00000922","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.Case\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Case\nHelpers for defining test cases."},"filterText":"Case","insertText":"Case","insertTextFormat":2,"kind":9,"label":"Case","labelDetails":{"description":"alias ExUnit.Case"},"sortText":"00000923","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.CaseTemplate\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CaseTemplate\nDefines a module template to be used throughout your test suite."},"filterText":"CaseTemplate","insertText":"CaseTemplate","insertTextFormat":2,"kind":9,"label":"CaseTemplate","labelDetails":{"description":"alias ExUnit.CaseTemplate"},"sortText":"00000924","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.HTTP.Certs\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Certs\n"},"filterText":"Certs","insertText":"Certs","insertTextFormat":2,"kind":9,"label":"Certs","labelDetails":{"description":"alias Hex.HTTP.Certs"},"sortText":"00000925","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias List.Chars\n"}],"deprecated":false,"detail":"protocol","documentation":{"kind":"markdown","value":"Chars\nThe `List.Chars` protocol is responsible for\nconverting a structure to a charlist (only if applicable)."},"filterText":"Chars","insertText":"Chars","insertTextFormat":2,"kind":8,"label":"Chars","labelDetails":{"description":"alias List.Chars","detail":"protocol"},"sortText":"00000926","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias String.Chars\n"}],"deprecated":false,"detail":"protocol","documentation":{"kind":"markdown","value":"Chars\nThe `String.Chars` protocol is responsible for\nconverting a structure to a binary (only if applicable)."},"filterText":"Chars","insertText":"Chars","insertTextFormat":2,"kind":8,"label":"Chars","labelDetails":{"description":"alias String.Chars","detail":"protocol"},"sortText":"00000927","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Cli\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Cli\nThis module provides the command line interface for the erl2ex binary and\nthe mix erl2ex task.\n"},"filterText":"Cli","insertText":"Cli","insertTextFormat":2,"kind":9,"label":"Cli","labelDetails":{"description":"alias Erl2exVendored.Cli"},"sortText":"00000928","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Client\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Client\n"},"filterText":"Client","insertText":"Client","insertTextFormat":2,"kind":22,"label":"Client","labelDetails":{"description":"alias Tesla.Client","detail":"struct"},"sortText":"00000929","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized.Code\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Code\nShims increasing portability of `Code` module\n"},"filterText":"Code","insertText":"Code","insertTextFormat":2,"kind":9,"label":"Code","labelDetails":{"description":"alias ElixirSense.Core.Normalized.Code"},"sortText":"00000930","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.CodeLens\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CodeLens\nProvides different code lenses to the client."},"filterText":"CodeLens","insertText":"CodeLens","insertTextFormat":2,"kind":9,"label":"CodeLens","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.CodeLens"},"sortText":"00000931","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.Codegen\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Codegen\n"},"filterText":"Codegen","insertText":"Codegen","insertTextFormat":2,"kind":9,"label":"Codegen","labelDetails":{"description":"alias Erl2exVendored.Pipeline.Codegen"},"sortText":"00000932","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.Codegen\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Codegen\n"},"filterText":"Codegen","insertText":"Codegen","insertTextFormat":2,"kind":9,"label":"Codegen","labelDetails":{"description":"alias Jason.Codegen"},"sortText":"00000933","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Codegen\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Codegen\n"},"filterText":"Codegen","insertText":"Codegen","insertTextFormat":2,"kind":9,"label":"Codegen","labelDetails":{"description":"alias JasonV.Codegen"},"sortText":"00000934","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Results.Collector\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Collector\nErl2exVendored.Results.Collector is a process that accumulates results of a\nconversion run.\n"},"filterText":"Collector","insertText":"Collector","insertTextFormat":2,"kind":9,"label":"Collector","labelDetails":{"description":"alias Erl2exVendored.Results.Collector"},"sortText":"00000935","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.FoldingRange.CommentBlock\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CommentBlock\nCode folding based on comment blocks"},"filterText":"CommentBlock","insertText":"CommentBlock","insertTextFormat":2,"kind":9,"label":"CommentBlock","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.FoldingRange.CommentBlock"},"sortText":"00000936","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.Common\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Common\n"},"filterText":"Common","insertText":"Common","insertTextFormat":2,"kind":9,"label":"Common","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.Common"},"sortText":"00000937","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Regex.CompileError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"CompileError\n"},"filterText":"CompileError","insertText":"CompileError","insertTextFormat":2,"kind":22,"label":"CompileError","labelDetails":{"description":"alias Regex.CompileError","detail":"exception"},"sortText":"00000938","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias EEx.Compiler\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Compiler\n"},"filterText":"Compiler","insertText":"Compiler","insertTextFormat":2,"kind":9,"label":"Compiler","labelDetails":{"description":"alias EEx.Compiler"},"sortText":"00000939","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Task.Compiler\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Compiler\nThis module defines the behaviour for a Mix task that does compilation."},"filterText":"Compiler","insertText":"Compiler","insertTextFormat":2,"kind":8,"label":"Compiler","labelDetails":{"description":"alias Mix.Task.Compiler","detail":"behaviour"},"sortText":"00000940","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Compilers\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Compilers\n"},"filterText":"Compilers","insertText":"Compilers","insertTextFormat":2,"kind":9,"label":"Compilers","labelDetails":{"description":"alias Mix.Compilers","detail":"alias"},"sortText":"00000941","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Complete\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Complete\nProvides generic completion for functions, macros, attributes, variables\n"},"filterText":"Complete","insertText":"Complete","insertTextFormat":2,"kind":9,"label":"Complete","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Complete"},"sortText":"00000942","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.Completion\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Completion\nAuto-complete provider utilizing Elixir Sense"},"filterText":"Completion","insertText":"Completion","insertTextFormat":2,"kind":22,"label":"Completion","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.Completion","detail":"struct"},"sortText":"00000943","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.CompressRequest\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"CompressRequest\nOnly compress request."},"filterText":"CompressRequest","insertText":"CompressRequest","insertTextFormat":2,"kind":9,"label":"CompressRequest","labelDetails":{"description":"alias Tesla.Middleware.CompressRequest"},"sortText":"00000944","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.Compression\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Compression\nCompress requests and decompress responses."},"filterText":"Compression","insertText":"Compression","insertTextFormat":2,"kind":9,"label":"Compression","labelDetails":{"description":"alias Tesla.Middleware.Compression"},"sortText":"00000945","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Config\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Config\n"},"filterText":"Config","insertText":"Config","insertTextFormat":2,"kind":9,"label":"Config","labelDetails":{"description":"alias Hex.Config"},"sortText":"00000946","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.Config\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Config\n"},"filterText":"Config","insertText":"Config","insertTextFormat":2,"kind":9,"label":"Config","labelDetails":{"description":"alias IEx.Config"},"sortText":"00000947","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Backends.Config\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Config\n"},"filterText":"Config","insertText":"Config","insertTextFormat":2,"kind":9,"label":"Config","labelDetails":{"description":"alias Logger.Backends.Config"},"sortText":"00000948","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Config\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Config\n"},"filterText":"Config","insertText":"Config","insertTextFormat":2,"kind":9,"label":"Config","labelDetails":{"description":"alias Mix.Config"},"sortText":"00000949","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Constraint\n"}],"deprecated":false,"detail":"protocol","documentation":{"kind":"markdown","value":"Constraint\n"},"filterText":"Constraint","insertText":"Constraint","insertTextFormat":2,"kind":8,"label":"Constraint","labelDetails":{"description":"alias Hex.Solver.Constraint","detail":"protocol"},"sortText":"00000950","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Constraints\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Constraints\n"},"filterText":"Constraints","insertText":"Constraints","insertTextFormat":2,"kind":9,"label":"Constraints","labelDetails":{"description":"alias Hex.Solver.Constraints","detail":"alias"},"sortText":"00000951","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Crypto.ContentEncryptor\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ContentEncryptor\n"},"filterText":"ContentEncryptor","insertText":"ContentEncryptor","insertTextFormat":2,"kind":22,"label":"ContentEncryptor","labelDetails":{"description":"alias Hex.Crypto.ContentEncryptor","detail":"struct"},"sortText":"00000952","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Convert.Context\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Context\n"},"filterText":"Context","insertText":"Context","insertTextFormat":2,"kind":22,"label":"Context","labelDetails":{"description":"alias Erl2exVendored.Convert.Context","detail":"struct"},"sortText":"00000953","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.Codegen.Context\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Context\n"},"filterText":"Context","insertText":"Context","insertTextFormat":2,"kind":22,"label":"Context","labelDetails":{"description":"alias Erl2exVendored.Pipeline.Codegen.Context","detail":"struct"},"sortText":"00000954","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.ContractDiff\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ContractDiff\n"},"filterText":"ContractDiff","insertText":"ContractDiff","insertTextFormat":2,"kind":9,"label":"ContractDiff","labelDetails":{"description":"alias DialyxirVendored.Warnings.ContractDiff"},"sortText":"00000955","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.ContractRange\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ContractRange\n"},"filterText":"ContractRange","insertText":"ContractRange","insertTextFormat":2,"kind":9,"label":"ContractRange","labelDetails":{"description":"alias DialyxirVendored.Warnings.ContractRange"},"sortText":"00000956","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.ContractSubtype\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ContractSubtype\nThe type in the @spec does not completely cover the types returned\nby function."},"filterText":"ContractSubtype","insertText":"ContractSubtype","insertTextFormat":2,"kind":9,"label":"ContractSubtype","labelDetails":{"description":"alias DialyxirVendored.Warnings.ContractSubtype"},"sortText":"00000957","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.ContractSupertype\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ContractSupertype\nThe @spec, while not incorrect, is more general than the type\nreturned by the function."},"filterText":"ContractSupertype","insertText":"ContractSupertype","insertTextFormat":2,"kind":9,"label":"ContractSupertype","labelDetails":{"description":"alias DialyxirVendored.Warnings.ContractSupertype"},"sortText":"00000958","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.CodeLens.TypeSpec.ContractTranslator\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ContractTranslator\n"},"filterText":"ContractTranslator","insertText":"ContractTranslator","insertTextFormat":2,"kind":9,"label":"ContractTranslator","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.CodeLens.TypeSpec.ContractTranslator"},"sortText":"00000959","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.ContractWithOpaque\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ContractWithOpaque\nThe @spec says the function is returning an opaque type, but it is\nreturning a different type."},"filterText":"ContractWithOpaque","insertText":"ContractWithOpaque","insertTextFormat":2,"kind":9,"label":"ContractWithOpaque","labelDetails":{"description":"alias DialyxirVendored.Warnings.ContractWithOpaque"},"sortText":"00000960","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Dep.Converger\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Converger\n"},"filterText":"Converger","insertText":"Converger","insertTextFormat":2,"kind":9,"label":"Converger","labelDetails":{"description":"alias Mix.Dep.Converger"},"sortText":"00000961","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Convert\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Convert\n"},"filterText":"Convert","insertText":"Convert","insertTextFormat":2,"kind":9,"label":"Convert","labelDetails":{"description":"alias Erl2exVendored.Convert","detail":"alias"},"sortText":"00000962","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.Convert\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Convert\n"},"filterText":"Convert","insertText":"Convert","insertTextFormat":2,"kind":9,"label":"Convert","labelDetails":{"description":"alias Erl2exVendored.Pipeline.Convert"},"sortText":"00000963","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias File.CopyError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"CopyError\n"},"filterText":"CopyError","insertText":"CopyError","insertTextFormat":2,"kind":22,"label":"CopyError","labelDetails":{"description":"alias File.CopyError","detail":"exception"},"sortText":"00000964","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Core\n"},"filterText":"Core","insertText":"Core","insertTextFormat":2,"kind":9,"label":"Core","labelDetails":{"description":"alias ElixirSense.Core","detail":"alias"},"sortText":"00000965","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Crypto\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Crypto\n"},"filterText":"Crypto","insertText":"Crypto","insertTextFormat":2,"kind":9,"label":"Crypto","labelDetails":{"description":"alias Hex.Crypto"},"sortText":"00000966","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Debugger\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Debugger\n"},"filterText":"Debugger","insertText":"Debugger","insertTextFormat":2,"kind":9,"label":"Debugger","labelDetails":{"description":"alias ElixirLS.Debugger","detail":"alias"},"sortText":"00000967","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.DecodeError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"DecodeError\n"},"filterText":"DecodeError","insertText":"DecodeError","insertTextFormat":2,"kind":22,"label":"DecodeError","labelDetails":{"description":"alias Jason.DecodeError","detail":"exception"},"sortText":"00000968","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.DecodeError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"DecodeError\n"},"filterText":"DecodeError","insertText":"DecodeError","insertTextFormat":2,"kind":22,"label":"DecodeError","labelDetails":{"description":"alias JasonV.DecodeError","detail":"exception"},"sortText":"00000969","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.DecodeFormUrlencoded\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DecodeFormUrlencoded\n"},"filterText":"DecodeFormUrlencoded","insertText":"DecodeFormUrlencoded","insertTextFormat":2,"kind":9,"label":"DecodeFormUrlencoded","labelDetails":{"description":"alias Tesla.Middleware.DecodeFormUrlencoded"},"sortText":"00000970","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.DecodeJson\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DecodeJson\nDecodes response body as JSON."},"filterText":"DecodeJson","insertText":"DecodeJson","insertTextFormat":2,"kind":9,"label":"DecodeJson","labelDetails":{"description":"alias Tesla.Middleware.DecodeJson"},"sortText":"00000971","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.DecodeRels\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DecodeRels\nDecode `Link` Hypermedia HTTP header into `opts[:rels]` field in response."},"filterText":"DecodeRels","insertText":"DecodeRels","insertTextFormat":2,"kind":9,"label":"DecodeRels","labelDetails":{"description":"alias Tesla.Middleware.DecodeRels"},"sortText":"00000972","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.Decoder\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Decoder\n"},"filterText":"Decoder","insertText":"Decoder","insertTextFormat":2,"kind":9,"label":"Decoder","labelDetails":{"description":"alias Jason.Decoder"},"sortText":"00000973","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Decoder\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Decoder\n"},"filterText":"Decoder","insertText":"Decoder","insertTextFormat":2,"kind":9,"label":"Decoder","labelDetails":{"description":"alias JasonV.Decoder"},"sortText":"00000974","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.DecompressResponse\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DecompressResponse\nOnly decompress response."},"filterText":"DecompressResponse","insertText":"DecompressResponse","insertTextFormat":2,"kind":9,"label":"DecompressResponse","labelDetails":{"description":"alias Tesla.Middleware.DecompressResponse"},"sortText":"00000975","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Supervisor.Default\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Default\n"},"filterText":"Default","insertText":"Default","insertTextFormat":2,"kind":9,"label":"Default","labelDetails":{"description":"alias Supervisor.Default"},"sortText":"00000976","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.Definition\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Definition\nGo-to-definition provider utilizing Elixir Sense\n"},"filterText":"Definition","insertText":"Definition","insertTextFormat":2,"kind":9,"label":"Definition","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.Definition"},"sortText":"00000977","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Definition\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Definition\nProvides a function to find out where symbols are defined."},"filterText":"Definition","insertText":"Definition","insertTextFormat":2,"kind":9,"label":"Definition","labelDetails":{"description":"alias ElixirSense.Providers.Definition"},"sortText":"00000978","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Dep\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Dep\n"},"filterText":"Dep","insertText":"Dep","insertTextFormat":2,"kind":22,"label":"Dep","labelDetails":{"description":"alias Mix.Dep","detail":"struct"},"sortText":"00000979","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.CodeLens.Test.DescribeBlock\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"DescribeBlock\n"},"filterText":"DescribeBlock","insertText":"DescribeBlock","insertTextFormat":2,"kind":22,"label":"DescribeBlock","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.CodeLens.Test.DescribeBlock","detail":"struct"},"sortText":"00000980","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Airthings.Device\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Device\n"},"filterText":"Device","insertText":"Device","insertTextFormat":2,"kind":22,"label":"Device","labelDetails":{"description":"alias Airthings.Device","detail":"struct"},"sortText":"00000981","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Task.Compiler.Diagnostic\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Diagnostic\nDiagnostic information such as a warning or compilation error.\n"},"filterText":"Diagnostic","insertText":"Diagnostic","insertTextFormat":2,"kind":22,"label":"Diagnostic","labelDetails":{"description":"alias Mix.Task.Compiler.Diagnostic","detail":"struct"},"sortText":"00000982","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Diagnostics\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Diagnostics\n"},"filterText":"Diagnostics","insertText":"Diagnostics","insertTextFormat":2,"kind":9,"label":"Diagnostics","labelDetails":{"description":"alias ElixirLS.LanguageServer.Diagnostics"},"sortText":"00000983","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Formatter.DialyxirVendored\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DialyxirVendored\n"},"filterText":"DialyxirVendored","insertText":"DialyxirVendored","insertTextFormat":2,"kind":9,"label":"DialyxirVendored","labelDetails":{"description":"alias DialyxirVendored.Formatter.DialyxirVendored"},"sortText":"00000984","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Dialyzer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Dialyzer\n"},"filterText":"Dialyzer","insertText":"Dialyzer","insertTextFormat":2,"kind":9,"label":"Dialyzer","labelDetails":{"description":"alias DialyxirVendored.Dialyzer"},"sortText":"00000985","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Formatter.Dialyzer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Dialyzer\n"},"filterText":"Dialyzer","insertText":"Dialyzer","insertTextFormat":2,"kind":9,"label":"Dialyzer","labelDetails":{"description":"alias DialyxirVendored.Formatter.Dialyzer"},"sortText":"00000986","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Dialyzer\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Dialyzer\n"},"filterText":"Dialyzer","insertText":"Dialyzer","insertTextFormat":2,"kind":22,"label":"Dialyzer","labelDetails":{"description":"alias ElixirLS.LanguageServer.Dialyzer","detail":"struct"},"sortText":"00000987","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.Diff\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Diff\n"},"filterText":"Diff","insertText":"Diff","insertTextFormat":2,"kind":22,"label":"Diff","labelDetails":{"description":"alias ExUnit.Diff","detail":"struct"},"sortText":"00000988","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.DigestAuth\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DigestAuth\nDigest access authentication middleware."},"filterText":"DigestAuth","insertText":"DigestAuth","insertTextFormat":2,"kind":9,"label":"DigestAuth","labelDetails":{"description":"alias Tesla.Middleware.DigestAuth"},"sortText":"00000989","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.DocLinks\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DocLinks\nProvides links to hex docs\n"},"filterText":"DocLinks","insertText":"DocLinks","insertTextFormat":2,"kind":9,"label":"DocLinks","labelDetails":{"description":"alias ElixirLS.LanguageServer.DocLinks"},"sortText":"00000990","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.DocTest\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DocTest\nExtract test cases from the documentation."},"filterText":"DocTest","insertText":"DocTest","insertTextFormat":2,"kind":9,"label":"DocTest","labelDetails":{"description":"alias ExUnit.DocTest"},"sortText":"00000991","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Docs\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Docs\nDoc Provider\n"},"filterText":"Docs","insertText":"Docs","insertTextFormat":2,"kind":9,"label":"Docs","labelDetails":{"description":"alias ElixirSense.Providers.Docs"},"sortText":"00000992","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IO.ANSI.Docs\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Docs\n"},"filterText":"Docs","insertText":"Docs","insertTextFormat":2,"kind":9,"label":"Docs","labelDetails":{"description":"alias IO.ANSI.Docs"},"sortText":"00000993","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.DocsSnippets\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DocsSnippets\n"},"filterText":"DocsSnippets","insertText":"DocsSnippets","insertTextFormat":2,"kind":9,"label":"DocsSnippets","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.DocsSnippets"},"sortText":"00000994","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Protocol.DocumentSymbol\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"DocumentSymbol\nCorresponds to the LSP interface of the same name."},"filterText":"DocumentSymbol","insertText":"DocumentSymbol","insertTextFormat":2,"kind":22,"label":"DocumentSymbol","labelDetails":{"description":"alias ElixirLS.LanguageServer.Protocol.DocumentSymbol","detail":"struct"},"sortText":"00000995","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.DocumentSymbols\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"DocumentSymbols\nDocument Symbols provider. Generates and returns the nested `DocumentSymbol` format."},"filterText":"DocumentSymbols","insertText":"DocumentSymbols","insertTextFormat":2,"kind":9,"label":"DocumentSymbols","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.DocumentSymbols"},"sortText":"00000996","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.DuplicateDescribeError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"DuplicateDescribeError\n"},"filterText":"DuplicateDescribeError","insertText":"DuplicateDescribeError","insertTextFormat":2,"kind":22,"label":"DuplicateDescribeError","labelDetails":{"description":"alias ExUnit.DuplicateDescribeError","detail":"exception"},"sortText":"00000997","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.DuplicateTestError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"DuplicateTestError\n"},"filterText":"DuplicateTestError","insertText":"DuplicateTestError","insertTextFormat":2,"kind":22,"label":"DuplicateTestError","labelDetails":{"description":"alias ExUnit.DuplicateTestError","detail":"exception"},"sortText":"00000998","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Plugins.Ecto\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Ecto\n"},"filterText":"Ecto","insertText":"Ecto","insertTextFormat":2,"kind":9,"label":"Ecto","labelDetails":{"description":"alias ElixirSense.Plugins.Ecto"},"sortText":"00000999","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Compilers.Elixir\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Elixir\n"},"filterText":"Elixir","insertText":"Elixir","insertTextFormat":2,"kind":9,"label":"Elixir","labelDetails":{"description":"alias Mix.Compilers.Elixir"},"sortText":"00001000","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Tasks.ElixirLSFormat\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"ElixirLSFormat\nFormats the given files and patterns."},"filterText":"ElixirLSFormat","insertText":"ElixirLSFormat","insertTextFormat":2,"kind":8,"label":"ElixirLSFormat","labelDetails":{"description":"alias Mix.Tasks.ElixirLSFormat","detail":"behaviour"},"sortText":"00001001","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Dep.ElixirSCM\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ElixirSCM\n"},"filterText":"ElixirSCM","insertText":"ElixirSCM","insertTextFormat":2,"kind":9,"label":"ElixirSCM","labelDetails":{"description":"alias Mix.Dep.ElixirSCM"},"sortText":"00001002","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized.Code.ElixirSense\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"ElixirSense\n"},"filterText":"ElixirSense","insertText":"ElixirSense","insertTextFormat":2,"kind":9,"label":"ElixirSense","labelDetails":{"description":"alias ElixirSense.Core.Normalized.Code.ElixirSense","detail":"alias"},"sortText":"00001003","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.ElixirVersionError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"ElixirVersionError\n"},"filterText":"ElixirVersionError","insertText":"ElixirVersionError","insertTextFormat":2,"kind":22,"label":"ElixirVersionError","labelDetails":{"description":"alias Mix.ElixirVersionError","detail":"exception"},"sortText":"00001004","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Constraints.Empty\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Empty\n"},"filterText":"Empty","insertText":"Empty","insertTextFormat":2,"kind":22,"label":"Empty","labelDetails":{"description":"alias Hex.Solver.Constraints.Empty","detail":"struct"},"sortText":"00001005","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Enum.EmptyError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"EmptyError\n"},"filterText":"EmptyError","insertText":"EmptyError","insertTextFormat":2,"kind":22,"label":"EmptyError","labelDetails":{"description":"alias Enum.EmptyError","detail":"exception"},"sortText":"00001006","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.Encode\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Encode\nUtilities for encoding elixir values to JSON.\n"},"filterText":"Encode","insertText":"Encode","insertTextFormat":2,"kind":9,"label":"Encode","labelDetails":{"description":"alias Jason.Encode"},"sortText":"00001007","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Encode\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Encode\nUtilities for encoding elixir values to JSON.\n"},"filterText":"Encode","insertText":"Encode","insertTextFormat":2,"kind":9,"label":"Encode","labelDetails":{"description":"alias JasonV.Encode"},"sortText":"00001008","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.EncodeError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"EncodeError\n"},"filterText":"EncodeError","insertText":"EncodeError","insertTextFormat":2,"kind":22,"label":"EncodeError","labelDetails":{"description":"alias Jason.EncodeError","detail":"exception"},"sortText":"00001009","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.EncodeError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"EncodeError\n"},"filterText":"EncodeError","insertText":"EncodeError","insertTextFormat":2,"kind":22,"label":"EncodeError","labelDetails":{"description":"alias JasonV.EncodeError","detail":"exception"},"sortText":"00001010","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.EncodeFormUrlencoded\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"EncodeFormUrlencoded\n"},"filterText":"EncodeFormUrlencoded","insertText":"EncodeFormUrlencoded","insertTextFormat":2,"kind":9,"label":"EncodeFormUrlencoded","labelDetails":{"description":"alias Tesla.Middleware.EncodeFormUrlencoded"},"sortText":"00001011","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.EncodeJson\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"EncodeJson\nEncodes request body as JSON.\n"},"filterText":"EncodeJson","insertText":"EncodeJson","insertTextFormat":2,"kind":9,"label":"EncodeJson","labelDetails":{"description":"alias Tesla.Middleware.EncodeJson"},"sortText":"00001012","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.Encoder\n"}],"deprecated":false,"detail":"protocol","documentation":{"kind":"markdown","value":"Encoder\nProtocol controlling how a value is encoded to JSON."},"filterText":"Encoder","insertText":"Encoder","insertTextFormat":2,"kind":8,"label":"Encoder","labelDetails":{"description":"alias Jason.Encoder","detail":"protocol"},"sortText":"00001013","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Encoder\n"}],"deprecated":false,"detail":"protocol","documentation":{"kind":"markdown","value":"Encoder\nProtocol controlling how a value is encoded to JSON."},"filterText":"Encoder","insertText":"Encoder","insertTextFormat":2,"kind":8,"label":"Encoder","labelDetails":{"description":"alias JasonV.Encoder","detail":"protocol"},"sortText":"00001014","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Crypto.Encryption\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Encryption\n"},"filterText":"Encryption","insertText":"Encryption","insertTextFormat":2,"kind":9,"label":"Encryption","labelDetails":{"description":"alias Hex.Crypto.Encryption"},"sortText":"00001015","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias EEx.Engine\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Engine\nBasic EEx engine that ships with Elixir."},"filterText":"Engine","insertText":"Engine","insertTextFormat":2,"kind":8,"label":"Engine","labelDetails":{"description":"alias EEx.Engine","detail":"behaviour"},"sortText":"00001016","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.State.Env\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Env\nLine environment\n"},"filterText":"Env","insertText":"Env","insertTextFormat":2,"kind":22,"label":"Env","labelDetails":{"description":"alias ElixirSense.Core.State.Env","detail":"struct"},"sortText":"00001017","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Macro.Env\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Env\nA struct that holds compile time environment information."},"filterText":"Env","insertText":"Env","insertTextFormat":2,"kind":22,"label":"Env","labelDetails":{"description":"alias Macro.Env","detail":"struct"},"sortText":"00001018","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Env\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Env\nThis module defines a `t:Tesla.Env.t/0` struct that stores all data related to request/response."},"filterText":"Env","insertText":"Env","insertTextFormat":2,"kind":22,"label":"Env","labelDetails":{"description":"alias Tesla.Env","detail":"struct"},"sortText":"00001019","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias System.EnvError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"EnvError\n"},"filterText":"EnvError","insertText":"EnvError","insertTextFormat":2,"kind":22,"label":"EnvError","labelDetails":{"description":"alias System.EnvError","detail":"exception"},"sortText":"00001020","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Convert.ErlExpressions\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ErlExpressions\n"},"filterText":"ErlExpressions","insertText":"ErlExpressions","insertTextFormat":2,"kind":9,"label":"ErlExpressions","labelDetails":{"description":"alias Erl2exVendored.Convert.ErlExpressions"},"sortText":"00001021","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Convert.ErlForms\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ErlForms\n"},"filterText":"ErlForms","insertText":"ErlForms","insertTextFormat":2,"kind":9,"label":"ErlForms","labelDetails":{"description":"alias Erl2exVendored.Convert.ErlForms"},"sortText":"00001022","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ErlSyntax\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ErlSyntax\n"},"filterText":"ErlSyntax","insertText":"ErlSyntax","insertTextFormat":2,"kind":9,"label":"ErlSyntax","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ErlSyntax"},"sortText":"00001023","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Compilers.Erlang\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Erlang\n"},"filterText":"Erlang","insertText":"Erlang","insertTextFormat":2,"kind":9,"label":"Erlang","labelDetails":{"description":"alias Mix.Compilers.Erlang"},"sortText":"00001024","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.ErlangHtml\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ErlangHtml\n"},"filterText":"ErlangHtml","insertText":"ErlangHtml","insertTextFormat":2,"kind":9,"label":"ErlangHtml","labelDetails":{"description":"alias ElixirSense.Core.ErlangHtml"},"sortText":"00001025","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.ErlangSourceFile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ErlangSourceFile\n"},"filterText":"ErlangSourceFile","insertText":"ErlangSourceFile","insertTextFormat":2,"kind":9,"label":"ErlangSourceFile","labelDetails":{"description":"alias ElixirLS.LanguageServer.ErlangSourceFile"},"sortText":"00001026","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.DocTest.Error\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"Error\n"},"filterText":"Error","insertText":"Error","insertTextFormat":2,"kind":22,"label":"Error","labelDetails":{"description":"alias ExUnit.DocTest.Error","detail":"exception"},"sortText":"00001027","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias File.Error\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"Error\n"},"filterText":"Error","insertText":"Error","insertTextFormat":2,"kind":22,"label":"Error","labelDetails":{"description":"alias File.Error","detail":"exception"},"sortText":"00001028","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Inspect.Error\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"Error\nRaised when a struct cannot be inspected.\n"},"filterText":"Error","insertText":"Error","insertTextFormat":2,"kind":22,"label":"Error","labelDetails":{"description":"alias Inspect.Error","detail":"exception"},"sortText":"00001029","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Error\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"Error\n"},"filterText":"Error","insertText":"Error","insertTextFormat":2,"kind":22,"label":"Error","labelDetails":{"description":"alias Mix.Error","detail":"exception"},"sortText":"00001030","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.Types.Error\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"Error\n"},"filterText":"Error","insertText":"Error","insertTextFormat":2,"kind":22,"label":"Error","labelDetails":{"description":"alias Module.Types.Error","detail":"exception"},"sortText":"00001031","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Error\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"Error\n"},"filterText":"Error","insertText":"Error","insertTextFormat":2,"kind":22,"label":"Error","labelDetails":{"description":"alias Tesla.Error","detail":"exception"},"sortText":"00001032","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Mock.Error\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"Error\n"},"filterText":"Error","insertText":"Error","insertTextFormat":2,"kind":22,"label":"Error","labelDetails":{"description":"alias Tesla.Mock.Error","detail":"exception"},"sortText":"00001033","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias URI.Error\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"Error\n"},"filterText":"Error","insertText":"Error","insertTextFormat":2,"kind":22,"label":"Error","labelDetails":{"description":"alias URI.Error","detail":"exception"},"sortText":"00001034","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Kernel.ErrorHandler\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ErrorHandler\n"},"filterText":"ErrorHandler","insertText":"ErrorHandler","insertTextFormat":2,"kind":9,"label":"ErrorHandler","labelDetails":{"description":"alias Kernel.ErrorHandler"},"sortText":"00001035","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Eval\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Eval\nProvider responsible for evaluating Elixir expressions.\n"},"filterText":"Eval","insertText":"Eval","insertTextFormat":2,"kind":9,"label":"Eval","labelDetails":{"description":"alias ElixirSense.Providers.Eval"},"sortText":"00001036","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.Evaluator\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Evaluator\n"},"filterText":"Evaluator","insertText":"Evaluator","insertTextFormat":2,"kind":9,"label":"Evaluator","labelDetails":{"description":"alias IEx.Evaluator"},"sortText":"00001037","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.EventManager\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"EventManager\n"},"filterText":"EventManager","insertText":"EventManager","insertTextFormat":2,"kind":9,"label":"EventManager","labelDetails":{"description":"alias ExUnit.EventManager"},"sortText":"00001038","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExAttr\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExAttr\n"},"filterText":"ExAttr","insertText":"ExAttr","insertTextFormat":2,"kind":22,"label":"ExAttr","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExAttr","detail":"struct"},"sortText":"00001039","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExClause\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExClause\n"},"filterText":"ExClause","insertText":"ExClause","insertTextFormat":2,"kind":22,"label":"ExClause","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExClause","detail":"struct"},"sortText":"00001040","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExComment\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExComment\n"},"filterText":"ExComment","insertText":"ExComment","insertTextFormat":2,"kind":22,"label":"ExComment","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExComment","detail":"struct"},"sortText":"00001041","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExDirective\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExDirective\n"},"filterText":"ExDirective","insertText":"ExDirective","insertTextFormat":2,"kind":22,"label":"ExDirective","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExDirective","detail":"struct"},"sortText":"00001042","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExFunc\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExFunc\n"},"filterText":"ExFunc","insertText":"ExFunc","insertTextFormat":2,"kind":22,"label":"ExFunc","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExFunc","detail":"struct"},"sortText":"00001043","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExHeader\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExHeader\n"},"filterText":"ExHeader","insertText":"ExHeader","insertTextFormat":2,"kind":22,"label":"ExHeader","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExHeader","detail":"struct"},"sortText":"00001044","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExImport\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExImport\n"},"filterText":"ExImport","insertText":"ExImport","insertTextFormat":2,"kind":22,"label":"ExImport","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExImport","detail":"struct"},"sortText":"00001045","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExMacro\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExMacro\n"},"filterText":"ExMacro","insertText":"ExMacro","insertTextFormat":2,"kind":22,"label":"ExMacro","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExMacro","detail":"struct"},"sortText":"00001046","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExModule\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExModule\n"},"filterText":"ExModule","insertText":"ExModule","insertTextFormat":2,"kind":22,"label":"ExModule","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExModule","detail":"struct"},"sortText":"00001047","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExRecord\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExRecord\n"},"filterText":"ExRecord","insertText":"ExRecord","insertTextFormat":2,"kind":22,"label":"ExRecord","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExRecord","detail":"struct"},"sortText":"00001048","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExSpec\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExSpec\n"},"filterText":"ExSpec","insertText":"ExSpec","insertTextFormat":2,"kind":22,"label":"ExSpec","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExSpec","detail":"struct"},"sortText":"00001049","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ExType\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ExType\n"},"filterText":"ExType","insertText":"ExType","insertTextFormat":2,"kind":22,"label":"ExType","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ExType","detail":"struct"},"sortText":"00001050","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.ExUnitTestTracer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ExUnitTestTracer\n"},"filterText":"ExUnitTestTracer","insertText":"ExUnitTestTracer","insertTextFormat":2,"kind":9,"label":"ExUnitTestTracer","labelDetails":{"description":"alias ElixirLS.LanguageServer.ExUnitTestTracer"},"sortText":"00001051","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.ExactEquality\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ExactEquality\nThe expression can never evaluate to true."},"filterText":"ExactEquality","insertText":"ExactEquality","insertTextFormat":2,"kind":9,"label":"ExactEquality","labelDetails":{"description":"alias DialyxirVendored.Warnings.ExactEquality"},"sortText":"00001052","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.ExecuteCommand\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"ExecuteCommand\nAdds a @spec annotation to the document when the user clicks on a code lens.\n"},"filterText":"ExecuteCommand","insertText":"ExecuteCommand","insertTextFormat":2,"kind":8,"label":"ExecuteCommand","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.ExecuteCommand","detail":"behaviour"},"sortText":"00001053","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Expand\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Expand\nProvider responsible for code expansion features.\n"},"filterText":"Expand","insertText":"Expand","insertTextFormat":2,"kind":9,"label":"Expand","labelDetails":{"description":"alias ElixirSense.Providers.Expand"},"sortText":"00001054","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.ExecuteCommand.ExpandMacro\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ExpandMacro\nThis module implements a custom command expanding an elixir macro.\nReturns a formatted source fragment.\n"},"filterText":"ExpandMacro","insertText":"ExpandMacro","insertTextFormat":2,"kind":9,"label":"ExpandMacro","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.ExecuteCommand.ExpandMacro"},"sortText":"00001055","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.Types.Expr\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Expr\n"},"filterText":"Expr","insertText":"Expr","insertTextFormat":2,"kind":9,"label":"Expr","labelDetails":{"description":"alias Module.Types.Expr"},"sortText":"00001056","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Convert.ExtForms\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ExtForms\n"},"filterText":"ExtForms","insertText":"ExtForms","insertTextFormat":2,"kind":9,"label":"ExtForms","labelDetails":{"description":"alias Erl2exVendored.Convert.ExtForms"},"sortText":"00001057","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.ExtraRange\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ExtraRange\nThe @spec says the function returns more types than the function\nactually returns."},"filterText":"ExtraRange","insertText":"ExtraRange","insertTextFormat":2,"kind":9,"label":"ExtraRange","labelDetails":{"description":"alias DialyxirVendored.Warnings.ExtraRange"},"sortText":"00001058","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Record.Extractor\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Extractor\n"},"filterText":"Extractor","insertText":"Extractor","insertTextFormat":2,"kind":9,"label":"Extractor","labelDetails":{"description":"alias Record.Extractor"},"sortText":"00001059","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Failure\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Failure\n"},"filterText":"Failure","insertText":"Failure","insertTextFormat":2,"kind":9,"label":"Failure","labelDetails":{"description":"alias Hex.Solver.Failure"},"sortText":"00001060","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.FailuresManifest\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"FailuresManifest\n"},"filterText":"FailuresManifest","insertText":"FailuresManifest","insertTextFormat":2,"kind":9,"label":"FailuresManifest","labelDetails":{"description":"alias ExUnit.FailuresManifest"},"sortText":"00001061","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Dep.Fetcher\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Fetcher\n"},"filterText":"Fetcher","insertText":"Fetcher","insertTextFormat":2,"kind":9,"label":"Fetcher","labelDetails":{"description":"alias Mix.Dep.Fetcher"},"sortText":"00001062","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Results.File\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"File\nErl2exVendored.Results.File defines the result data structure for a particular file.\n"},"filterText":"File","insertText":"File","insertTextFormat":2,"kind":22,"label":"File","labelDetails":{"description":"alias Erl2exVendored.Results.File","detail":"struct"},"sortText":"00001063","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.FilterMap\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"FilterMap\nA counters holding warnings to be skipped."},"filterText":"FilterMap","insertText":"FilterMap","insertTextFormat":2,"kind":22,"label":"FilterMap","labelDetails":{"description":"alias DialyxirVendored.FilterMap","detail":"struct"},"sortText":"00001064","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.Filters\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Filters\nConveniences for parsing and evaluating filters.\n"},"filterText":"Filters","insertText":"Filters","insertTextFormat":2,"kind":9,"label":"Filters","labelDetails":{"description":"alias ExUnit.Filters"},"sortText":"00001065","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.FoldingRange\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"FoldingRange\nA textDocument/foldingRange provider implementation."},"filterText":"FoldingRange","insertText":"FoldingRange","insertTextFormat":2,"kind":9,"label":"FoldingRange","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.FoldingRange"},"sortText":"00001066","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.FollowRedirects\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"FollowRedirects\nFollow HTTP 3xx redirects."},"filterText":"FollowRedirects","insertText":"FollowRedirects","insertTextFormat":2,"kind":9,"label":"FollowRedirects","labelDetails":{"description":"alias Tesla.Middleware.FollowRedirects"},"sortText":"00001067","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.FormUrlencoded\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"FormUrlencoded\nSend request body as `application/x-www-form-urlencoded`."},"filterText":"FormUrlencoded","insertText":"FormUrlencoded","insertTextFormat":2,"kind":9,"label":"FormUrlencoded","labelDetails":{"description":"alias Tesla.Middleware.FormUrlencoded"},"sortText":"00001068","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Tasks.Format\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Format\nFormats the given files and patterns."},"filterText":"Format","insertText":"Format","insertTextFormat":2,"kind":8,"label":"Format","labelDetails":{"description":"alias Mix.Tasks.Format","detail":"behaviour"},"sortText":"00001069","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Code.Formatter\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Formatter\n"},"filterText":"Formatter","insertText":"Formatter","insertTextFormat":2,"kind":9,"label":"Formatter","labelDetails":{"description":"alias Code.Formatter"},"sortText":"00001070","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Formatter\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Formatter\nElixir-friendly dialyzer formatter."},"filterText":"Formatter","insertText":"Formatter","insertTextFormat":2,"kind":8,"label":"Formatter","labelDetails":{"description":"alias DialyxirVendored.Formatter","detail":"behaviour"},"sortText":"00001071","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized.Code.ElixirSense.Formatter\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Formatter\n"},"filterText":"Formatter","insertText":"Formatter","insertTextFormat":2,"kind":9,"label":"Formatter","labelDetails":{"description":"alias ElixirSense.Core.Normalized.Code.ElixirSense.Formatter"},"sortText":"00001072","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized.Code.Formatter\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Formatter\n"},"filterText":"Formatter","insertText":"Formatter","insertTextFormat":2,"kind":9,"label":"Formatter","labelDetails":{"description":"alias ElixirSense.Core.Normalized.Code.Formatter"},"sortText":"00001073","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.Formatter\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Formatter\nHelper functions for formatting and the formatting protocols."},"filterText":"Formatter","insertText":"Formatter","insertTextFormat":2,"kind":9,"label":"Formatter","labelDetails":{"description":"alias ExUnit.Formatter"},"sortText":"00001074","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.Formatter\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Formatter\nPretty-printing and minimizing functions for JSON-encoded data."},"filterText":"Formatter","insertText":"Formatter","insertTextFormat":2,"kind":9,"label":"Formatter","labelDetails":{"description":"alias Jason.Formatter"},"sortText":"00001075","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Formatter\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Formatter\nPretty-printing and minimizing functions for JSON-encoded data."},"filterText":"Formatter","insertText":"Formatter","insertTextFormat":2,"kind":9,"label":"Formatter","labelDetails":{"description":"alias JasonV.Formatter"},"sortText":"00001076","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Formatter\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Formatter\nConveniences and built-in formatter for logs."},"filterText":"Formatter","insertText":"Formatter","insertTextFormat":2,"kind":22,"label":"Formatter","labelDetails":{"description":"alias Logger.Formatter","detail":"struct"},"sortText":"00001077","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.Logger.Formatter\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Formatter\n"},"filterText":"Formatter","insertText":"Formatter","insertTextFormat":2,"kind":9,"label":"Formatter","labelDetails":{"description":"alias Tesla.Middleware.Logger.Formatter"},"sortText":"00001078","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.Formatting\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Formatting\n"},"filterText":"Formatting","insertText":"Formatting","insertTextFormat":2,"kind":9,"label":"Formatting","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.Formatting"},"sortText":"00001079","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Code.Fragment\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Fragment\nThis module provides conveniences for analyzing fragments of\ntextual code and extract available information whenever possible."},"filterText":"Fragment","insertText":"Fragment","insertTextFormat":2,"kind":9,"label":"Fragment","labelDetails":{"description":"alias Code.Fragment"},"sortText":"00001080","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized.Code.ElixirSense.Fragment\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Fragment\nThis module provides conveniences for analyzing fragments of\ntextual code and extract available information whenever possible."},"filterText":"Fragment","insertText":"Fragment","insertTextFormat":2,"kind":9,"label":"Fragment","labelDetails":{"description":"alias ElixirSense.Core.Normalized.Code.ElixirSense.Fragment"},"sortText":"00001081","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized.Code.Fragment\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Fragment\n"},"filterText":"Fragment","insertText":"Fragment","insertTextFormat":2,"kind":9,"label":"Fragment","labelDetails":{"description":"alias ElixirSense.Core.Normalized.Code.Fragment"},"sortText":"00001082","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.Fragment\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Fragment\nProvides a way to inject an already-encoded JSON structure into a\nto-be-encoded structure in optimized fashion."},"filterText":"Fragment","insertText":"Fragment","insertTextFormat":2,"kind":22,"label":"Fragment","labelDetails":{"description":"alias Jason.Fragment","detail":"struct"},"sortText":"00001083","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Fragment\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Fragment\n"},"filterText":"Fragment","insertText":"Fragment","insertTextFormat":2,"kind":22,"label":"Fragment","labelDetails":{"description":"alias JasonV.Fragment","detail":"struct"},"sortText":"00001084","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.FunctionApplicationArguments\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"FunctionApplicationArguments\n"},"filterText":"FunctionApplicationArguments","insertText":"FunctionApplicationArguments","insertTextFormat":2,"kind":9,"label":"FunctionApplicationArguments","labelDetails":{"description":"alias DialyxirVendored.Warnings.FunctionApplicationArguments"},"sortText":"00001085","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.FunctionApplicationNoFunction\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"FunctionApplicationNoFunction\nThe function being invoked exists, but has an arity mismatch."},"filterText":"FunctionApplicationNoFunction","insertText":"FunctionApplicationNoFunction","insertTextFormat":2,"kind":9,"label":"FunctionApplicationNoFunction","labelDetails":{"description":"alias DialyxirVendored.Warnings.FunctionApplicationNoFunction"},"sortText":"00001086","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Generator\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Generator\nConveniences for working with paths and generating content.\n"},"filterText":"Generator","insertText":"Generator","insertTextFormat":2,"kind":9,"label":"Generator","labelDetails":{"description":"alias Mix.Generator"},"sortText":"00001087","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.GenericReducer\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"GenericReducer\nA generic behaviour for reducers that customize suggestions\naccording to the cursor's position in a function call.\n"},"filterText":"GenericReducer","insertText":"GenericReducer","insertTextFormat":2,"kind":8,"label":"GenericReducer","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.GenericReducer","detail":"behaviour"},"sortText":"00001088","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.ExecuteCommand.GetExUnitTestsInFile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"GetExUnitTestsInFile\n"},"filterText":"GetExUnitTestsInFile","insertText":"GetExUnitTestsInFile","insertTextFormat":2,"kind":9,"label":"GetExUnitTestsInFile","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.ExecuteCommand.GetExUnitTestsInFile"},"sortText":"00001089","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.SCM.Git\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Git\n"},"filterText":"Git","insertText":"Git","insertTextFormat":2,"kind":9,"label":"Git","labelDetails":{"description":"alias Mix.SCM.Git"},"sortText":"00001090","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Formatter.Github\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Github\n"},"filterText":"Github","insertText":"Github","insertTextFormat":2,"kind":9,"label":"Github","labelDetails":{"description":"alias DialyxirVendored.Formatter.Github"},"sortText":"00001091","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.GuardFail\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"GuardFail\nThe function guard either presents an impossible guard or the only\ncalls will never succeed against the guards."},"filterText":"GuardFail","insertText":"GuardFail","insertTextFormat":2,"kind":9,"label":"GuardFail","labelDetails":{"description":"alias DialyxirVendored.Warnings.GuardFail"},"sortText":"00001092","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.GuardFailPattern\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"GuardFailPattern\nThe clause guard describes a condition of literals that fails the pattern\ngiven in the function head."},"filterText":"GuardFailPattern","insertText":"GuardFailPattern","insertTextFormat":2,"kind":9,"label":"GuardFailPattern","labelDetails":{"description":"alias DialyxirVendored.Warnings.GuardFailPattern"},"sortText":"00001093","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.HTTP\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"HTTP\n"},"filterText":"HTTP","insertText":"HTTP","insertTextFormat":2,"kind":9,"label":"HTTP","labelDetails":{"description":"alias Hex.HTTP"},"sortText":"00001094","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Adapter.Hackney\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Hackney\nAdapter for [hackney](https://github.com/benoitc/hackney)."},"filterText":"Hackney","insertText":"Hackney","insertTextFormat":2,"kind":9,"label":"Hackney","labelDetails":{"description":"alias Tesla.Adapter.Hackney"},"sortText":"00001095","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Backends.Handler\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Handler\n"},"filterText":"Handler","insertText":"Handler","insertTextFormat":2,"kind":9,"label":"Handler","labelDetails":{"description":"alias Logger.Backends.Handler"},"sortText":"00001096","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Convert.Headers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Headers\n"},"filterText":"Headers","insertText":"Headers","insertTextFormat":2,"kind":9,"label":"Headers","labelDetails":{"description":"alias Erl2exVendored.Convert.Headers"},"sortText":"00001097","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.Headers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Headers\nSet default headers for all requests"},"filterText":"Headers","insertText":"Headers","insertTextFormat":2,"kind":9,"label":"Headers","labelDetails":{"description":"alias Tesla.Middleware.Headers"},"sortText":"00001098","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.FoldingRange.Helpers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Helpers\n"},"filterText":"Helpers","insertText":"Helpers","insertTextFormat":2,"kind":9,"label":"Helpers","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.FoldingRange.Helpers"},"sortText":"00001099","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.Helpers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Helpers\nWelcome to Interactive Elixir. You are currently\nseeing the documentation for the module `IEx.Helpers`\nwhich provides many helpers to make Elixir's shell\nmore joyful to work with."},"filterText":"Helpers","insertText":"Helpers","insertTextFormat":2,"kind":9,"label":"Helpers","labelDetails":{"description":"alias IEx.Helpers"},"sortText":"00001100","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.Helpers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Helpers\nProvides macro facilities for partial compile-time encoding of JSON.\n"},"filterText":"Helpers","insertText":"Helpers","insertTextFormat":2,"kind":9,"label":"Helpers","labelDetails":{"description":"alias Jason.Helpers"},"sortText":"00001101","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Helpers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Helpers\nProvides macro facilities for partial compile-time encoding of JSON.\n"},"filterText":"Helpers","insertText":"Helpers","insertTextFormat":2,"kind":9,"label":"Helpers","labelDetails":{"description":"alias JasonV.Helpers"},"sortText":"00001102","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.Types.Helpers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Helpers\n"},"filterText":"Helpers","insertText":"Helpers","insertTextFormat":2,"kind":9,"label":"Helpers","labelDetails":{"description":"alias Module.Types.Helpers"},"sortText":"00001103","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Hex\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Hex\n"},"filterText":"Hex","insertText":"Hex","insertTextFormat":2,"kind":9,"label":"Hex","labelDetails":{"description":"alias Mix.Hex"},"sortText":"00001104","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.History\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"History\n"},"filterText":"History","insertText":"History","insertTextFormat":2,"kind":22,"label":"History","labelDetails":{"description":"alias IEx.History","detail":"struct"},"sortText":"00001105","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.Hover\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Hover\nHover provider utilizing Elixir Sense\n"},"filterText":"Hover","insertText":"Hover","insertTextFormat":2,"kind":9,"label":"Hover","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.Hover"},"sortText":"00001106","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Adapter.Httpc\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Httpc\nAdapter for [httpc](http://erlang.org/doc/man/httpc.html)."},"filterText":"Httpc","insertText":"Httpc","insertTextFormat":2,"kind":9,"label":"Httpc","labelDetails":{"description":"alias Tesla.Adapter.Httpc"},"sortText":"00001107","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Shell.IO\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"IO\nThis is Mix's default shell."},"filterText":"IO","insertText":"IO","insertTextFormat":2,"kind":9,"label":"IO","labelDetails":{"description":"alias Mix.Shell.IO"},"sortText":"00001108","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Calendar.ISO\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ISO\nThe default calendar implementation, a Gregorian calendar following ISO 8601."},"filterText":"ISO","insertText":"ISO","insertTextFormat":2,"kind":9,"label":"ISO","labelDetails":{"description":"alias Calendar.ISO"},"sortText":"00001109","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Code.Identifier\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Identifier\n"},"filterText":"Identifier","insertText":"Identifier","insertTextFormat":2,"kind":9,"label":"Identifier","labelDetails":{"description":"alias Code.Identifier"},"sortText":"00001110","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Formatter.IgnoreFile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"IgnoreFile\n"},"filterText":"IgnoreFile","insertText":"IgnoreFile","insertTextFormat":2,"kind":9,"label":"IgnoreFile","labelDetails":{"description":"alias DialyxirVendored.Formatter.IgnoreFile"},"sortText":"00001111","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Formatter.IgnoreFileStrict\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"IgnoreFileStrict\n"},"filterText":"IgnoreFileStrict","insertText":"IgnoreFileStrict","insertTextFormat":2,"kind":9,"label":"IgnoreFileStrict","labelDetails":{"description":"alias DialyxirVendored.Formatter.IgnoreFileStrict"},"sortText":"00001112","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Constraints.Impl\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Impl\n"},"filterText":"Impl","insertText":"Impl","insertTextFormat":2,"kind":9,"label":"Impl","labelDetails":{"description":"alias Hex.Solver.Constraints.Impl"},"sortText":"00001113","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.Implementation\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Implementation\nGo-to-implementation provider utilizing Elixir Sense\n"},"filterText":"Implementation","insertText":"Implementation","insertTextFormat":2,"kind":9,"label":"Implementation","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.Implementation"},"sortText":"00001114","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Implementation\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Implementation\nProvides a function to find out where symbols are implemented.\n"},"filterText":"Implementation","insertText":"Implementation","insertTextFormat":2,"kind":9,"label":"Implementation","labelDetails":{"description":"alias ElixirSense.Providers.Implementation"},"sortText":"00001115","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.ImproperListConstruction\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ImproperListConstruction\n"},"filterText":"ImproperListConstruction","insertText":"ImproperListConstruction","insertTextFormat":2,"kind":9,"label":"ImproperListConstruction","labelDetails":{"description":"alias DialyxirVendored.Warnings.ImproperListConstruction"},"sortText":"00001116","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Incompatibility\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Incompatibility\n"},"filterText":"Incompatibility","insertText":"Incompatibility","insertTextFormat":2,"kind":22,"label":"Incompatibility","labelDetails":{"description":"alias Hex.Solver.Incompatibility","detail":"struct"},"sortText":"00001117","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.FoldingRange.Indentation\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Indentation\nCode folding based on indentation level"},"filterText":"Indentation","insertText":"Indentation","insertTextFormat":2,"kind":9,"label":"Indentation","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.FoldingRange.Indentation"},"sortText":"00001118","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.DocumentSymbols.Info\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Info\n"},"filterText":"Info","insertText":"Info","insertTextFormat":2,"kind":22,"label":"Info","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.DocumentSymbols.Info","detail":"struct"},"sortText":"00001119","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.Info\n"}],"deprecated":false,"detail":"protocol","documentation":{"kind":"markdown","value":"Info\nA protocol to print information in IEx about the given datastructure."},"filterText":"Info","insertText":"Info","insertTextFormat":2,"kind":8,"label":"Info","labelDetails":{"description":"alias IEx.Info","detail":"protocol"},"sortText":"00001120","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.InlineIncludes\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"InlineIncludes\n"},"filterText":"InlineIncludes","insertText":"InlineIncludes","insertTextFormat":2,"kind":9,"label":"InlineIncludes","labelDetails":{"description":"alias Erl2exVendored.Pipeline.InlineIncludes"},"sortText":"00001121","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Installer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Installer\n"},"filterText":"Installer","insertText":"Installer","insertTextFormat":2,"kind":9,"label":"Installer","labelDetails":{"description":"alias ElixirLS.Installer"},"sortText":"00001122","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Local.Installer\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Installer\n"},"filterText":"Installer","insertText":"Installer","insertTextFormat":2,"kind":8,"label":"Installer","labelDetails":{"description":"alias Mix.Local.Installer","detail":"behaviour"},"sortText":"00001123","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Backends.Internal\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Internal\n"},"filterText":"Internal","insertText":"Internal","insertTextFormat":2,"kind":9,"label":"Internal","labelDetails":{"description":"alias Logger.Backends.Internal"},"sortText":"00001124","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Introspection\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Introspection\nA collection of functions to introspect/format docs, specs, types and callbacks.\n"},"filterText":"Introspection","insertText":"Introspection","insertTextFormat":2,"kind":9,"label":"Introspection","labelDetails":{"description":"alias ElixirSense.Core.Introspection"},"sortText":"00001125","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.Introspection\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Introspection\n"},"filterText":"Introspection","insertText":"Introspection","insertTextFormat":2,"kind":9,"label":"Introspection","labelDetails":{"description":"alias IEx.Introspection"},"sortText":"00001126","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.InvalidContract\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"InvalidContract\nThe @spec for the function does not match the success typing of the\nfunction."},"filterText":"InvalidContract","insertText":"InvalidContract","insertTextFormat":2,"kind":9,"label":"InvalidContract","labelDetails":{"description":"alias DialyxirVendored.Warnings.InvalidContract"},"sortText":"00001127","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Server.InvalidParamError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"InvalidParamError\n"},"filterText":"InvalidParamError","insertText":"InvalidParamError","insertTextFormat":2,"kind":22,"label":"InvalidParamError","labelDetails":{"description":"alias ElixirLS.LanguageServer.Server.InvalidParamError","detail":"exception"},"sortText":"00001128","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Version.InvalidRequirementError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"InvalidRequirementError\n"},"filterText":"InvalidRequirementError","insertText":"InvalidRequirementError","insertTextFormat":2,"kind":22,"label":"InvalidRequirementError","labelDetails":{"description":"alias Version.InvalidRequirementError","detail":"exception"},"sortText":"00001129","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.InvalidTaskError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"InvalidTaskError\n"},"filterText":"InvalidTaskError","insertText":"InvalidTaskError","insertTextFormat":2,"kind":22,"label":"InvalidTaskError","labelDetails":{"description":"alias Mix.InvalidTaskError","detail":"exception"},"sortText":"00001130","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Version.InvalidVersionError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"InvalidVersionError\n"},"filterText":"InvalidVersionError","insertText":"InvalidVersionError","insertTextFormat":2,"kind":22,"label":"InvalidVersionError","labelDetails":{"description":"alias Version.InvalidVersionError","detail":"exception"},"sortText":"00001131","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.JSON\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"JSON\nEncode requests and decode responses as JSON."},"filterText":"JSON","insertText":"JSON","insertTextFormat":2,"kind":9,"label":"JSON","labelDetails":{"description":"alias Tesla.Middleware.JSON"},"sortText":"00001132","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.JsonRpc\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"JsonRpc\nMacros and functions for JSON RPC"},"filterText":"JsonRpc","insertText":"JsonRpc","insertTextFormat":2,"kind":22,"label":"JsonRpc","labelDetails":{"description":"alias ElixirLS.LanguageServer.JsonRpc","detail":"struct"},"sortText":"00001133","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Backends.JsonRpc\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"JsonRpc\nA logger backend that logs messages by sending them via LSP ‘window/logMessage’."},"filterText":"JsonRpc","insertText":"JsonRpc","insertTextFormat":2,"kind":22,"label":"JsonRpc","labelDetails":{"description":"alias Logger.Backends.JsonRpc","detail":"struct"},"sortText":"00001134","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.KeepRequest\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"KeepRequest\nStore request url ,body and headers into `:opts`."},"filterText":"KeepRequest","insertText":"KeepRequest","insertTextFormat":2,"kind":9,"label":"KeepRequest","labelDetails":{"description":"alias Tesla.Middleware.KeepRequest"},"sortText":"00001135","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API.Key\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Key\n"},"filterText":"Key","insertText":"Key","insertTextFormat":2,"kind":9,"label":"Key","labelDetails":{"description":"alias Hex.API.Key"},"sortText":"00001136","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Crypto.KeyManager\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"KeyManager\n"},"filterText":"KeyManager","insertText":"KeyManager","insertTextFormat":2,"kind":22,"label":"KeyManager","labelDetails":{"description":"alias Hex.Crypto.KeyManager","detail":"struct"},"sortText":"00001137","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"LanguageServer\nImplementation of Language Server Protocol for Elixir\n"},"filterText":"LanguageServer","insertText":"LanguageServer","insertTextFormat":2,"kind":9,"label":"LanguageServer","labelDetails":{"description":"alias ElixirLS.LanguageServer"},"sortText":"00001138","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Utils.Launch\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Launch\n"},"filterText":"Launch","insertText":"Launch","insertTextFormat":2,"kind":9,"label":"Launch","labelDetails":{"description":"alias ElixirLS.Utils.Launch"},"sortText":"00001139","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Kernel.LexicalTracker\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"LexicalTracker\n"},"filterText":"LexicalTracker","insertText":"LexicalTracker","insertTextFormat":2,"kind":9,"label":"LexicalTracker","labelDetails":{"description":"alias Kernel.LexicalTracker"},"sortText":"00001140","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.FoldingRange.Line\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Line\nFoldingRange helpers for lines.\n"},"filterText":"Line","insertText":"Line","insertTextFormat":2,"kind":9,"label":"Line","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.FoldingRange.Line"},"sortText":"00001141","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias File.LinkError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"LinkError\n"},"filterText":"LinkError","insertText":"LinkError","insertTextFormat":2,"kind":22,"label":"LinkError","labelDetails":{"description":"alias File.LinkError","detail":"exception"},"sortText":"00001142","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Code.LoadError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"LoadError\n"},"filterText":"LoadError","insertText":"LoadError","insertTextFormat":2,"kind":22,"label":"LoadError","labelDetails":{"description":"alias Code.LoadError","detail":"exception"},"sortText":"00001143","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Dep.Loader\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Loader\n"},"filterText":"Loader","insertText":"Loader","insertTextFormat":2,"kind":9,"label":"Loader","labelDetails":{"description":"alias Mix.Dep.Loader"},"sortText":"00001144","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Local\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Local\n"},"filterText":"Local","insertText":"Local","insertTextFormat":2,"kind":9,"label":"Local","labelDetails":{"description":"alias Mix.Local"},"sortText":"00001145","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.LocalsTracker\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"LocalsTracker\n"},"filterText":"LocalsTracker","insertText":"LocalsTracker","insertTextFormat":2,"kind":9,"label":"LocalsTracker","labelDetails":{"description":"alias Module.LocalsTracker"},"sortText":"00001146","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Airthings.Location\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Location\n"},"filterText":"Location","insertText":"Location","insertTextFormat":2,"kind":22,"label":"Location","labelDetails":{"description":"alias Airthings.Location","detail":"struct"},"sortText":"00001147","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Protocol.Location\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Location\nCorresponds to the LSP interface of the same name."},"filterText":"Location","insertText":"Location","insertTextFormat":2,"kind":22,"label":"Location","labelDetails":{"description":"alias ElixirLS.LanguageServer.Protocol.Location","detail":"struct"},"sortText":"00001148","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Location\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Location\nA location in a source file or buffer\n"},"filterText":"Location","insertText":"Location","insertTextFormat":2,"kind":22,"label":"Location","labelDetails":{"description":"alias ElixirSense.Location","detail":"struct"},"sortText":"00001149","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Dep.Lock\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Lock\n"},"filterText":"Lock","insertText":"Lock","insertTextFormat":2,"kind":9,"label":"Lock","labelDetails":{"description":"alias Mix.Dep.Lock"},"sortText":"00001150","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Log\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Log\nA simple logger for the project that allows it to be muted via application config\n"},"filterText":"Log","insertText":"Log","insertTextFormat":2,"kind":9,"label":"Log","labelDetails":{"description":"alias ElixirSense.Log"},"sortText":"00001151","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.Logger\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Logger\nLog requests using Elixir's Logger."},"filterText":"Logger","insertText":"Logger","insertTextFormat":2,"kind":9,"label":"Logger","labelDetails":{"description":"alias Tesla.Middleware.Logger"},"sortText":"00001152","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ModuleData.MacroData\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"MacroData\n"},"filterText":"MacroData","insertText":"MacroData","insertTextFormat":2,"kind":22,"label":"MacroData","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ModuleData.MacroData","detail":"struct"},"sortText":"00001153","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.MacroExpander\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MacroExpander\n"},"filterText":"MacroExpander","insertText":"MacroExpander","insertTextFormat":2,"kind":9,"label":"MacroExpander","labelDetails":{"description":"alias ElixirSense.Core.MacroExpander"},"sortText":"00001154","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Dialyzer.Manifest\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Manifest\n"},"filterText":"Manifest","insertText":"Manifest","insertTextFormat":2,"kind":9,"label":"Manifest","labelDetails":{"description":"alias ElixirLS.LanguageServer.Dialyzer.Manifest"},"sortText":"00001155","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.ExecuteCommand.ManipulatePipes\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ManipulatePipes\nThis module implements a custom command for converting function calls\nto pipe operators and pipes to function calls."},"filterText":"ManipulatePipes","insertText":"ManipulatePipes","insertTextFormat":2,"kind":9,"label":"ManipulatePipes","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.ExecuteCommand.ManipulatePipes"},"sortText":"00001156","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.MapUpdate\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MapUpdate\nElixir can only use the map update syntax to update a key that is in\nthe map."},"filterText":"MapUpdate","insertText":"MapUpdate","insertTextFormat":2,"kind":9,"label":"MapUpdate","labelDetails":{"description":"alias DialyxirVendored.Warnings.MapUpdate"},"sortText":"00001157","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.MarkdownUtils\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MarkdownUtils\n"},"filterText":"MarkdownUtils","insertText":"MarkdownUtils","insertTextFormat":2,"kind":9,"label":"MarkdownUtils","labelDetails":{"description":"alias ElixirLS.LanguageServer.MarkdownUtils"},"sortText":"00001158","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Matcher\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Matcher\n## Suggestion Matching\n"},"filterText":"Matcher","insertText":"Matcher","insertTextFormat":2,"kind":9,"label":"Matcher","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Matcher"},"sortText":"00001159","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Metadata\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Metadata\nCore Metadata\n"},"filterText":"Metadata","insertText":"Metadata","insertTextFormat":2,"kind":22,"label":"Metadata","labelDetails":{"description":"alias ElixirSense.Core.Metadata","detail":"struct"},"sortText":"00001160","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.MetadataBuilder\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MetadataBuilder\nThis module is responsible for building/retrieving environment information from an AST.\n"},"filterText":"MetadataBuilder","insertText":"MetadataBuilder","insertTextFormat":2,"kind":9,"label":"MetadataBuilder","labelDetails":{"description":"alias ElixirSense.Core.MetadataBuilder"},"sortText":"00001161","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.MethodOverride\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MethodOverride\nMiddleware that adds `X-HTTP-Method-Override` header with original request\nmethod and sends the request as post."},"filterText":"MethodOverride","insertText":"MethodOverride","insertTextFormat":2,"kind":9,"label":"MethodOverride","labelDetails":{"description":"alias Tesla.Middleware.MethodOverride"},"sortText":"00001162","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Middleware\nThe middleware specification."},"filterText":"Middleware","insertText":"Middleware","insertTextFormat":2,"kind":8,"label":"Middleware","labelDetails":{"description":"alias Tesla.Middleware","detail":"behaviour"},"sortText":"00001163","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Utils.MinimumVersion\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MinimumVersion\n"},"filterText":"MinimumVersion","insertText":"MinimumVersion","insertTextFormat":2,"kind":9,"label":"MinimumVersion","labelDetails":{"description":"alias ElixirLS.Utils.MinimumVersion"},"sortText":"00001164","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.MissingRange\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MissingRange\nFunction spec declares a list of types, but function returns value\noutside stated range."},"filterText":"MissingRange","insertText":"MissingRange","insertTextFormat":2,"kind":9,"label":"MissingRange","labelDetails":{"description":"alias DialyxirVendored.Warnings.MissingRange"},"sortText":"00001165","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Mix\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mix\n"},"filterText":"Mix","insertText":"Mix","insertTextFormat":2,"kind":9,"label":"Mix","labelDetails":{"description":"alias ElixirLS.Mix"},"sortText":"00001166","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Mix\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mix\n"},"filterText":"Mix","insertText":"Mix","insertTextFormat":2,"kind":9,"label":"Mix","labelDetails":{"description":"alias Hex.Mix"},"sortText":"00001167","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.ExecuteCommand.MixClean\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MixClean\n"},"filterText":"MixClean","insertText":"MixClean","insertTextFormat":2,"kind":9,"label":"MixClean","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.ExecuteCommand.MixClean"},"sortText":"00001168","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Airthings.MixProject\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MixProject\n"},"filterText":"MixProject","insertText":"MixProject","insertTextFormat":2,"kind":9,"label":"MixProject","labelDetails":{"description":"alias Airthings.MixProject"},"sortText":"00001169","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.MixProject\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MixProject\nThis module serves as a caching layer guarantying a safe access to Mix.Project functions. Note that\nMix.Project functions cannot be safely called during a build as dep mix projects are being pushed and\npopped\n"},"filterText":"MixProject","insertText":"MixProject","insertTextFormat":2,"kind":9,"label":"MixProject","labelDetails":{"description":"alias ElixirLS.LanguageServer.MixProject"},"sortText":"00001170","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.MixProject\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MixProject\n"},"filterText":"MixProject","insertText":"MixProject","insertTextFormat":2,"kind":9,"label":"MixProject","labelDetails":{"description":"alias ElixirSense.MixProject"},"sortText":"00001171","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ErlexVendored.MixProject\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MixProject\n"},"filterText":"MixProject","insertText":"MixProject","insertTextFormat":2,"kind":9,"label":"MixProject","labelDetails":{"description":"alias ErlexVendored.MixProject"},"sortText":"00001172","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias PathGlobVendored.MixProject\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MixProject\n"},"filterText":"MixProject","insertText":"MixProject","insertTextFormat":2,"kind":9,"label":"MixProject","labelDetails":{"description":"alias PathGlobVendored.MixProject"},"sortText":"00001173","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.MixShell\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MixShell\nSome Mix tasks such as Hex will use the `yes?/1` function to\nprompt the user. This module turns those prompts into JSON RPC\nrequests that will show a prompt in the IDE.\n"},"filterText":"MixShell","insertText":"MixShell","insertTextFormat":2,"kind":9,"label":"MixShell","labelDetails":{"description":"alias ElixirLS.LanguageServer.MixShell"},"sortText":"00001174","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Mixfile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mixfile\n"},"filterText":"Mixfile","insertText":"Mixfile","insertTextFormat":2,"kind":9,"label":"Mixfile","labelDetails":{"description":"alias DialyxirVendored.Mixfile"},"sortText":"00001175","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Debugger.Mixfile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mixfile\n"},"filterText":"Mixfile","insertText":"Mixfile","insertTextFormat":2,"kind":9,"label":"Mixfile","labelDetails":{"description":"alias ElixirLS.Debugger.Mixfile"},"sortText":"00001176","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Mixfile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mixfile\n"},"filterText":"Mixfile","insertText":"Mixfile","insertTextFormat":2,"kind":9,"label":"Mixfile","labelDetails":{"description":"alias ElixirLS.LanguageServer.Mixfile"},"sortText":"00001177","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Mixfile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mixfile\n"},"filterText":"Mixfile","insertText":"Mixfile","insertTextFormat":2,"kind":9,"label":"Mixfile","labelDetails":{"description":"alias ElixirLS.Mixfile"},"sortText":"00001178","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Utils.Mixfile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mixfile\n"},"filterText":"Mixfile","insertText":"Mixfile","insertTextFormat":2,"kind":9,"label":"Mixfile","labelDetails":{"description":"alias ElixirLS.Utils.Mixfile"},"sortText":"00001179","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Mixfile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mixfile\n"},"filterText":"Mixfile","insertText":"Mixfile","insertTextFormat":2,"kind":9,"label":"Mixfile","labelDetails":{"description":"alias Erl2exVendored.Mixfile"},"sortText":"00001180","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Mixfile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mixfile\n"},"filterText":"Mixfile","insertText":"Mixfile","insertTextFormat":2,"kind":9,"label":"Mixfile","labelDetails":{"description":"alias JasonV.Mixfile"},"sortText":"00001181","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias MixTaskArchiveDeps.Mixfile\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mixfile\n"},"filterText":"Mixfile","insertText":"Mixfile","insertTextFormat":2,"kind":9,"label":"Mixfile","labelDetails":{"description":"alias MixTaskArchiveDeps.Mixfile"},"sortText":"00001182","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Utils.MixfileHelpers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"MixfileHelpers\n"},"filterText":"MixfileHelpers","insertText":"MixfileHelpers","insertTextFormat":2,"kind":9,"label":"MixfileHelpers","labelDetails":{"description":"alias ElixirLS.Utils.MixfileHelpers"},"sortText":"00001183","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Mock\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Mock\nMock adapter for better testing."},"filterText":"Mock","insertText":"Mock","insertTextFormat":2,"kind":9,"label":"Mock","labelDetails":{"description":"alias Tesla.Mock"},"sortText":"00001184","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.State.ModFunInfo\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ModFunInfo\nModule or function info\n"},"filterText":"ModFunInfo","insertText":"ModFunInfo","insertTextFormat":2,"kind":22,"label":"ModFunInfo","labelDetails":{"description":"alias ElixirSense.Core.State.ModFunInfo","detail":"struct"},"sortText":"00001185","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ModuleData\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ModuleData\n"},"filterText":"ModuleData","insertText":"ModuleData","insertTextFormat":2,"kind":22,"label":"ModuleData","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ModuleData","detail":"struct"},"sortText":"00001186","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.ModuleStore\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"ModuleStore\nCaches the module list and a list of modules keyed by the behaviour they implement.\n"},"filterText":"ModuleStore","insertText":"ModuleStore","insertTextFormat":2,"kind":22,"label":"ModuleStore","labelDetails":{"description":"alias ElixirSense.Core.ModuleStore","detail":"struct"},"sortText":"00001187","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.MultiError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"MultiError\nRaised to signal multiple errors happened in a test case.\n"},"filterText":"MultiError","insertText":"MultiError","insertTextFormat":2,"kind":22,"label":"MultiError","labelDetails":{"description":"alias ExUnit.MultiError","detail":"exception"},"sortText":"00001188","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Multipart\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Multipart\nMultipart functionality."},"filterText":"Multipart","insertText":"Multipart","insertTextFormat":2,"kind":22,"label":"Multipart","labelDetails":{"description":"alias Tesla.Multipart","detail":"struct"},"sortText":"00001189","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.Names\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Names\n"},"filterText":"Names","insertText":"Names","insertTextFormat":2,"kind":9,"label":"Names","labelDetails":{"description":"alias Erl2exVendored.Pipeline.Names"},"sortText":"00001190","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.NegativeGuardFail\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"NegativeGuardFail\nThe function guard either presents an impossible guard or the only\ncalls will never succeed against the guards."},"filterText":"NegativeGuardFail","insertText":"NegativeGuardFail","insertTextFormat":2,"kind":9,"label":"NegativeGuardFail","labelDetails":{"description":"alias DialyxirVendored.Warnings.NegativeGuardFail"},"sortText":"00001191","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Netrc\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Netrc\n"},"filterText":"Netrc","insertText":"Netrc","insertTextFormat":2,"kind":9,"label":"Netrc","labelDetails":{"description":"alias Hex.Netrc"},"sortText":"00001192","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.NoProjectError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"NoProjectError\n"},"filterText":"NoProjectError","insertText":"NoProjectError","insertTextFormat":2,"kind":22,"label":"NoProjectError","labelDetails":{"description":"alias Mix.NoProjectError","detail":"exception"},"sortText":"00001193","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.NoReturn\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"NoReturn\nThe function has no return. This is usually due to an issue later on\nin the call stack causing it to not be recognized as returning for\nsome reason. It is often helpful to cross reference the complete\nlist of warnings with the call stack in the function and fix the\ndeepest part of the call stack, which will usually fix many of the\nother no_return errors."},"filterText":"NoReturn","insertText":"NoReturn","insertTextFormat":2,"kind":9,"label":"NoReturn","labelDetails":{"description":"alias DialyxirVendored.Warnings.NoReturn"},"sortText":"00001194","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.NoTaskError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"NoTaskError\n"},"filterText":"NoTaskError","insertText":"NoTaskError","insertTextFormat":2,"kind":22,"label":"NoTaskError","labelDetails":{"description":"alias Mix.NoTaskError","detail":"exception"},"sortText":"00001195","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Normalized\n"},"filterText":"Normalized","insertText":"Normalized","insertTextFormat":2,"kind":9,"label":"Normalized","labelDetails":{"description":"alias ElixirSense.Core.Normalized","detail":"alias"},"sortText":"00001196","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Code.Normalizer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Normalizer\n"},"filterText":"Normalizer","insertText":"Normalizer","insertTextFormat":2,"kind":9,"label":"Normalizer","labelDetails":{"description":"alias Code.Normalizer"},"sortText":"00001197","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.Types.Of\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Of\n"},"filterText":"Of","insertText":"Of","insertTextFormat":2,"kind":9,"label":"Of","labelDetails":{"description":"alias Module.Types.Of"},"sortText":"00001198","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.OnExitHandler\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"OnExitHandler\n"},"filterText":"OnExitHandler","insertText":"OnExitHandler","insertTextFormat":2,"kind":9,"label":"OnExitHandler","labelDetails":{"description":"alias ExUnit.OnExitHandler"},"sortText":"00001199","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.OnTypeFormatting\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"OnTypeFormatting\nProvides smart automatic insertion of \"end\" when the user hits enter after \"do\" or \"->\""},"filterText":"OnTypeFormatting","insertText":"OnTypeFormatting","insertTextFormat":2,"kind":9,"label":"OnTypeFormatting","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.OnTypeFormatting"},"sortText":"00001200","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.OpaqueEquality\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"OpaqueEquality\n"},"filterText":"OpaqueEquality","insertText":"OpaqueEquality","insertTextFormat":2,"kind":9,"label":"OpaqueEquality","labelDetails":{"description":"alias DialyxirVendored.Warnings.OpaqueEquality"},"sortText":"00001201","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.OpaqueGuard\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"OpaqueGuard\n"},"filterText":"OpaqueGuard","insertText":"OpaqueGuard","insertTextFormat":2,"kind":9,"label":"OpaqueGuard","labelDetails":{"description":"alias DialyxirVendored.Warnings.OpaqueGuard"},"sortText":"00001202","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.OpaqueMatch\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"OpaqueMatch\nAttempted to pattern match against the internal structure of an\nopaque term."},"filterText":"OpaqueMatch","insertText":"OpaqueMatch","insertTextFormat":2,"kind":9,"label":"OpaqueMatch","labelDetails":{"description":"alias DialyxirVendored.Warnings.OpaqueMatch"},"sortText":"00001203","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.OpaqueNonequality\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"OpaqueNonequality\n"},"filterText":"OpaqueNonequality","insertText":"OpaqueNonequality","insertTextFormat":2,"kind":9,"label":"OpaqueNonequality","labelDetails":{"description":"alias DialyxirVendored.Warnings.OpaqueNonequality"},"sortText":"00001204","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.OpaqueTypeTest\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"OpaqueTypeTest\n"},"filterText":"OpaqueTypeTest","insertText":"OpaqueTypeTest","insertTextFormat":2,"kind":9,"label":"OpaqueTypeTest","labelDetails":{"description":"alias DialyxirVendored.Warnings.OpaqueTypeTest"},"sortText":"00001205","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Plugins.Option\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Option\n"},"filterText":"Option","insertText":"Option","insertTextFormat":2,"kind":9,"label":"Option","labelDetails":{"description":"alias ElixirSense.Plugins.Option"},"sortText":"00001206","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Inspect.Opts\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Opts\nDefines the options used by the `Inspect` protocol."},"filterText":"Opts","insertText":"Opts","insertTextFormat":2,"kind":22,"label":"Opts","labelDetails":{"description":"alias Inspect.Opts","detail":"struct"},"sortText":"00001207","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.Opts\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Opts\nSet default opts for all requests."},"filterText":"Opts","insertText":"Opts","insertTextFormat":2,"kind":9,"label":"Opts","labelDetails":{"description":"alias Tesla.Middleware.Opts"},"sortText":"00001208","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.OrderedObject\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"OrderedObject\n"},"filterText":"OrderedObject","insertText":"OrderedObject","insertTextFormat":2,"kind":22,"label":"OrderedObject","labelDetails":{"description":"alias Jason.OrderedObject","detail":"struct"},"sortText":"00001209","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.OrderedObject\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"OrderedObject\n"},"filterText":"OrderedObject","insertText":"OrderedObject","insertTextFormat":2,"kind":22,"label":"OrderedObject","labelDetails":{"description":"alias JasonV.OrderedObject","detail":"struct"},"sortText":"00001210","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API.Key.Organization\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Organization\n"},"filterText":"Organization","insertText":"Organization","insertTextFormat":2,"kind":9,"label":"Organization","labelDetails":{"description":"alias Hex.API.Key.Organization"},"sortText":"00001211","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Enum.OutOfBoundsError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"OutOfBoundsError\n"},"filterText":"OutOfBoundsError","insertText":"OutOfBoundsError","insertTextFormat":2,"kind":22,"label":"OutOfBoundsError","labelDetails":{"description":"alias Enum.OutOfBoundsError","detail":"exception"},"sortText":"00001212","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Output\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Output\n"},"filterText":"Output","insertText":"Output","insertTextFormat":2,"kind":9,"label":"Output","labelDetails":{"description":"alias DialyxirVendored.Output"},"sortText":"00001213","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Utils.OutputDevice\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"OutputDevice\nIntercepts IO request messages and forwards them to the Output server to be sent as events to\nthe IDE. Implements [Erlang I/O Protocol](https://erlang.org/doc/apps/stdlib/io_protocol.html)\n"},"filterText":"OutputDevice","insertText":"OutputDevice","insertTextFormat":2,"kind":9,"label":"OutputDevice","labelDetails":{"description":"alias ElixirLS.Utils.OutputDevice"},"sortText":"00001214","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.OverlappingContract\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"OverlappingContract\nThe function has an additional @spec that is already covered more\ngenerally by a higher @spec."},"filterText":"OverlappingContract","insertText":"OverlappingContract","insertTextFormat":2,"kind":9,"label":"OverlappingContract","labelDetails":{"description":"alias DialyxirVendored.Warnings.OverlappingContract"},"sortText":"00001215","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.Overridable\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Overridable\n"},"filterText":"Overridable","insertText":"Overridable","insertTextFormat":2,"kind":9,"label":"Overridable","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.Overridable"},"sortText":"00001216","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API.Package.Owner\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Owner\n"},"filterText":"Owner","insertText":"Owner","insertTextFormat":2,"kind":9,"label":"Owner","labelDetails":{"description":"alias Hex.API.Package.Owner"},"sortText":"00001217","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Crypto.PBES2_HMAC_SHA2\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"PBES2_HMAC_SHA2\n"},"filterText":"PBES2_HMAC_SHA2","insertText":"PBES2_HMAC_SHA2","insertTextFormat":2,"kind":9,"label":"PBES2_HMAC_SHA2","labelDetails":{"description":"alias Hex.Crypto.PBES2_HMAC_SHA2"},"sortText":"00001218","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Crypto.PKCS5\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"PKCS5\n"},"filterText":"PKCS5","insertText":"PKCS5","insertTextFormat":2,"kind":9,"label":"PKCS5","labelDetails":{"description":"alias Hex.Crypto.PKCS5"},"sortText":"00001219","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API.Package\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Package\n"},"filterText":"Package","insertText":"Package","insertTextFormat":2,"kind":9,"label":"Package","labelDetails":{"description":"alias Hex.API.Package"},"sortText":"00001220","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Package\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Package\n"},"filterText":"Package","insertText":"Package","insertTextFormat":2,"kind":9,"label":"Package","labelDetails":{"description":"alias Hex.Package"},"sortText":"00001221","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.PackageLister\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"PackageLister\n"},"filterText":"PackageLister","insertText":"PackageLister","insertTextFormat":2,"kind":22,"label":"PackageLister","labelDetails":{"description":"alias Hex.Solver.PackageLister","detail":"struct"},"sortText":"00001222","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.PackageRange\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"PackageRange\n"},"filterText":"PackageRange","insertText":"PackageRange","insertTextFormat":2,"kind":22,"label":"PackageRange","labelDetails":{"description":"alias Hex.Solver.PackageRange","detail":"struct"},"sortText":"00001223","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Utils.PacketStream\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"PacketStream\nReads from an IO device and provides a stream of incoming packets\n"},"filterText":"PacketStream","insertText":"PacketStream","insertTextFormat":2,"kind":9,"label":"PacketStream","labelDetails":{"description":"alias ElixirLS.Utils.PacketStream"},"sortText":"00001224","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Parallel\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Parallel\n"},"filterText":"Parallel","insertText":"Parallel","insertTextFormat":2,"kind":9,"label":"Parallel","labelDetails":{"description":"alias Hex.Parallel"},"sortText":"00001225","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.ParallelChecker\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ParallelChecker\n"},"filterText":"ParallelChecker","insertText":"ParallelChecker","insertTextFormat":2,"kind":9,"label":"ParallelChecker","labelDetails":{"description":"alias Module.ParallelChecker"},"sortText":"00001226","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Kernel.ParallelCompiler\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ParallelCompiler\nA module responsible for compiling and requiring files in parallel.\n"},"filterText":"ParallelCompiler","insertText":"ParallelCompiler","insertTextFormat":2,"kind":9,"label":"ParallelCompiler","labelDetails":{"description":"alias Kernel.ParallelCompiler"},"sortText":"00001227","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Kernel.ParallelRequire\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ParallelRequire\n"},"filterText":"ParallelRequire","insertText":"ParallelRequire","insertTextFormat":2,"kind":9,"label":"ParallelRequire","labelDetails":{"description":"alias Kernel.ParallelRequire"},"sortText":"00001228","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.Params\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Params\n"},"filterText":"Params","insertText":"Params","insertTextFormat":2,"kind":9,"label":"Params","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.Params"},"sortText":"00001229","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.Parse\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Parse\n"},"filterText":"Parse","insertText":"Parse","insertTextFormat":2,"kind":9,"label":"Parse","labelDetails":{"description":"alias Erl2exVendored.Pipeline.Parse"},"sortText":"00001230","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias OptionParser.ParseError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"ParseError\n"},"filterText":"ParseError","insertText":"ParseError","insertTextFormat":2,"kind":22,"label":"ParseError","labelDetails":{"description":"alias OptionParser.ParseError","detail":"exception"},"sortText":"00001231","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Parser\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Parser\nCore Parser\n"},"filterText":"Parser","insertText":"Parser","insertTextFormat":2,"kind":9,"label":"Parser","labelDetails":{"description":"alias ElixirSense.Core.Parser"},"sortText":"00001232","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Netrc.Parser\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Parser\n"},"filterText":"Parser","insertText":"Parser","insertTextFormat":2,"kind":9,"label":"Parser","labelDetails":{"description":"alias Hex.Netrc.Parser"},"sortText":"00001233","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Requirement.Parser\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Parser\n"},"filterText":"Parser","insertText":"Parser","insertTextFormat":2,"kind":9,"label":"Parser","labelDetails":{"description":"alias Hex.Solver.Requirement.Parser"},"sortText":"00001234","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias PathGlobVendored.Parser\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Parser\n"},"filterText":"Parser","insertText":"Parser","insertTextFormat":2,"kind":9,"label":"Parser","labelDetails":{"description":"alias PathGlobVendored.Parser"},"sortText":"00001235","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Version.Parser\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Parser\n"},"filterText":"Parser","insertText":"Parser","insertTextFormat":2,"kind":9,"label":"Parser","labelDetails":{"description":"alias Version.Parser"},"sortText":"00001236","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Multipart.Part\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Part\n"},"filterText":"Part","insertText":"Part","insertTextFormat":2,"kind":22,"label":"Part","labelDetails":{"description":"alias Tesla.Multipart.Part","detail":"struct"},"sortText":"00001237","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.PartialSolution\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"PartialSolution\n"},"filterText":"PartialSolution","insertText":"PartialSolution","insertTextFormat":2,"kind":22,"label":"PartialSolution","labelDetails":{"description":"alias Hex.Solver.PartialSolution","detail":"struct"},"sortText":"00001238","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Registry.Partition\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Partition\n"},"filterText":"Partition","insertText":"Partition","insertTextFormat":2,"kind":9,"label":"Partition","labelDetails":{"description":"alias Registry.Partition"},"sortText":"00001239","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.SourceFile.Path\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Path\n"},"filterText":"Path","insertText":"Path","insertTextFormat":2,"kind":9,"label":"Path","labelDetails":{"description":"alias ElixirLS.LanguageServer.SourceFile.Path"},"sortText":"00001240","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.SCM.Path\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Path\n"},"filterText":"Path","insertText":"Path","insertTextFormat":2,"kind":9,"label":"Path","labelDetails":{"description":"alias Mix.SCM.Path"},"sortText":"00001241","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.PathParams\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"PathParams\nUse templated URLs with separate params."},"filterText":"PathParams","insertText":"PathParams","insertTextFormat":2,"kind":9,"label":"PathParams","labelDetails":{"description":"alias Tesla.Middleware.PathParams"},"sortText":"00001242","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.Types.Pattern\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Pattern\n"},"filterText":"Pattern","insertText":"Pattern","insertTextFormat":2,"kind":9,"label":"Pattern","labelDetails":{"description":"alias Module.Types.Pattern"},"sortText":"00001243","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.PatternMatch\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"PatternMatch\nThe pattern matching is never given a value that satisfies all of\nits clauses."},"filterText":"PatternMatch","insertText":"PatternMatch","insertTextFormat":2,"kind":9,"label":"PatternMatch","labelDetails":{"description":"alias DialyxirVendored.Warnings.PatternMatch"},"sortText":"00001244","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.PatternMatchCovered\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"PatternMatchCovered\nThe pattern match has a later clause that will never be executed,\nbecause a more general clause is higher in the matching order."},"filterText":"PatternMatchCovered","insertText":"PatternMatchCovered","insertTextFormat":2,"kind":9,"label":"PatternMatchCovered","labelDetails":{"description":"alias DialyxirVendored.Warnings.PatternMatchCovered"},"sortText":"00001245","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Pipeline\n"},"filterText":"Pipeline","insertText":"Pipeline","insertTextFormat":2,"kind":9,"label":"Pipeline","labelDetails":{"description":"alias Erl2exVendored.Pipeline","detail":"alias"},"sortText":"00001246","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Plt\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Plt\n"},"filterText":"Plt","insertText":"Plt","insertTextFormat":2,"kind":9,"label":"Plt","labelDetails":{"description":"alias DialyxirVendored.Plt"},"sortText":"00001247","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Plugin\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Plugin\nA behaviour to implement for adding auto complete and snippets to elixir sense.\n"},"filterText":"Plugin","insertText":"Plugin","insertTextFormat":2,"kind":8,"label":"Plugin","labelDetails":{"description":"alias ElixirSense.Plugin","detail":"behaviour"},"sortText":"00001248","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Plugins\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Plugins\n"},"filterText":"Plugins","insertText":"Plugins","insertTextFormat":2,"kind":9,"label":"Plugins","labelDetails":{"description":"alias ElixirSense.Plugins","detail":"alias"},"sortText":"00001249","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Shell.Process\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Process\n"},"filterText":"Process","insertText":"Process","insertTextFormat":2,"kind":9,"label":"Process","labelDetails":{"description":"alias Hex.Shell.Process"},"sortText":"00001250","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Shell.Process\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Process\nMix shell that uses the current process mailbox for communication."},"filterText":"Process","insertText":"Process","insertTextFormat":2,"kind":9,"label":"Process","labelDetails":{"description":"alias Mix.Shell.Process"},"sortText":"00001251","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Project\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Project\n"},"filterText":"Project","insertText":"Project","insertTextFormat":2,"kind":9,"label":"Project","labelDetails":{"description":"alias DialyxirVendored.Project"},"sortText":"00001252","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Project\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Project\nDefines and manipulates Mix projects."},"filterText":"Project","insertText":"Project","insertTextFormat":2,"kind":9,"label":"Project","labelDetails":{"description":"alias Mix.Project"},"sortText":"00001253","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.ProjectStack\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ProjectStack\n"},"filterText":"ProjectStack","insertText":"ProjectStack","insertTextFormat":2,"kind":9,"label":"ProjectStack","labelDetails":{"description":"alias Mix.ProjectStack"},"sortText":"00001254","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Protocol\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Protocol\nMacros for requests and notifications in the Language Server Protocol\n"},"filterText":"Protocol","insertText":"Protocol","insertTextFormat":2,"kind":9,"label":"Protocol","labelDetails":{"description":"alias ElixirLS.LanguageServer.Protocol"},"sortText":"00001255","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.Protocol\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Protocol\n"},"filterText":"Protocol","insertText":"Protocol","insertTextFormat":2,"kind":9,"label":"Protocol","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.Protocol"},"sortText":"00001256","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Config.Provider\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Provider\nSpecifies a provider API that loads configuration during boot."},"filterText":"Provider","insertText":"Provider","insertTextFormat":2,"kind":22,"label":"Provider","labelDetails":{"description":"alias Config.Provider","detail":"struct"},"sortText":"00001257","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Providers\n"},"filterText":"Providers","insertText":"Providers","insertTextFormat":2,"kind":9,"label":"Providers","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers","detail":"alias"},"sortText":"00001258","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Providers\n"},"filterText":"Providers","insertText":"Providers","insertTextFormat":2,"kind":9,"label":"Providers","labelDetails":{"description":"alias ElixirSense.Providers","detail":"alias"},"sortText":"00001259","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.Pry\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Pry\nThe low-level API for prying sessions and setting up breakpoints.\n"},"filterText":"Pry","insertText":"Pry","insertTextFormat":2,"kind":9,"label":"Pry","labelDetails":{"description":"alias IEx.Pry"},"sortText":"00001260","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Crypto.PublicKey\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"PublicKey\n"},"filterText":"PublicKey","insertText":"PublicKey","insertTextFormat":2,"kind":9,"label":"PublicKey","labelDetails":{"description":"alias Hex.Crypto.PublicKey"},"sortText":"00001261","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Plugins.Ecto.Query\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Query\n"},"filterText":"Query","insertText":"Query","insertTextFormat":2,"kind":9,"label":"Query","labelDetails":{"description":"alias ElixirSense.Plugins.Ecto.Query"},"sortText":"00001262","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.Query\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Query\nSet default query params for all requests"},"filterText":"Query","insertText":"Query","insertTextFormat":2,"kind":9,"label":"Query","labelDetails":{"description":"alias Tesla.Middleware.Query"},"sortText":"00001263","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Shell.Quiet\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Quiet\n"},"filterText":"Quiet","insertText":"Quiet","insertTextFormat":2,"kind":9,"label":"Quiet","labelDetails":{"description":"alias ElixirLS.Shell.Quiet"},"sortText":"00001264","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Shell.Quiet\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Quiet\nThis is Mix's default shell when the `MIX_QUIET` environment\nvariable is set."},"filterText":"Quiet","insertText":"Quiet","insertTextFormat":2,"kind":9,"label":"Quiet","labelDetails":{"description":"alias Mix.Shell.Quiet"},"sortText":"00001265","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Date.Range\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Range\nReturns an inclusive range between dates."},"filterText":"Range","insertText":"Range","insertTextFormat":2,"kind":22,"label":"Range","labelDetails":{"description":"alias Date.Range","detail":"struct"},"sortText":"00001266","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Constraints.Range\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Range\n"},"filterText":"Range","insertText":"Range","insertTextFormat":2,"kind":22,"label":"Range","labelDetails":{"description":"alias Hex.Solver.Constraints.Range","detail":"struct"},"sortText":"00001267","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Formatter.Raw\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Raw\n"},"filterText":"Raw","insertText":"Raw","insertTextFormat":2,"kind":9,"label":"Raw","labelDetails":{"description":"alias DialyxirVendored.Formatter.Raw"},"sortText":"00001268","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Config.Reader\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Reader\nAPI for reading config files defined with `Config`."},"filterText":"Reader","insertText":"Reader","insertTextFormat":2,"kind":9,"label":"Reader","labelDetails":{"description":"alias Config.Reader"},"sortText":"00001269","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Rebar\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Rebar\n"},"filterText":"Rebar","insertText":"Rebar","insertTextFormat":2,"kind":9,"label":"Rebar","labelDetails":{"description":"alias Mix.Rebar"},"sortText":"00001270","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.RecordConstruction\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"RecordConstruction\n"},"filterText":"RecordConstruction","insertText":"RecordConstruction","insertTextFormat":2,"kind":9,"label":"RecordConstruction","labelDetails":{"description":"alias DialyxirVendored.Warnings.RecordConstruction"},"sortText":"00001271","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.ModuleData.RecordData\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"RecordData\n"},"filterText":"RecordData","insertText":"RecordData","insertTextFormat":2,"kind":22,"label":"RecordData","labelDetails":{"description":"alias Erl2exVendored.Pipeline.ModuleData.RecordData","detail":"struct"},"sortText":"00001272","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.RecordMatching\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"RecordMatching\n"},"filterText":"RecordMatching","insertText":"RecordMatching","insertTextFormat":2,"kind":9,"label":"RecordMatching","labelDetails":{"description":"alias DialyxirVendored.Warnings.RecordMatching"},"sortText":"00001273","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Reducer\n"},"filterText":"Reducer","insertText":"Reducer","insertTextFormat":2,"kind":9,"label":"Reducer","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducer"},"sortText":"00001274","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Reducers\n"},"filterText":"Reducers","insertText":"Reducers","insertTextFormat":2,"kind":9,"label":"Reducers","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers","detail":"alias"},"sortText":"00001275","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Stream.Reducers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Reducers\n"},"filterText":"Reducers","insertText":"Reducers","insertTextFormat":2,"kind":9,"label":"Reducers","labelDetails":{"description":"alias Stream.Reducers"},"sortText":"00001276","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.References\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"References\nThis module provides References support by using `ElixirSense.references/3` to\nfind all references to any function or module identified at the provided\nlocation."},"filterText":"References","insertText":"References","insertTextFormat":2,"kind":9,"label":"References","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.References"},"sortText":"00001277","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.References\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"References\nThis module provides References to function or module identified at the provided location.\n"},"filterText":"References","insertText":"References","insertTextFormat":2,"kind":9,"label":"References","labelDetails":{"description":"alias ElixirSense.Providers.References"},"sortText":"00001278","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Registry\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Registry\n"},"filterText":"Registry","insertText":"Registry","insertTextFormat":2,"kind":9,"label":"Registry","labelDetails":{"description":"alias Hex.Registry","detail":"alias"},"sortText":"00001279","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Registry\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Registry\n"},"filterText":"Registry","insertText":"Registry","insertTextFormat":2,"kind":8,"label":"Registry","labelDetails":{"description":"alias Hex.Solver.Registry","detail":"behaviour"},"sortText":"00001280","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API.Release\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Release\n"},"filterText":"Release","insertText":"Release","insertTextFormat":2,"kind":9,"label":"Release","labelDetails":{"description":"alias Hex.API.Release"},"sortText":"00001281","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Release\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Release\nDefines the release structure and convenience for assembling releases.\n"},"filterText":"Release","insertText":"Release","insertTextFormat":2,"kind":22,"label":"Release","labelDetails":{"description":"alias Mix.Release","detail":"struct"},"sortText":"00001282","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API.ReleaseDocs\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ReleaseDocs\n"},"filterText":"ReleaseDocs","insertText":"ReleaseDocs","insertTextFormat":2,"kind":9,"label":"ReleaseDocs","labelDetails":{"description":"alias Hex.API.ReleaseDocs"},"sortText":"00001283","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.RemoteConverger\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"RemoteConverger\n"},"filterText":"RemoteConverger","insertText":"RemoteConverger","insertTextFormat":2,"kind":9,"label":"RemoteConverger","labelDetails":{"description":"alias Hex.RemoteConverger"},"sortText":"00001284","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.RemoteConverger\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"RemoteConverger\n"},"filterText":"RemoteConverger","insertText":"RemoteConverger","insertTextFormat":2,"kind":8,"label":"RemoteConverger","labelDetails":{"description":"alias Mix.RemoteConverger","detail":"behaviour"},"sortText":"00001285","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias File.RenameError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"RenameError\n"},"filterText":"RenameError","insertText":"RenameError","insertTextFormat":2,"kind":22,"label":"RenameError","labelDetails":{"description":"alias File.RenameError","detail":"exception"},"sortText":"00001286","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Repo\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Repo\n"},"filterText":"Repo","insertText":"Repo","insertTextFormat":2,"kind":9,"label":"Repo","labelDetails":{"description":"alias Hex.Repo"},"sortText":"00001287","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Requirement\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Requirement\n"},"filterText":"Requirement","insertText":"Requirement","insertTextFormat":2,"kind":9,"label":"Requirement","labelDetails":{"description":"alias Hex.Solver.Requirement"},"sortText":"00001288","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Version.Requirement\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Requirement\nA struct that holds version requirement information."},"filterText":"Requirement","insertText":"Requirement","insertTextFormat":2,"kind":22,"label":"Requirement","labelDetails":{"description":"alias Version.Requirement","detail":"struct"},"sortText":"00001289","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.ReservedWords\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ReservedWords\nProvides docs on reserved words\n"},"filterText":"ReservedWords","insertText":"ReservedWords","insertTextFormat":2,"kind":9,"label":"ReservedWords","labelDetails":{"description":"alias ElixirSense.Core.ReservedWords"},"sortText":"00001290","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.ExecuteCommand.Restart\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Restart\n"},"filterText":"Restart","insertText":"Restart","insertTextFormat":2,"kind":9,"label":"Restart","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.ExecuteCommand.Restart"},"sortText":"00001291","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Results\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Results\nErl2exVendored.Results defines the structure of result data returned from most\nfunctions in the Erl2exVendored module.\n"},"filterText":"Results","insertText":"Results","insertTextFormat":2,"kind":22,"label":"Results","labelDetails":{"description":"alias Erl2exVendored.Results","detail":"struct"},"sortText":"00001292","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.Retry\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Retry\nRetry using exponential backoff and full jitter."},"filterText":"Retry","insertText":"Retry","insertTextFormat":2,"kind":9,"label":"Retry","labelDetails":{"description":"alias Tesla.Middleware.Retry"},"sortText":"00001293","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.Returns\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Returns\n"},"filterText":"Returns","insertText":"Returns","insertTextFormat":2,"kind":9,"label":"Returns","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.Returns"},"sortText":"00001294","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Dialyzer.Runner\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Runner\n"},"filterText":"Runner","insertText":"Runner","insertTextFormat":2,"kind":9,"label":"Runner","labelDetails":{"description":"alias DialyxirVendored.Dialyzer.Runner"},"sortText":"00001295","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.Runner\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Runner\n"},"filterText":"Runner","insertText":"Runner","insertTextFormat":2,"kind":9,"label":"Runner","labelDetails":{"description":"alias ExUnit.Runner"},"sortText":"00001296","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.RunnerStats\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"RunnerStats\n"},"filterText":"RunnerStats","insertText":"RunnerStats","insertTextFormat":2,"kind":9,"label":"RunnerStats","labelDetails":{"description":"alias ExUnit.RunnerStats"},"sortText":"00001297","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.SCM\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SCM\n"},"filterText":"SCM","insertText":"SCM","insertTextFormat":2,"kind":9,"label":"SCM","labelDetails":{"description":"alias Hex.SCM"},"sortText":"00001298","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.SCM\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"SCM\nThis module provides helper functions and defines the\nbehaviour required by any source code manager (SCM) used by Mix.\n"},"filterText":"SCM","insertText":"SCM","insertTextFormat":2,"kind":8,"label":"SCM","labelDetails":{"description":"alias Mix.SCM","detail":"behaviour"},"sortText":"00001299","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.HTTP.SSL\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SSL\n"},"filterText":"SSL","insertText":"SSL","insertTextFormat":2,"kind":9,"label":"SSL","labelDetails":{"description":"alias Hex.HTTP.SSL"},"sortText":"00001300","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Airthings.Samples\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Samples\n"},"filterText":"Samples","insertText":"Samples","insertTextFormat":2,"kind":22,"label":"Samples","labelDetails":{"description":"alias Airthings.Samples","detail":"struct"},"sortText":"00001301","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Plugins.Ecto.Schema\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Schema\n"},"filterText":"Schema","insertText":"Schema","insertTextFormat":2,"kind":9,"label":"Schema","labelDetails":{"description":"alias ElixirSense.Plugins.Ecto.Schema"},"sortText":"00001302","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias String.Tokenizer.ScriptSet\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ScriptSet\n"},"filterText":"ScriptSet","insertText":"ScriptSet","insertTextFormat":2,"kind":9,"label":"ScriptSet","labelDetails":{"description":"alias String.Tokenizer.ScriptSet"},"sortText":"00001303","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias String.Tokenizer.Security\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Security\n"},"filterText":"Security","insertText":"Security","insertTextFormat":2,"kind":9,"label":"Security","labelDetails":{"description":"alias String.Tokenizer.Security"},"sortText":"00001304","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IO.ANSI.Sequence\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Sequence\n"},"filterText":"Sequence","insertText":"Sequence","insertTextFormat":2,"kind":9,"label":"Sequence","labelDetails":{"description":"alias IO.ANSI.Sequence"},"sortText":"00001305","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Agent.Server\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Server\n"},"filterText":"Server","insertText":"Server","insertTextFormat":2,"kind":9,"label":"Server","labelDetails":{"description":"alias Agent.Server"},"sortText":"00001306","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Server\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Server\nLanguage Server Protocol server"},"filterText":"Server","insertText":"Server","insertTextFormat":2,"kind":22,"label":"Server","labelDetails":{"description":"alias ElixirLS.LanguageServer.Server","detail":"struct"},"sortText":"00001307","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.Server\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Server\n"},"filterText":"Server","insertText":"Server","insertTextFormat":2,"kind":9,"label":"Server","labelDetails":{"description":"alias ExUnit.Server"},"sortText":"00001308","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Registry.Server\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Server\n"},"filterText":"Server","insertText":"Server","insertTextFormat":2,"kind":9,"label":"Server","labelDetails":{"description":"alias Hex.Registry.Server"},"sortText":"00001309","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Server\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Server\n"},"filterText":"Server","insertText":"Server","insertTextFormat":2,"kind":9,"label":"Server","labelDetails":{"description":"alias Hex.Server"},"sortText":"00001310","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IEx.Server\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Server\nThe IEx.Server."},"filterText":"Server","insertText":"Server","insertTextFormat":2,"kind":22,"label":"Server","labelDetails":{"description":"alias IEx.Server","detail":"struct"},"sortText":"00001311","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Adapter.Shared\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Shared\n"},"filterText":"Shared","insertText":"Shared","insertTextFormat":2,"kind":9,"label":"Shared","labelDetails":{"description":"alias Tesla.Adapter.Shared"},"sortText":"00001312","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Shell\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Shell\n"},"filterText":"Shell","insertText":"Shell","insertTextFormat":2,"kind":9,"label":"Shell","labelDetails":{"description":"alias ElixirLS.Shell","detail":"alias"},"sortText":"00001313","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Shell\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Shell\n"},"filterText":"Shell","insertText":"Shell","insertTextFormat":2,"kind":9,"label":"Shell","labelDetails":{"description":"alias Hex.Shell"},"sortText":"00001314","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Shell\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Shell\nDefines `Mix.Shell` contract.\n"},"filterText":"Shell","insertText":"Shell","insertTextFormat":2,"kind":22,"label":"Shell","labelDetails":{"description":"alias Mix.Shell","detail":"struct"},"sortText":"00001315","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Formatter.Short\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Short\n"},"filterText":"Short","insertText":"Short","insertTextFormat":2,"kind":9,"label":"Short","labelDetails":{"description":"alias DialyxirVendored.Formatter.Short"},"sortText":"00001316","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API.ShortURL\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"ShortURL\n"},"filterText":"ShortURL","insertText":"ShortURL","insertTextFormat":2,"kind":9,"label":"ShortURL","labelDetails":{"description":"alias Hex.API.ShortURL"},"sortText":"00001317","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.Sigil\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Sigil\n"},"filterText":"Sigil","insertText":"Sigil","insertTextFormat":2,"kind":9,"label":"Sigil","labelDetails":{"description":"alias Jason.Sigil"},"sortText":"00001318","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Sigil\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Sigil\n"},"filterText":"Sigil","insertText":"Sigil","insertTextFormat":2,"kind":9,"label":"Sigil","labelDetails":{"description":"alias JasonV.Sigil"},"sortText":"00001319","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias System.SignalHandler\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SignalHandler\n"},"filterText":"SignalHandler","insertText":"SignalHandler","insertTextFormat":2,"kind":9,"label":"SignalHandler","labelDetails":{"description":"alias System.SignalHandler"},"sortText":"00001320","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Signature\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Signature\nProvider responsible for introspection information about function signatures.\n"},"filterText":"Signature","insertText":"Signature","insertTextFormat":2,"kind":9,"label":"Signature","labelDetails":{"description":"alias ElixirSense.Providers.Signature"},"sortText":"00001321","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.SignatureHelp\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SignatureHelp\n"},"filterText":"SignatureHelp","insertText":"SignatureHelp","insertTextFormat":2,"kind":9,"label":"SignatureHelp","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.SignatureHelp"},"sortText":"00001322","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Sink\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Sink\nErl2exVendored.Sink is a process that consumes generated Elixir source, normally\nwriting files to the file system.\n"},"filterText":"Sink","insertText":"Sink","insertTextFormat":2,"kind":9,"label":"Sink","labelDetails":{"description":"alias Erl2exVendored.Sink"},"sortText":"00001323","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias EEx.SmartEngine\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SmartEngine\nThe default engine used by EEx."},"filterText":"SmartEngine","insertText":"SmartEngine","insertTextFormat":2,"kind":9,"label":"SmartEngine","labelDetails":{"description":"alias EEx.SmartEngine"},"sortText":"00001324","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Solver\n"},"filterText":"Solver","insertText":"Solver","insertTextFormat":2,"kind":9,"label":"Solver","labelDetails":{"description":"alias Hex.Solver"},"sortText":"00001325","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Solver\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Solver\n"},"filterText":"Solver","insertText":"Solver","insertTextFormat":2,"kind":9,"label":"Solver","labelDetails":{"description":"alias Hex.Solver.Solver"},"sortText":"00001326","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Source\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Source\nSource parsing\n"},"filterText":"Source","insertText":"Source","insertTextFormat":2,"kind":9,"label":"Source","labelDetails":{"description":"alias ElixirSense.Core.Source"},"sortText":"00001327","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Source\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Source\nErl2exVendored.Source is a process that produces Erlang source, normally reading\nfiles from the file system.\n"},"filterText":"Source","insertText":"Source","insertTextFormat":2,"kind":9,"label":"Source","labelDetails":{"description":"alias Erl2exVendored.Source"},"sortText":"00001328","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.SourceFile\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"SourceFile\n"},"filterText":"SourceFile","insertText":"SourceFile","insertTextFormat":2,"kind":22,"label":"SourceFile","labelDetails":{"description":"alias ElixirLS.LanguageServer.SourceFile","detail":"struct"},"sortText":"00001329","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.State.SpecInfo\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"SpecInfo\nType definition info\n"},"filterText":"SpecInfo","insertText":"SpecInfo","insertTextFormat":2,"kind":22,"label":"SpecInfo","labelDetails":{"description":"alias ElixirSense.Core.State.SpecInfo","detail":"struct"},"sortText":"00001330","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Kernel.SpecialForms\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SpecialForms\nSpecial forms are the basic building blocks of Elixir, and therefore\ncannot be overridden by the developer."},"filterText":"SpecialForms","insertText":"SpecialForms","insertTextFormat":2,"kind":9,"label":"SpecialForms","labelDetails":{"description":"alias Kernel.SpecialForms"},"sortText":"00001331","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.FoldingRange.SpecialToken\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SpecialToken\nCode folding based on \"special\" tokens."},"filterText":"SpecialToken","insertText":"SpecialToken","insertTextFormat":2,"kind":9,"label":"SpecialToken","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.FoldingRange.SpecialToken"},"sortText":"00001332","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Sponsor\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Sponsor\n"},"filterText":"Sponsor","insertText":"Sponsor","insertTextFormat":2,"kind":9,"label":"Sponsor","labelDetails":{"description":"alias Hex.Sponsor"},"sortText":"00001333","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias File.Stat\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Stat\nA struct that holds file information."},"filterText":"Stat","insertText":"Stat","insertTextFormat":2,"kind":22,"label":"Stat","labelDetails":{"description":"alias File.Stat","detail":"struct"},"sortText":"00001334","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.State\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"State\nCore State\n"},"filterText":"State","insertText":"State","insertTextFormat":2,"kind":22,"label":"State","labelDetails":{"description":"alias ElixirSense.Core.State","detail":"struct"},"sortText":"00001335","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Results.Collector.State\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"State\n"},"filterText":"State","insertText":"State","insertTextFormat":2,"kind":22,"label":"State","labelDetails":{"description":"alias Erl2exVendored.Results.Collector.State","detail":"struct"},"sortText":"00001336","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Sink.State\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"State\n"},"filterText":"State","insertText":"State","insertTextFormat":2,"kind":22,"label":"State","labelDetails":{"description":"alias Erl2exVendored.Sink.State","detail":"struct"},"sortText":"00001337","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Source.State\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"State\n"},"filterText":"State","insertText":"State","insertTextFormat":2,"kind":22,"label":"State","labelDetails":{"description":"alias Erl2exVendored.Source.State","detail":"struct"},"sortText":"00001338","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.State\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"State\n"},"filterText":"State","insertText":"State","insertTextFormat":2,"kind":9,"label":"State","labelDetails":{"description":"alias Hex.State"},"sortText":"00001339","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.State\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"State\n"},"filterText":"State","insertText":"State","insertTextFormat":2,"kind":9,"label":"State","labelDetails":{"description":"alias Mix.State"},"sortText":"00001340","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Stdlib\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Stdlib\n"},"filterText":"Stdlib","insertText":"Stdlib","insertTextFormat":2,"kind":9,"label":"Stdlib","labelDetails":{"description":"alias Hex.Stdlib"},"sortText":"00001341","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias File.Stream\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Stream\nDefines a `File.Stream` struct returned by `File.stream!/3`."},"filterText":"Stream","insertText":"Stream","insertTextFormat":2,"kind":22,"label":"Stream","labelDetails":{"description":"alias File.Stream","detail":"struct"},"sortText":"00001342","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias GenEvent.Stream\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Stream\n"},"filterText":"Stream","insertText":"Stream","insertTextFormat":2,"kind":22,"label":"Stream","labelDetails":{"description":"alias GenEvent.Stream","detail":"struct"},"sortText":"00001343","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IO.Stream\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Stream\nDefines an `IO.Stream` struct returned by `IO.stream/2` and `IO.binstream/2`."},"filterText":"Stream","insertText":"Stream","insertTextFormat":2,"kind":22,"label":"Stream","labelDetails":{"description":"alias IO.Stream","detail":"struct"},"sortText":"00001344","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias IO.StreamError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"StreamError\n"},"filterText":"StreamError","insertText":"StreamError","insertTextFormat":2,"kind":22,"label":"StreamError","labelDetails":{"description":"alias IO.StreamError","detail":"exception"},"sortText":"00001345","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Struct\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Struct\n"},"filterText":"Struct","insertText":"Struct","insertTextFormat":2,"kind":9,"label":"Struct","labelDetails":{"description":"alias ElixirSense.Core.Struct"},"sortText":"00001346","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.Struct\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Struct\n"},"filterText":"Struct","insertText":"Struct","insertTextFormat":2,"kind":9,"label":"Struct","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.Struct"},"sortText":"00001347","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.State.StructInfo\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"StructInfo\nStructure definition info\n"},"filterText":"StructInfo","insertText":"StructInfo","insertTextFormat":2,"kind":22,"label":"StructInfo","labelDetails":{"description":"alias ElixirSense.Core.State.StructInfo","detail":"struct"},"sortText":"00001348","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Dialyzer.SuccessTypings\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SuccessTypings\n"},"filterText":"SuccessTypings","insertText":"SuccessTypings","insertTextFormat":2,"kind":9,"label":"SuccessTypings","labelDetails":{"description":"alias ElixirLS.LanguageServer.Dialyzer.SuccessTypings"},"sortText":"00001349","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Suggestion\nProvider responsible for finding suggestions for auto-completing."},"filterText":"Suggestion","insertText":"Suggestion","insertTextFormat":2,"kind":9,"label":"Suggestion","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion"},"sortText":"00001350","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Task.Supervised\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Supervised\n"},"filterText":"Supervised","insertText":"Supervised","insertTextFormat":2,"kind":9,"label":"Supervised","labelDetails":{"description":"alias Task.Supervised"},"sortText":"00001351","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Dialyzer.Supervisor\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Supervisor\n"},"filterText":"Supervisor","insertText":"Supervisor","insertTextFormat":2,"kind":9,"label":"Supervisor","labelDetails":{"description":"alias ElixirLS.LanguageServer.Dialyzer.Supervisor"},"sortText":"00001352","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Backends.Supervisor\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Supervisor\n"},"filterText":"Supervisor","insertText":"Supervisor","insertTextFormat":2,"kind":9,"label":"Supervisor","labelDetails":{"description":"alias Logger.Backends.Supervisor"},"sortText":"00001353","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Registry.Supervisor\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Supervisor\n"},"filterText":"Supervisor","insertText":"Supervisor","insertTextFormat":2,"kind":9,"label":"Supervisor","labelDetails":{"description":"alias Registry.Supervisor"},"sortText":"00001354","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Task.Supervisor\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Supervisor\nA task supervisor."},"filterText":"Supervisor","insertText":"Supervisor","insertTextFormat":2,"kind":9,"label":"Supervisor","labelDetails":{"description":"alias Task.Supervisor"},"sortText":"00001355","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.SurroundContext\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SurroundContext\n"},"filterText":"SurroundContext","insertText":"SurroundContext","insertTextFormat":2,"kind":9,"label":"SurroundContext","labelDetails":{"description":"alias ElixirSense.Core.SurroundContext"},"sortText":"00001356","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Protocol.SymbolInformation\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"SymbolInformation\nCorresponds to the LSP interface of the same name."},"filterText":"SymbolInformation","insertText":"SymbolInformation","insertTextFormat":2,"kind":22,"label":"SymbolInformation","labelDetails":{"description":"alias ElixirLS.LanguageServer.Protocol.SymbolInformation","detail":"struct"},"sortText":"00001357","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.SymbolUtils\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"SymbolUtils\n"},"filterText":"SymbolUtils","insertText":"SymbolUtils","insertTextFormat":2,"kind":9,"label":"SymbolUtils","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.SymbolUtils"},"sortText":"00001358","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias EEx.SyntaxError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"SyntaxError\n"},"filterText":"SyntaxError","insertText":"SyntaxError","insertTextFormat":2,"kind":22,"label":"SyntaxError","labelDetails":{"description":"alias EEx.SyntaxError","detail":"exception"},"sortText":"00001359","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Tar\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Tar\n"},"filterText":"Tar","insertText":"Tar","insertTextFormat":2,"kind":9,"label":"Tar","labelDetails":{"description":"alias Hex.Tar"},"sortText":"00001360","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Task\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Task\nProvides conveniences for creating, loading, and manipulating Mix tasks."},"filterText":"Task","insertText":"Task","insertTextFormat":2,"kind":8,"label":"Task","labelDetails":{"description":"alias Mix.Task","detail":"behaviour"},"sortText":"00001361","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Mix.TaskDescription\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"TaskDescription\n"},"filterText":"TaskDescription","insertText":"TaskDescription","insertTextFormat":2,"kind":8,"label":"TaskDescription","labelDetails":{"description":"alias Hex.Mix.TaskDescription","detail":"behaviour"},"sortText":"00001362","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Tasks\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Tasks\n"},"filterText":"Tasks","insertText":"Tasks","insertTextFormat":2,"kind":9,"label":"Tasks","labelDetails":{"description":"alias Mix.Tasks","detail":"alias"},"sortText":"00001363","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.TasksServer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"TasksServer\n"},"filterText":"TasksServer","insertText":"TasksServer","insertTextFormat":2,"kind":9,"label":"TasksServer","labelDetails":{"description":"alias Mix.TasksServer"},"sortText":"00001364","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Term\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Term\n"},"filterText":"Term","insertText":"Term","insertTextFormat":2,"kind":22,"label":"Term","labelDetails":{"description":"alias Hex.Solver.Term","detail":"struct"},"sortText":"00001365","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.CodeLens.Test\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Test\nIdentifies test execution targets and provides code lenses for automatically executing them."},"filterText":"Test","insertText":"Test","insertTextFormat":2,"kind":9,"label":"Test","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.CodeLens.Test"},"sortText":"00001366","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.Test\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Test\nA struct that keeps information about the test."},"filterText":"Test","insertText":"Test","insertTextFormat":2,"kind":22,"label":"Test","labelDetails":{"description":"alias ExUnit.Test","detail":"struct"},"sortText":"00001367","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Compilers.Test\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Test\n"},"filterText":"Test","insertText":"Test","insertTextFormat":2,"kind":9,"label":"Test","labelDetails":{"description":"alias Mix.Compilers.Test"},"sortText":"00001368","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.CodeLens.Test.TestBlock\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"TestBlock\n"},"filterText":"TestBlock","insertText":"TestBlock","insertTextFormat":2,"kind":22,"label":"TestBlock","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.CodeLens.Test.TestBlock","detail":"struct"},"sortText":"00001369","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.TestCase\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"TestCase\n"},"filterText":"TestCase","insertText":"TestCase","insertTextFormat":2,"kind":22,"label":"TestCase","labelDetails":{"description":"alias ExUnit.TestCase","detail":"struct"},"sortText":"00001370","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.TestModule\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"TestModule\nA struct that keeps information about the test module."},"filterText":"TestModule","insertText":"TestModule","insertTextFormat":2,"kind":22,"label":"TestModule","labelDetails":{"description":"alias ExUnit.TestModule","detail":"struct"},"sortText":"00001371","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Protocol.TextEdit\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"TextEdit\nCorresponds to the LSP interface of the same name."},"filterText":"TextEdit","insertText":"TextEdit","insertTextFormat":2,"kind":22,"label":"TextEdit","labelDetails":{"description":"alias ElixirLS.LanguageServer.Protocol.TextEdit","detail":"struct"},"sortText":"00001372","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Calendar.TimeZoneDatabase\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"TimeZoneDatabase\nThis module defines a behaviour for providing time zone data."},"filterText":"TimeZoneDatabase","insertText":"TimeZoneDatabase","insertTextFormat":2,"kind":8,"label":"TimeZoneDatabase","labelDetails":{"description":"alias Calendar.TimeZoneDatabase","detail":"behaviour"},"sortText":"00001373","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Tesla.Middleware.Timeout\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Timeout\nTimeout HTTP request after X milliseconds."},"filterText":"Timeout","insertText":"Timeout","insertTextFormat":2,"kind":9,"label":"Timeout","labelDetails":{"description":"alias Tesla.Middleware.Timeout"},"sortText":"00001374","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ExUnit.TimeoutError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"TimeoutError\n"},"filterText":"TimeoutError","insertText":"TimeoutError","insertTextFormat":2,"kind":22,"label":"TimeoutError","labelDetails":{"description":"alias ExUnit.TimeoutError","detail":"exception"},"sortText":"00001375","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.FoldingRange.Token\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Token\nThis module normalizes the tokens provided by"},"filterText":"Token","insertText":"Token","insertTextFormat":2,"kind":9,"label":"Token","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.FoldingRange.Token"},"sortText":"00001376","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.FoldingRange.TokenPair\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"TokenPair\nCode folding based on pairs of tokens"},"filterText":"TokenPair","insertText":"TokenPair","insertTextFormat":2,"kind":9,"label":"TokenPair","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.FoldingRange.TokenPair"},"sortText":"00001377","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized.Tokenizer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Tokenizer\nHandles tokenization of Elixir code snippets"},"filterText":"Tokenizer","insertText":"Tokenizer","insertTextFormat":2,"kind":9,"label":"Tokenizer","labelDetails":{"description":"alias ElixirSense.Core.Normalized.Tokenizer"},"sortText":"00001378","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias String.Tokenizer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Tokenizer\n"},"filterText":"Tokenizer","insertText":"Tokenizer","insertTextFormat":2,"kind":9,"label":"Tokenizer","labelDetails":{"description":"alias String.Tokenizer"},"sortText":"00001379","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Tracer\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Tracer\n"},"filterText":"Tracer","insertText":"Tracer","insertTextFormat":2,"kind":9,"label":"Tracer","labelDetails":{"description":"alias ElixirLS.LanguageServer.Tracer"},"sortText":"00001380","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Translator\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Translator\nDefault translation for Erlang log messages."},"filterText":"Translator","insertText":"Translator","insertTextFormat":2,"kind":8,"label":"Translator","labelDetails":{"description":"alias Logger.Translator","detail":"behaviour"},"sortText":"00001381","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.TypeAst\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"TypeAst\n"},"filterText":"TypeAst","insertText":"TypeAst","insertTextFormat":2,"kind":9,"label":"TypeAst","labelDetails":{"description":"alias ElixirSense.Core.TypeAst"},"sortText":"00001382","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.State.TypeInfo\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"TypeInfo\nType definition info\n"},"filterText":"TypeInfo","insertText":"TypeInfo","insertTextFormat":2,"kind":22,"label":"TypeInfo","labelDetails":{"description":"alias ElixirSense.Core.State.TypeInfo","detail":"struct"},"sortText":"00001383","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.TypeInfo\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"TypeInfo\n"},"filterText":"TypeInfo","insertText":"TypeInfo","insertTextFormat":2,"kind":9,"label":"TypeInfo","labelDetails":{"description":"alias ElixirSense.Core.TypeInfo"},"sortText":"00001384","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.CodeLens.TypeSpec\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"TypeSpec\nCollects the success typings inferred by Dialyzer, translates the syntax to Elixir, and shows them\ninline in the editor as @spec suggestions."},"filterText":"TypeSpec","insertText":"TypeSpec","insertTextFormat":2,"kind":9,"label":"TypeSpec","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.CodeLens.TypeSpec"},"sortText":"00001385","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Providers.Suggestion.Reducers.TypeSpecs\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"TypeSpecs\n"},"filterText":"TypeSpecs","insertText":"TypeSpecs","insertTextFormat":2,"kind":9,"label":"TypeSpecs","labelDetails":{"description":"alias ElixirSense.Providers.Suggestion.Reducers.TypeSpecs"},"sortText":"00001386","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Plugins.Ecto.Types\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Types\n"},"filterText":"Types","insertText":"Types","insertTextFormat":2,"kind":9,"label":"Types","labelDetails":{"description":"alias ElixirSense.Plugins.Ecto.Types"},"sortText":"00001387","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.Types\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Types\n"},"filterText":"Types","insertText":"Types","insertTextFormat":2,"kind":9,"label":"Types","labelDetails":{"description":"alias Module.Types"},"sortText":"00001388","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Code.Typespec\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Typespec\n"},"filterText":"Typespec","insertText":"Typespec","insertTextFormat":2,"kind":9,"label":"Typespec","labelDetails":{"description":"alias Code.Typespec"},"sortText":"00001389","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized.Code.ElixirSense.Typespec\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Typespec\n"},"filterText":"Typespec","insertText":"Typespec","insertTextFormat":2,"kind":9,"label":"Typespec","labelDetails":{"description":"alias ElixirSense.Core.Normalized.Code.ElixirSense.Typespec"},"sortText":"00001390","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.Normalized.Typespec\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Typespec\nA module wrapping internal Elixir Code.Typespec APIs\n"},"filterText":"Typespec","insertText":"Typespec","insertTextFormat":2,"kind":9,"label":"Typespec","labelDetails":{"description":"alias ElixirSense.Core.Normalized.Typespec"},"sortText":"00001391","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Kernel.Typespec\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Typespec\n"},"filterText":"Typespec","insertText":"Typespec","insertTextFormat":2,"kind":9,"label":"Typespec","labelDetails":{"description":"alias Kernel.Typespec"},"sortText":"00001392","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Kernel.TypespecError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"TypespecError\n"},"filterText":"TypespecError","insertText":"TypespecError","insertTextFormat":2,"kind":22,"label":"TypespecError","labelDetails":{"description":"alias Kernel.TypespecError","detail":"exception"},"sortText":"00001393","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Calendar.UTCOnlyTimeZoneDatabase\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"UTCOnlyTimeZoneDatabase\nBuilt-in time zone database that works only in the `Etc/UTC` timezone."},"filterText":"UTCOnlyTimeZoneDatabase","insertText":"UTCOnlyTimeZoneDatabase","insertTextFormat":2,"kind":9,"label":"UTCOnlyTimeZoneDatabase","labelDetails":{"description":"alias Calendar.UTCOnlyTimeZoneDatabase"},"sortText":"00001394","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Dep.Umbrella\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Umbrella\n"},"filterText":"Umbrella","insertText":"Umbrella","insertTextFormat":2,"kind":9,"label":"Umbrella","labelDetails":{"description":"alias Mix.Dep.Umbrella"},"sortText":"00001395","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Protocol.UndefinedError\n"}],"deprecated":false,"detail":"exception","documentation":{"kind":"markdown","value":"UndefinedError\n"},"filterText":"UndefinedError","insertText":"UndefinedError","insertTextFormat":2,"kind":22,"label":"UndefinedError","labelDetails":{"description":"alias Protocol.UndefinedError","detail":"exception"},"sortText":"00001396","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Jason.Decoder.Unescape\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Unescape\n"},"filterText":"Unescape","insertText":"Unescape","insertTextFormat":2,"kind":9,"label":"Unescape","labelDetails":{"description":"alias Jason.Decoder.Unescape"},"sortText":"00001397","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias JasonV.Decoder.Unescape\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Unescape\n"},"filterText":"Unescape","insertText":"Unescape","insertTextFormat":2,"kind":9,"label":"Unescape","labelDetails":{"description":"alias JasonV.Decoder.Unescape"},"sortText":"00001398","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias String.Unicode\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Unicode\n"},"filterText":"Unicode","insertText":"Unicode","insertTextFormat":2,"kind":9,"label":"Unicode","labelDetails":{"description":"alias String.Unicode"},"sortText":"00001399","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Module.Types.Unify\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Unify\n"},"filterText":"Unify","insertText":"Unify","insertTextFormat":2,"kind":9,"label":"Unify","labelDetails":{"description":"alias Module.Types.Unify"},"sortText":"00001400","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Constraints.Union\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"Union\n"},"filterText":"Union","insertText":"Union","insertTextFormat":2,"kind":22,"label":"Union","labelDetails":{"description":"alias Hex.Solver.Constraints.Union","detail":"struct"},"sortText":"00001401","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.UnknownBehaviour\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"UnknownBehaviour\n"},"filterText":"UnknownBehaviour","insertText":"UnknownBehaviour","insertTextFormat":2,"kind":9,"label":"UnknownBehaviour","labelDetails":{"description":"alias DialyxirVendored.Warnings.UnknownBehaviour"},"sortText":"00001402","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.UnknownFunction\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"UnknownFunction\n"},"filterText":"UnknownFunction","insertText":"UnknownFunction","insertTextFormat":2,"kind":9,"label":"UnknownFunction","labelDetails":{"description":"alias DialyxirVendored.Warnings.UnknownFunction"},"sortText":"00001403","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.UnknownType\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"UnknownType\nSpec references a missing @type."},"filterText":"UnknownType","insertText":"UnknownType","insertTextFormat":2,"kind":9,"label":"UnknownType","labelDetails":{"description":"alias DialyxirVendored.Warnings.UnknownType"},"sortText":"00001404","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.UnmatchedReturn\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"UnmatchedReturn\nThe invoked expression returns a union of types and the call does\nnot match on its return types using e.g. a case or wildcard."},"filterText":"UnmatchedReturn","insertText":"UnmatchedReturn","insertTextFormat":2,"kind":9,"label":"UnmatchedReturn","labelDetails":{"description":"alias DialyxirVendored.Warnings.UnmatchedReturn"},"sortText":"00001405","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings.UnusedFunction\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"UnusedFunction\nDue to issues higher in the function or call stack, while the\nfunction is recognized as used by the compiler, it will never be\nrecognized as having been called until the other error is resolved."},"filterText":"UnusedFunction","insertText":"UnusedFunction","insertTextFormat":2,"kind":9,"label":"UnusedFunction","labelDetails":{"description":"alias DialyxirVendored.Warnings.UnusedFunction"},"sortText":"00001406","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.UpdateChecker\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"UpdateChecker\n"},"filterText":"UpdateChecker","insertText":"UpdateChecker","insertTextFormat":2,"kind":9,"label":"UpdateChecker","labelDetails":{"description":"alias Hex.UpdateChecker"},"sortText":"00001407","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.API.User\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"User\n"},"filterText":"User","insertText":"User","insertTextFormat":2,"kind":9,"label":"User","labelDetails":{"description":"alias Hex.API.User"},"sortText":"00001408","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Plugins.Util\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Util\n"},"filterText":"Util","insertText":"Util","insertTextFormat":2,"kind":9,"label":"Util","labelDetails":{"description":"alias ElixirSense.Plugins.Util"},"sortText":"00001409","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Constraints.Util\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Util\n"},"filterText":"Util","insertText":"Util","insertTextFormat":2,"kind":9,"label":"Util","labelDetails":{"description":"alias Hex.Solver.Constraints.Util"},"sortText":"00001410","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Util\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Util\n"},"filterText":"Util","insertText":"Util","insertTextFormat":2,"kind":9,"label":"Util","labelDetails":{"description":"alias Hex.Solver.Util"},"sortText":"00001411","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Airthings.Utilities\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Utilities\n"},"filterText":"Utilities","insertText":"Utilities","insertTextFormat":2,"kind":9,"label":"Utilities","labelDetails":{"description":"alias Airthings.Utilities"},"sortText":"00001412","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Formatter.Utils\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Utils\n"},"filterText":"Utils","insertText":"Utils","insertTextFormat":2,"kind":9,"label":"Utils","labelDetails":{"description":"alias DialyxirVendored.Formatter.Utils"},"sortText":"00001413","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Dialyzer.Utils\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Utils\n"},"filterText":"Utils","insertText":"Utils","insertTextFormat":2,"kind":9,"label":"Utils","labelDetails":{"description":"alias ElixirLS.LanguageServer.Dialyzer.Utils"},"sortText":"00001414","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Utils\n"}],"deprecated":false,"detail":"alias","documentation":{"kind":"markdown","value":"Utils\n"},"filterText":"Utils","insertText":"Utils","insertTextFormat":2,"kind":9,"label":"Utils","labelDetails":{"description":"alias ElixirLS.Utils","detail":"alias"},"sortText":"00001415","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Erl2exVendored.Pipeline.Utils\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Utils\n"},"filterText":"Utils","insertText":"Utils","insertTextFormat":2,"kind":9,"label":"Utils","labelDetails":{"description":"alias Erl2exVendored.Pipeline.Utils"},"sortText":"00001416","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Utils\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Utils\n"},"filterText":"Utils","insertText":"Utils","insertTextFormat":2,"kind":9,"label":"Utils","labelDetails":{"description":"alias Hex.Utils"},"sortText":"00001417","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Kernel.Utils\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Utils\n"},"filterText":"Utils","insertText":"Utils","insertTextFormat":2,"kind":9,"label":"Utils","labelDetails":{"description":"alias Kernel.Utils"},"sortText":"00001418","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Utils\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Utils\n"},"filterText":"Utils","insertText":"Utils","insertTextFormat":2,"kind":9,"label":"Utils","labelDetails":{"description":"alias Logger.Utils"},"sortText":"00001419","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Mix.Utils\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Utils\n"},"filterText":"Utils","insertText":"Utils","insertTextFormat":2,"kind":9,"label":"Utils","labelDetails":{"description":"alias Mix.Utils"},"sortText":"00001420","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirSense.Core.State.VarInfo\n"}],"deprecated":false,"detail":"struct","documentation":{"kind":"markdown","value":"VarInfo\nVariable info\n"},"filterText":"VarInfo","insertText":"VarInfo","insertTextFormat":2,"kind":22,"label":"VarInfo","labelDetails":{"description":"alias ElixirSense.Core.State.VarInfo","detail":"struct"},"sortText":"00001421","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.HTTP.VerifyHostname\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"VerifyHostname\n"},"filterText":"VerifyHostname","insertText":"VerifyHostname","insertTextFormat":2,"kind":9,"label":"VerifyHostname","labelDetails":{"description":"alias Hex.HTTP.VerifyHostname"},"sortText":"00001422","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Hex.Solver.Constraints.Version\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Version\n"},"filterText":"Version","insertText":"Version","insertTextFormat":2,"kind":9,"label":"Version","labelDetails":{"description":"alias Hex.Solver.Constraints.Version"},"sortText":"00001423","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warning\n"}],"deprecated":false,"detail":"behaviour","documentation":{"kind":"markdown","value":"Warning\nBehaviour for defining warning semantics."},"filterText":"Warning","insertText":"Warning","insertTextFormat":2,"kind":8,"label":"Warning","labelDetails":{"description":"alias DialyxirVendored.Warning","detail":"behaviour"},"sortText":"00001424","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.WarningHelpers\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"WarningHelpers\n"},"filterText":"WarningHelpers","insertText":"WarningHelpers","insertTextFormat":2,"kind":9,"label":"WarningHelpers","labelDetails":{"description":"alias DialyxirVendored.WarningHelpers"},"sortText":"00001425","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias DialyxirVendored.Warnings\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Warnings\n"},"filterText":"Warnings","insertText":"Warnings","insertTextFormat":2,"kind":9,"label":"Warnings","labelDetails":{"description":"alias DialyxirVendored.Warnings"},"sortText":"00001426","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Backends.Watcher\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Watcher\n"},"filterText":"Watcher","insertText":"Watcher","insertTextFormat":2,"kind":9,"label":"Watcher","labelDetails":{"description":"alias Logger.Backends.Watcher"},"sortText":"00001427","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Path.Wildcard\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"Wildcard\n"},"filterText":"Wildcard","insertText":"Wildcard","insertTextFormat":2,"kind":9,"label":"Wildcard","labelDetails":{"description":"alias Path.Wildcard"},"sortText":"00001428","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.Utils.WireProtocol\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"WireProtocol\nReads and writes packets using the Language Server Protocol's wire protocol\n"},"filterText":"WireProtocol","insertText":"WireProtocol","insertTextFormat":2,"kind":9,"label":"WireProtocol","labelDetails":{"description":"alias ElixirLS.Utils.WireProtocol"},"sortText":"00001429","tags":[]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias ElixirLS.LanguageServer.Providers.WorkspaceSymbols\n"}],"deprecated":false,"detail":"module","documentation":{"kind":"markdown","value":"WorkspaceSymbols\nWorkspace Symbols provider. Generates and returns `SymbolInformation[]`."},"filterText":"WorkspaceSymbols","insertText":"WorkspaceSymbols","insertTextFormat":2,"kind":9,"label":"WorkspaceSymbols","labelDetails":{"description":"alias ElixirLS.LanguageServer.Providers.WorkspaceSymbols"},"sortText":"00001430","tags":[]},{"deprecated":true,"detail":"module","documentation":{"kind":"markdown","value":"Mechanism for handling behaviours."},"filterText":"Behaviour","insertText":"Behaviour","insertTextFormat":2,"kind":9,"label":"Behaviour","labelDetails":{"description":"Behaviour"},"sortText":"00001431","tags":[1]},{"deprecated":true,"detail":"module","documentation":{"kind":"markdown","value":"Generic API for dictionaries."},"filterText":"Dict","insertText":"Dict","insertTextFormat":2,"kind":9,"label":"Dict","labelDetails":{"description":"Dict"},"sortText":"00001432","tags":[1]},{"deprecated":true,"detail":"behaviour","documentation":{"kind":"markdown","value":"An event manager with event handlers behaviour."},"filterText":"GenEvent","insertText":"GenEvent","insertTextFormat":2,"kind":8,"label":"GenEvent","labelDetails":{"description":"GenEvent","detail":"behaviour"},"sortText":"00001433","tags":[1]},{"deprecated":true,"detail":"struct","documentation":{"kind":"markdown","value":"Tuple-based HashDict implementation."},"filterText":"HashDict","insertText":"HashDict","insertTextFormat":2,"kind":22,"label":"HashDict","labelDetails":{"description":"HashDict","detail":"struct"},"sortText":"00001434","tags":[1]},{"deprecated":true,"detail":"struct","documentation":{"kind":"markdown","value":"Tuple-based HashSet implementation."},"filterText":"HashSet","insertText":"HashSet","insertTextFormat":2,"kind":22,"label":"HashSet","labelDetails":{"description":"HashSet","detail":"struct"},"sortText":"00001435","tags":[1]},{"deprecated":true,"detail":"module","documentation":{"kind":"markdown","value":"Generic API for sets."},"filterText":"Set","insertText":"Set","insertTextFormat":2,"kind":9,"label":"Set","labelDetails":{"description":"Set"},"sortText":"00001436","tags":[1]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Logger.Backends.Console\n"}],"deprecated":true,"detail":"struct","documentation":{"kind":"markdown","value":"Console\nA logger backend that logs messages by printing them to the console."},"filterText":"Console","insertText":"Console","insertTextFormat":2,"kind":22,"label":"Console","labelDetails":{"description":"alias Logger.Backends.Console","detail":"struct"},"sortText":"00001437","tags":[1]},{"additionalTextEdits":[{"range":{"end":{"character":0,"line":3},"start":{"character":0,"line":3}},"newText":"  alias Supervisor.Spec\n"}],"deprecated":true,"detail":"module","documentation":{"kind":"markdown","value":"Spec\nOutdated functions for building child specifications."},"filterText":"Spec","insertText":"Spec","insertTextFormat":2,"kind":9,"label":"Spec","labelDetails":{"description":"alias Supervisor.Spec"},"sortText":"00001438","tags":[1]}]}}
